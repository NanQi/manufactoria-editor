{"version":3,"sources":["app.js","codeCell.js","copyTask.js","core.js","editor.js","graphics.js","gui.js","interpreter.js","loader.js","picker.js","program.js","tmath.js","view.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["\nimport program from \"program\";\nimport interpreter from \"interpreter\";\nimport graphics from \"graphics\";\nimport * as view from \"view\";\nimport tmath from \"tmath\";\nimport loader from \"loader\";\nimport editor from \"editor\";\nimport core from \"core\";\nimport {Palette, TileControl, PlayControl} from \"gui\";\n\n\nconst MARGIN = 10, // Space between elements\n      PROGRAM_WIDTH = 56 * 9, // program view width, not to exceed\n      PROGRAM_HEIGHT = PROGRAM_WIDTH,\n      CONTROL_X = MARGIN + PROGRAM_WIDTH + MARGIN;\n\nclass App {\n    constructor(width, height) {\n        this.program = null;\n        this.programView = null;\n        this.interpreter = null;\n        this.stepTime = 500; // default ms between steps\n        this.testCases = [];\n        this.currentTest = {\n            test: null,\n            index: 0\n        };\n        this.canvasSize = {\n            width: width,\n            height: height\n        };\n        const linkForm = $('#link-form');\n        linkForm.find('button').click(this.generateLink.bind(this));\n        linkForm.find('input').val('');\n        const loadForm = $('#load-form');\n        loadForm.find('button').click(this.loadLevel.bind(this));\n        this.controlsEl = $('#controls');\n        const stopButton = this.controlsEl.find('[data-action=stop]'), pauseButton = this.controlsEl.find('[data-action=pause]'), playButton = this.controlsEl.find('[data-action=run]');\n        stopButton.prop('disabled', true);\n        pauseButton.prop('disabled', true);\n        playButton.prop('disabled', false);\n\n        playButton.click(() => {\n            radio(\"play-clicked\").broadcast();\n        });\n\n        pauseButton.click(() => {\n            radio(\"pause-clicked\").broadcast();\n        });\n\n        stopButton.click(() => {\n            radio(\"stop-clicked\").broadcast();\n        });\n\n        radio(\"play-clicked\").subscribe(\n            () => {\n                if (!this.isRunning) {\n                    this.editor.disable();\n                    this.start();\n                    stopButton.prop('disabled', false);\n                    pauseButton.prop('disabled', false);\n                    playButton.prop('disabled', true);\n                } else if (this.isRunning && this.isPaused) {\n                    this.editor.disable();\n                    this.pause(false); // or unpause\n                    stopButton.prop('disabled', false);\n                    pauseButton.prop('disabled', false);\n                    playButton.prop('disabled', true);\n                }\n            }\n        );\n\n        radio(\"pause-clicked\").subscribe(\n            () => {\n                if (this.isRunning) {\n                    this.pause(true);\n                    stopButton.prop('disabled', false);\n                    pauseButton.prop('disabled', true);\n                    playButton.prop('disabled', false);\n                }\n            }\n        );\n\n        radio(\"stop-clicked\").subscribe(\n            () => {\n                this.stop();\n                this.editor.enable();\n                stopButton.prop('disabled', true);\n                pauseButton.prop('disabled', true);\n                playButton.prop('disabled', false);\n            }\n        );\n\n        let hash = window.location.hash;\n\n        if (hash) {\n            hash = decodeURI(hash.replace('#', '')).trim();\n            if (hash.startsWith('lvl')) {\n                this.program = program.readLegacyProgramString(hash);\n            } else {\n                const level = loader.fromJson(hash);\n                if (level) {\n                    this.program = level.program;\n                    this.testCases = level.testCases;\n                } else {\n                    // Error case\n                    console.log('Unable to load program string');\n                }\n            }\n        }\n    }\n    loadLevel() {\n        let loadForm = $('#load-form'), levelString = loadForm.find('input').val().trim(), newProgram = null;\n        if (levelString.startsWith('lvl')) {\n            newProgram = program.readLegacyProgramString(levelString);\n        } else {\n            const level = loader.fromJson(levelString);\n            if (level) {\n                newProgram = level.program;\n                this.testCases = level.testCases;\n            } else {\n                // Error case\n                console.log('Unable to load program string');\n            }\n        }\n        if (newProgram) {\n            this.program = newProgram;\n            this.programView.setProgram(newProgram);\n            this.programView.drawProgram();\n        }\n    }\n    generateLink() {\n        if (this.program != null && this.testCases != null) {\n            let link = `${ window.location.href.split('#')[0] }#`;\n            link += loader.toJson('Sample', this.testCases, this.program);\n            $('#link-form').find('input').val(decodeURI(link));\n        }\n    }\n    main() {\n        let paper = Snap(document.getElementById('main-svg'));\n\n        setViewbox(paper.node, 0, 0, this.canvasSize.width, this.canvasSize.height);\n\n        const bounds = paper.node.viewBox.baseVal;\n        paper.rect(bounds.x, bounds.y, bounds.width, bounds.height).addClass('game-bg');\n        this.paper = paper;\n        this.scratch = paper.g();\n        // Set up UI elements\n        graphics.preload(paper).then(function () {\n\n            const programLayer = paper.g().addClass('program-layer');\n            //paper.appendTo(document.getElementById(\"main\"));\n\n            const CONTROL_WIDTH = this.canvasSize.width - CONTROL_X;\n\n            if (this.program == null) {\n                this.program = new program.Program(9, 9);\n                // fill in start and end with defaults\n                this.program.setStart(4, 0);\n                this.program.setEnd(4, 8);\n            }\n\n            this.programView = new view.ProgramView(programLayer, MARGIN, MARGIN, this.program, 56*9, 56*9);\n\n            this.palette = new Palette(\n                paper,\n                CONTROL_X + CONTROL_WIDTH / 8,\n                this.canvasSize.height / 2,\n                CONTROL_WIDTH * 3 / 4,\n                4\n            );\n\n            this.tileControl = new TileControl(\n                paper,\n                CONTROL_X + 40, // x\n                MARGIN, // y\n                CONTROL_WIDTH / 2 - MARGIN / 2, // width\n                0    // height\n            );\n\n            this.playButton = new PlayControl(\n                paper,\n                CONTROL_X,\n                this.canvasSize.height - 68 - MARGIN,\n                68\n            );\n\n            this.playButton.x = CONTROL_X + CONTROL_WIDTH / 2 - this.playButton.width / 2;\n\n            this.editor = new editor.Editor(paper, this.programView, this.tileControl);\n\n            this.programView.drawProgram();\n\n            editor.init();\n\n            this.editor.enable();\n\n        }.bind(this));\n    }\n    drawToken(mat, animate, callback) {\n        if (!this.token) {\n            this.token = this.paper.circle(0, 0, 10);\n        }\n        this.paper.append(this.token);\n        // make sure token is on top\n        let head = this.tapeView.tape.head(), fill;\n        if (head && head.symbol != 'empty') {\n            fill = view.colorForSymbol(head);\n        } else {\n            fill = '#E0E';\n        }\n        this.token.animate({ fill: fill }, this.stepTime / 2);\n        if (!animate) {\n            this.token.transform(mat);\n        } else {\n            this.token.animate({ transform: mat }, this.stepTime, mina.linear, () => {\n                //field.drawTape();\n                if (callback)\n                    callback();\n            });\n        }\n    }\n    start() {\n        this.isRunning = true;\n        this.isPaused = false;\n        this.interpreter = new interpreter.Interpreter();\n        // Special case for empty testCases\n        if (this.testCases.length === 0) {\n            this.testCases.push({\n                accept: true,\n                input: new core.Tape(),\n                output: new core.Tape(),\n                limit: 0\n            });\n        }\n\n        this.currentTest.test = this.testCases[this.currentTest.index];\n\n        const currentTape = core.Tape.clone(this.currentTest.test.input),\n\n              CONTROL_WIDTH = this.canvasSize.width - CONTROL_X;\n\n        if (this.tapeView)\n            this.tapeView.remove();\n        this.tapeView = new view.TapeView(\n            this.paper,\n            CONTROL_X,\n            MARGIN,\n            CONTROL_WIDTH - 10,\n            (CONTROL_WIDTH - 10) / 10,\n            currentTape,\n            Math.floor((this.canvasSize.height/2 - MARGIN) / ((CONTROL_WIDTH - 10) / 10))\n        );\n        // 3 rows\n        // hide Palette\n        this.palette.show(false);\n        this.tapeView.drawTape();\n        this.interpreter.setProgram(this.program);\n        this.interpreter.setTape(currentTape);\n        this.interpreter.start();\n        this.update();\n    }\n    stop() {\n        this.isRunning = false;\n        this.isPaused = false;\n        this.token && this.token.remove();\n        this.tapeView && this.tapeView.remove();\n        this.currentTest.index = 0;\n        this.palette.show();\n    }\n    pause(shouldPause) {\n        this.isPaused = shouldPause;\n    }\n    // Governor for state when game is running\n    // Responsibilities are:\n    // Determine if test case has been passed or failed\n    // Call run\n    update() {\n        const test = this.currentTest.test, int = this.interpreter;\n        if (this.isRunning) {\n            if (!int.running) {\n                // Interpreter has stopped\n                const finishedProperly = int.accept == test.accept, correctOuput = test.output.symbols.length > 0 ? tapesAreEqual(int.tape, test.output) : // compare if output not empty\n                          true;\n                // otherwise ignore final tape\n                console.log('Test finished.');\n                console.log(finishedProperly && correctOuput ? 'Passed' : 'Failed');\n                if (finishedProperly && correctOuput) {\n                    if (this.currentTest.index < this.testCases.length - 1) {\n                        this.currentTest.index++;\n                        window.setTimeout(() => this.start());\n                    }\n                }\n                this.isRunning = false;\n            } else {\n                // check for cycle limit\n                this._step();\n            }\n        }\n    }\n    run() {\n        // If we aren't running, set everything up and start the loop\n        if (this.isRunning) {\n            // We're running. See if the interpreter has stopped\n            if (this.interpreter.running) {\n                this._step();\n            } else {\n                console.log('Program stopped.');\n                console.log(`Accepted: ${ this.interpreter.accept }`);\n                this.isRunning = false;\n            }\n        }\n    }\n    // Calls interpreter's step and manages animation\n    _step() {\n\n        if (!this.isPaused) {\n\n            let oldPos = this.interpreter.position,\n\n                corner = this.exchange(\n                    this.programView.gridView.getGlobalCellMatrix(oldPos.x, oldPos.y, false)\n                );\n\n\n            this.drawToken(corner);\n            this.interpreter.step();\n\n            let curPos = this.interpreter.position,\n\n                curCorner = this.exchange(\n                    this.programView.gridView.getGlobalCellMatrix(curPos.x, curPos.y, false)\n                );\n\n            this.drawToken(curCorner, true, this.update.bind(this));\n\n        } else {\n            requestAnimationFrame(this.update.bind(this));\n        }\n    }\n\n    /**\n     Convert one coordinate system to another.\n     Converts from system with global matrix g to system with global matrix l\n\n     */\n    exchange(g) {\n        return this.scratch.transform().globalMatrix.invert().add(g);\n    }\n}\n\n\n\nfunction setViewbox(svgel, x, y, width, height) {\n    svgel.setAttribute('viewBox', [\n        x,\n        y,\n        width,\n        height\n    ].join(','));\n}\nfunction tapesAreEqual(t1, t2) {\n    return loader.tapeToJson(t1) == loader.tapeToJson(t2);\n}\nexport default App;    /*\n                        Example hash level:\n                        #{\"title\":\"Sample\",\"tape\":[\"BYRGGYRYRGRRGBYRGYRYRGYRGBRYRRBRBGBBYRBYRBGBRBYRRYRYRGBGGBGRYRRGRRYRYRRYRBRRBYRGGRBYRBRBYRRYRGRRGGRRRGYRBYRRRRRRBYRBBGBBRG\"],\"program\":{\"cols\":9,\"rows\":9,\"cells\":[{\"x\":2,\"y\":1,\"orientation\":\"ROT3\",\"type\":\"Conveyor\"},{\"x\":2,\"y\":2,\"orientation\":\"ROT3\",\"type\":\"BranchBR\"},{\"x\":2,\"y\":3,\"orientation\":\"ROT3\",\"type\":\"BranchBR\"},{\"x\":2,\"y\":4,\"orientation\":\"ROT3\",\"type\":\"BranchGY\"},{\"x\":2,\"y\":5,\"orientation\":\"ROT3\",\"type\":\"BranchGY\"},{\"x\":3,\"y\":1,\"orientation\":\"ROT2\",\"type\":\"Conveyor\"},{\"x\":3,\"y\":2,\"orientation\":\"ROT2\",\"type\":\"BranchBR\"},{\"x\":3,\"y\":3,\"orientation\":\"ROT2\",\"type\":\"BranchBR\"},{\"x\":3,\"y\":4,\"orientation\":\"ROT2\",\"type\":\"BranchGY\"},{\"x\":3,\"y\":5,\"orientation\":\"ROT2\",\"type\":\"BranchGY\"},{\"x\":4,\"y\":1,\"orientation\":\"ROT1\",\"type\":\"Conveyor\"},{\"x\":4,\"y\":2,\"orientation\":\"ROT1\",\"type\":\"BranchBR\"},{\"x\":4,\"y\":3,\"orientation\":\"ROT1\",\"type\":\"BranchBR\"},{\"x\":4,\"y\":4,\"orientation\":\"ROT1\",\"type\":\"BranchGY\"},{\"x\":4,\"y\":5,\"orientation\":\"ROT1\",\"type\":\"BranchGY\"},{\"x\":5,\"y\":1,\"orientation\":\"ID\",\"type\":\"Conveyor\"},{\"x\":5,\"y\":2,\"orientation\":\"MIR\",\"type\":\"BranchBR\"},{\"x\":5,\"y\":3,\"orientation\":\"ID\",\"type\":\"BranchBR\"},{\"x\":5,\"y\":4,\"orientation\":\"MIR\",\"type\":\"BranchGY\"},{\"x\":5,\"y\":5,\"orientation\":\"ID\",\"type\":\"BranchGY\"}],\"start\":{\"x\":4,\"y\":0,\"orientation\":\"ID\"},\"end\":{\"x\":4,\"y\":8,\"orientation\":\"ID\"}}}\n                        */\n","let codeCell = codeCell || {};\n\nexport default codeCell;\n\nimport program from \"program\";\nimport core from \"core\";\n\nvar codeCells = {\n\n    /**\n     Conveyor\n\n     Moves execution UP to the next cell\n     Makes no changes to the tape\n     */\n    Conveyor: function Conveyor(head) {\n        return [false, null, program.directions.UP];\n    },\n\n    /**\n     CrossConveyor\n\n     Moves execution UP if the previous facing was UP or DOWN\n     Moves execution RIGHT if the previous facing was RIGHT or LEFT\n     Makes no changes to the tape\n     (This cell, like conveyor, will handle orientation implicitly by letting the default orientation be ^>)\n     */\n    CrossConveyor: function CrossConveyor(head, previousFacing) {\n        if (previousFacing.equals(program.directions.UP) || previousFacing.equals(program.directions.DOWN)) {\n            return [false, null, program.directions.UP];\n        } else if (previousFacing.equals(program.directions.LEFT) || previousFacing.equals(program.directions.RIGHT)) {\n            return [false, null, program.directions.RIGHT];\n        }\n    },\n\n    /**\n     BranchBR\n\n     If head is RED, pop tape and move LEFT\n     If head is BLUE, pop tape and move RIGHT\n     Otherwise, don't pop and move UP\n     */\n    BranchBR: function BranchBR(head) {\n        if (head === core.RED) {\n            return [true, null, program.directions.LEFT];\n        }\n\n        if (head === core.BLUE) {\n            return [true, null, program.directions.RIGHT];\n        }\n\n        return [false, null, program.directions.UP];\n    },\n\n    /**\n     BranchGY\n\n     If head is GREEN, pop tape and move LEFT\n     If head is YELLOW, pop tape and move RIGHT\n     Otherwise, don't pop and move UP\n     */\n    BranchGY: function BranchGY(head) {\n        if (head === core.GREEN) {\n            return [true, null, program.directions.LEFT];\n        }\n\n        if (head === core.YELLOW) {\n            return [true, null, program.directions.RIGHT];\n        }\n\n        return [false, null, program.directions.UP];\n    },\n\n    /**\n     Writers\n     Append <color>\n     Move UP\n     */\n    WriteB: function WriteB(head) {\n        return [false, core.BLUE, program.directions.UP];\n    },\n\n    WriteR: function WriteR(head) {\n        return [false, core.RED, program.directions.UP];\n    },\n\n    WriteG: function WriteG(head) {\n        return [false, core.GREEN, program.directions.UP];\n    },\n\n    WriteY: function WriteY(head) {\n        return [false, core.YELLOW, program.directions.UP];\n    }\n\n};\n\ncodeCell.codeCells = codeCells;\n","'use strict';\n\nvar gulp = require('gulp');\nvar newer = require('gulp-newer');\n\n/**\n * Builds a function that makes it easy to create gulp copy tasks\n * @param  {Array<string>} defaultTasks Array into which to push tasks that are created by this fn\n * @param  {Map<string,string>} paths object literal or map that maps names to paths\n * @param  {String} defaultDest  The glob path that is the default destination when one is not provided\n * @return {fn(name,dest)}              A function taking the task name and an optional destination that\n *                                      creates copy tasks\n */\nmodule.exports = function(defaultTasks, paths, defaultDest) {\n  if (!Array.isArray(defaultTasks)) {\n    throw new Error('defaultTasks needs to be an array');\n  }\n  if (paths === undefined) {\n    throw new Error('paths should be object literal to look names up in and find input paths');\n  }\n  if (defaultDest === undefined) {\n    throw new Error('defaultDest should be a string output path to be used by default when not ' +\n      'specified or available in the paths map');\n  }\n  return function copyTask(name, dest) {\n    if (dest === undefined) {\n      if (paths.hasOwnProperty(name + 'Out')) {\n        dest = paths[name + 'Out'];\n      } else {\n        dest = defaultDest;\n      }\n    }\n    gulp.task(name, function() {\n      return gulp.src(paths[name])\n        .pipe(newer(dest))\n        .pipe(gulp.dest(dest));\n    });\n    defaultTasks.push(name);\n  };\n};\n","let core = core || {};\n\nexport default core;\n\nimport signals from \"signals.js\";\n\n/* Symbols */\ncore.EMPTY = {symbol: 'empty'};\ncore.RED = {symbol: 'red'};\ncore.BLUE = {symbol: 'blue'};\ncore.GREEN = {symbol: 'green'};\ncore.YELLOW = {symbol: 'yellow'};\n\ncore.symbols = {\n    R: core.RED,\n    B: core.BLUE,\n    G: core.GREEN,\n    Y: core.YELLOW\n};\n\n/* Tape\n Represents an ordered queue of symbols\n */\nexport class Tape {\n    constructor() {\n        this.symbols = [];\n        this.changed = new signals.Signal();\n    }\n\n    head() {\n        if (this.symbols.length > 0) {\n            return this.symbols[0];\n        } else {\n            return core.EMPTY;\n        }\n    }\n\n    pop() {\n        if (this.symbols.length > 0) {\n            var popped = this.symbols.shift();\n            this.changed.dispatch(\"pop\");\n            return popped;\n        } else {\n            return core.EMPTY;\n        }\n    }\n\n    append(s) {\n        this.symbols.push(s);\n        this.changed.dispatch(\"append\");\n    }\n\n    static clone(otherTape) {\n        var newTape = new Tape();\n        newTape.symbols = otherTape.symbols.slice(0);\n        return newTape;\n    }\n\n};\n\ncore.Tape = Tape;\n","/*global radio */\n\nlet editor = editor || {};\n\nexport default editor;\n\nimport program from \"program\";\nimport graphics from \"graphics\";\nimport * as view from \"view\";\nimport tmath from \"tmath\";\n\neditor.events = {\n    tileSelected: \"tile-selected\",\n    cellSelected: \"cell-selected\",\n    mirror: \"mirror\",\n    rotate: \"rotate\",\n    setDirection: \"set-direction\",\n    delete: \"delete\",\n    hotKey: \"hot-key\"\n};\n\neditor.trigger = function(event, args) {\n    radio(event).broadcast(args);\n};\n\nfunction registerEvents(evts) {\n    Object.keys(evts).forEach(function(key) {\n        radio(editor.events[key]).subscribe(evts[key]);\n    });\n}\n\neditor.registerEvents = registerEvents;\n\nfunction unregisterEvents(evts) {\n    Object.keys(evts).forEach(function(key) {\n        radio(editor.events[key]).unsubscribe(evts[key]);\n    });\n}\n\neditor.unregisterEvents = unregisterEvents;\n\nvar startEditor = function() {\n\n    var paper = Snap(900, 640);\n\n    graphics.preload(paper).then(function() {\n\n        var programLayer = paper.g().addClass(\"program-layer\");\n\n        paper.appendTo(document.getElementById(\"main\"));\n\n        var palette = new view.Palette(paper, 10, 30, 2),\n\n            currentProgram = new program.Program(10, 10),\n\n            programView = new view.ProgramView(\n                programLayer,\n                10 + palette.drawWidth,\n                30,\n                56,\n                currentProgram\n            ),\n\n            controller = new Editor(paper, programView);\n\n        programView.drawProgram();\n\n        document.body.addEventListener(\"keydown\", dispatchKeyEvents);\n        document.body.addEventListener(\"mousemove\", trackMouse);\n    });\n\n};\n\neditor.init = function () {\n    document.body.addEventListener(\"keydown\", dispatchKeyEvents);\n    document.body.addEventListener(\"mousemove\", trackMouse);\n};\n\nfunction dispatchKeyEvents(evt) {\n    console.log(evt);\n    var data = _.clone(mousePosition),\n        what = null,\n        key = evt.key || String.fromCharCode(evt.keyCode).toLowerCase();\n\n\n    switch (key) {\n        case \"r\":\n            what = editor.events.rotate;\n            break;\n        case \"m\":\n            what = (editor.events.mirror);\n            break;\n        case \"s\":\n            what = editor.events.setDirection;\n            data.dir = \"UP\";\n            break;\n        case \"d\":\n            what = editor.events.setDirection;\n            data.dir = \"RIGHT\";\n            break;\n        case \"w\":\n            what = editor.events.setDirection;\n            data.dir = \"DOWN\";\n            break;\n        case \"a\":\n            what = editor.events.setDirection;\n            data.dir = \"LEFT\";\n            break;\n        case \"x\":\n            what = editor.events.delete;\n            break;\n    }\n\n    if (!what) {\n        what = editor.events.hotKey;\n        data.key = key;\n    }\n\n    editor.trigger(what, data);\n}\n\nvar mousePosition = {\n    x: 0,\n    y: 0\n};\n\nfunction trackMouse(evt) {\n    mousePosition.x = evt.clientX;\n    mousePosition.y = evt.clientY;\n}\n\nvar IDLE = Symbol(\"IDLE\"),\n    PLACING = Symbol(\"PLACING\"),\n    INPLACE = Symbol(\"INPLACE\");\n\nfunction cycleGenerator() {\n    let os = [\"UP\",\n              \"RIGHT\",\n              \"DOWN\",\n              \"LEFT\"];\n\n    return function(current) {\n        if (!current)\n            current = \"LEFT\";\n\n        let index = (os.indexOf(current) + 1) % os.length,\n            oName = os[index];\n\n        return oName;\n    };\n};\n\neditor.cycleGenerator = cycleGenerator;\n\nlet cycleOrientation = cycleGenerator();\n\nclass Editor {\n    constructor(paper, programView, tileControl) {\n        this.paper = paper;\n        this.programView = programView;\n        //this.tileCursor = null;\n        this.state = IDLE;\n        // this.currentTile = null;\n        // this.currentOrientation = \"UP\";\n        //this.mirror = false;\n        this.tileControl = tileControl;\n\n        this._events = {\n            tileSelected: (data) => this.onTileSelected(data),\n            cellSelected: (data) => this.onCellSelected(data),\n            rotate: (data) => this.onRotateCell(data),\n            mirror: (data) => this.onMirror(data),\n            setDirection: (data) => this.onSetDirection(data),\n            delete: (data) => this.onDelete(data)\n        };\n    }\n\n    enable() {\n        registerEvents(this._events);\n        this.tileControl.show(true);\n    }\n\n    disable() {\n        //this.clearCursor();\n        unregisterEvents(this._events);\n        this.tileControl.show(false);\n    }\n\n    move(evt, x, y) {\n        if (this.state == PLACING && this.tileCursor) {\n\n            var mousePoint = graphics.screenPointToLocal(mousePosition.x, mousePosition.y, this.paper),\n\n                oName = this.currentOrientation,\n\n                o = orientationByName(oName, this.mirror),\n\n                rotate = view.toTransformString(\n                    Snap.matrix(o.a, o.b, o.c, o.d, 0, 0)\n                ),\n\n                translate = Snap.matrix()\n                    .translate(mousePoint.x - 56/2, mousePoint.y - 56/2)\n                    .toTransformString().toUpperCase();\n\n            this.tileCursor.transform(rotate + translate);\n        }\n    }\n\n    onTileSelected (data) {\n\n        this.tileControl.onTileSelected(data.tile);\n\n        if (this.state === IDLE || this.state === PLACING) {\n            this.state = PLACING;\n        } else if (this.state === INPLACE) {\n            this.setInplace();\n        }\n        //this.currentTile = data.tile;\n\n        // if (this.tileCursor != null)\n        //     this.tileCursor.remove();\n\n        // var tileGraphic = this.paper.g(graphics.getGraphic(data.tile)),\n        //     mousePoint = graphics.screenPointToLocal(data.x, data.y, this.paper);\n\n        // tileGraphic.node.style.pointerEvents = \"none\"; // disable click events\n\n        // this.paper.mousemove(\n        //     this.move.bind(this)\n        // );\n\n        // this.tileCursor = tileGraphic;\n\n        // this.move(data, data.x, data.y);\n    }\n\n    onCellSelected (data) {\n        if (this.state == PLACING && this.tileControl.currentTile) {\n            // We can now place the tile\n\n            let curCell = this.programView.program.getCell(\n                data.cell.x,\n                data.cell.y\n            );\n\n            if (curCell.type != \"Start\" && curCell.type != \"End\") {\n\n                this.programView.program.setCell(data.cell.x,\n                                                 data.cell.y,\n                                                 this.tileControl.currentTile,\n                                                 orientationByName(\n                                                     this.tileControl.currentOrientation,\n                                                     this.tileControl.mirror)\n                                                );\n            }\n        } else if (this.state == IDLE) {\n            let cellIndex = {x: data.cell.x, y: data.cell.y},\n\n                curCell = this.programView.program.getCell(\n                    cellIndex.x,\n                    cellIndex.y\n                ),\n\n                type = curCell.type;\n\n            if (type != \"Start\" && type != \"End\" && type != \"Empty\") {\n                this.state = INPLACE;\n\n                // Highlight selected cell\n                radio(\"highlighted\").broadcast(cellIndex);\n\n                this.highlightedCell = cellIndex;\n\n                let cellState = nameFromOrientation(curCell);\n\n                this.tileControl.currentOrientation = cellState.direction;\n                this.tileControl.mirror = cellState.mirrored;\n\n                this.tileControl.onTileSelected(curCell.type);\n            }\n        } else if (this.state == INPLACE) {\n\n            if (this.highlightedCell && data && data.cell) {\n                let cellIndex = {x: data.cell.x, y: data.cell.y},\n\n                    curCell = this.programView.program.getCell(\n                        cellIndex.x,\n                        cellIndex.y\n                    ),\n\n                    type = curCell.type;\n\n                if (type != \"Start\" && type != \"End\" && type != \"Empty\") {\n                    this.state = INPLACE;\n\n                    // Highlight selected cell\n                    radio(\"highlighted\").broadcast(cellIndex);\n\n                    this.highlightedCell = cellIndex;\n\n                    let cellState = nameFromOrientation(curCell);\n\n                    this.tileControl.currentOrientation = cellState.direction;\n                    this.tileControl.mirror = cellState.mirrored;\n\n                    this.tileControl.onTileSelected(curCell.type);\n                } else if (type == \"Empty\") {\n                    this.clearHighlight();\n                    this.state = IDLE;\n                }\n            } else {\n                this.clearHighlight();\n                this.state = IDLE;\n            }\n        }\n    }\n\n\n    onRotateCell (data) {\n        if (this.state == PLACING) {\n            this.tileControl.onRotate();\n        } else if (this.state == IDLE &&\n                   data.x !== undefined &&\n                   data.y !== undefined) {\n\n            // see if we are hovering over the programview\n            var el = Snap.getElementByPoint(data.x, data.y);\n            var info = el.data(\"tileInfo\");\n\n            if (el && info) {\n                // Now have reference to cell\n                var o = info.cell.orientation,\n                    type = info.cell.type,\n                    x = info.x,\n                    y = info.y;\n                o = o.compose(tmath.Mat2x2.kROT1);\n\n                this.programView.program.setCell(x, y, type, o);\n            }\n        } else if (this.state === INPLACE &&\n                   this.tileControl.currentTile &&\n                   this.highlightedCell) {\n            // Rotate highlighted cell\n            this.tileControl.onRotate();\n\n            this.programView.program.setCell(\n                this.highlightedCell.x,\n                this.highlightedCell.y,\n                this.tileControl.currentTile,\n                orientationByName(\n                    this.tileControl.currentOrientation,\n                    this.tileControl.mirror)\n            );\n\n        }\n    }\n\n    onSetDirection (data) {\n        if (this.state == PLACING || this.state == INPLACE) {\n            this.tileControl.onSetDirection(data.dir);\n        } else if (this.state == IDLE && data && data.x && data.y) {\n            // see if we are hovering over the programview\n            var el = Snap.getElementByPoint(data.x, data.y);\n            var info = el.data(\"tileInfo\");\n\n            if (el && info) {\n                // Now have reference to cell\n                var type = info.cell.type,\n                    x = info.x,\n                    y = info.y,\n                    o = info.cell.orientation,\n                    mirrored = isMirrored(o);\n\n                if (type != \"Start\" && type != \"End\" && type != \"Empty\")\n\n                    this.programView.program.setCell(x, y, type, orientationByName(dir, mirrored));\n            }\n        }\n\n        if (this.state == INPLACE) {\n            this.setInplace();\n        }\n    }\n\n    setInplace() {\n        if (this.tileControl.currentTile &&\n            this.highlightedCell) {\n\n            this.programView.program.setCell(\n                this.highlightedCell.x,\n                this.highlightedCell.y,\n                this.tileControl.currentTile,\n                orientationByName(\n                    this.tileControl.currentOrientation,\n                    this.tileControl.mirror)\n            );\n        }\n    }\n\n    onMirror (data) {\n        if (this.state == PLACING || this.state == INPLACE) {\n            this.tileControl.onMirror();\n        } else if (this.state == IDLE && data && data.x && data.y) {\n            // see if we are hovering over the programview\n            var el = Snap.getElementByPoint(data.x, data.y);\n            var info = el.data(\"tileInfo\");\n\n            if (el && info) {\n                // Now have reference to cell\n                var o = info.cell.orientation,\n                    type = info.cell.type,\n                    x = info.x,\n                    y = info.y;\n                o = tmath.Mat2x2.kMIR.compose(o);\n                if (type != \"Start\" && type != \"End\" && type != \"Empty\")\n                    this.programView.program.setCell(x, y, type, o);\n            }\n        }\n\n        if (this.state == INPLACE) {\n            this.setInplace();\n        }\n    }\n\n    clearCursor() {\n        this.state = IDLE;\n        if (this.tileCursor) {\n            this.tileCursor.remove();\n            this.tileCursor.unmousemove(this.move);\n            this.tileCursor = null;\n        }\n        this.currentTile = null;\n    }\n\n    onDelete(data) {\n        if (this.state == PLACING) {\n            // Reset orientation for next time\n            this.tileControl.clear();\n            this.state = IDLE;\n        } else if (this.state == IDLE && data && data.x && data.y) {\n            // see if we are hovering over the programview\n\n            let el = Snap.getElementByPoint(data.x, data.y),\n\n                info = el.data(\"tileInfo\");\n\n            if (el && info) {\n                // Now have reference to cell\n                let p = info.program,\n                    type = info.cell.type,\n                    x = info.x,\n                    y = info.y;\n                if (type != \"Start\" && type != \"End\" && type != \"Empty\")\n                    p.setCell(x, y, \"Empty\");\n            }\n        } else if (this.state === INPLACE) {\n            if (this.highlightedCell) {\n                let c = this.highlightedCell;\n\n                this.programView.program.setCell(c.x, c.y, \"Empty\");\n            }\n            this.tileControl.clear();\n            this.clearHighlight();\n            this.state = IDLE;\n        }\n    }\n\n    clearHighlight() {\n        this.highlightedCell = null;\n        this.tileControl.clear();\n        radio(\"unhighlighted\").broadcast();\n    }\n};\n\neditor.Editor = Editor;\n\nfunction orientationByName(dir, mirror) {\n    var m = tmath.Mat2x2,\n        regular = {\n            \"UP\": m.kID,\n            \"RIGHT\": m.kROT1,\n            \"DOWN\": m.kROT2,\n            \"LEFT\": m.kROT3\n        },\n        mirrored = {\n            \"UP\": m.kMIR,\n            \"RIGHT\": m.kMROT1,\n            \"DOWN\": m.kMROT2,\n            \"LEFT\": m.kMROT3\n        };\n\n    return mirror ? mirrored[dir] : regular[dir];\n}\n\neditor.orientationByName = orientationByName;\n\nfunction isMirrored(orientation) {\n    var m = tmath.Mat2x2,\n        l = [m.kMIR, m.kMROT1, m.kMROT2, m.kMROT3];\n\n    return l.some(\n        (mat) => _.isEqual(mat, orientation)\n    );\n}\n\nfunction nameFromOrientation(o) {\n    let mirror = isMirrored(o),\n\n        direction = \"UP\",\n\n        m = tmath.Mat2x2;\n\n    if (_.isEqual(o, m.kID) || _.isEqual(o, m.kMIR))\n        direction = \"UP\";\n    if (_.isEqual(o, m.kROT1) || _.isEqual(o, m.kMROT1))\n        direction = \"RIGHT\";\n    if (_.isEqual(o, m.kROT2) || _.isEqual(o, m.kMROT2))\n        direction = \"DOWN\";\n    if (_.isEqual(o, m.kROT3) || _.isEqual(o, m.kMROT3))\n        direction = \"LEFT\";\n\n    return {direction: direction, mirror: mirror};\n}\n","let graphics = {};\n\nexport default graphics;\n\nvar imageMap = {\n    Conveyor: \"img/conveyor.svg\",\n    ConveyorElbow: \"img/conveyor-elbow.svg\",\n    ConveyorTee: \"img/conveyor-tee.svg\",\n    ConveyorTeeTwo: \"img/conveyor-tee-2.svg\",\n    ConveyorEx: \"img/conveyor-ex.svg\",\n    CrossConveyor: \"img/cross-conveyor.svg\",\n    BranchBR: \"img/branch-br.svg\",\n    BranchGY: \"img/branch-gy.svg\",\n    WriteB: \"img/write-blue.svg\",\n    WriteR: \"img/write-red.svg\",\n    WriteY: \"img/write-yellow.svg\",\n    WriteG: \"img/write-green.svg\",\n    WriterConnector: \"img/writer-connector.svg\",\n    Start: \"img/start.svg\",\n    End: \"img/end.svg\",\n\n    DeleteButton: \"img/delete-button.svg\",\n    MirrorButton: \"img/mirror-button.svg\",\n    PlayButton: \"img/play-button.svg\",\n    PauseButton: \"img/pause-button.svg\",\n    StopButton:  \"img/stop-button.svg\"\n};\n\nvar globalCanvas = null;\n\nvar allImagePromises =\n        Object.keys(imageMap).map(function(key) {\n            var url = imageMap[key];\n\n            var p = getSVG(url);\n\n            p.then(function(svg) {\n                imageMap[key] = svg;\n            });\n\n            return p;\n        });\n\nvar preloadPromise = Promise.all(allImagePromises);\n\ngraphics.preload = function preload(paper) {\n    globalCanvas = paper.g().attr({visibility: \"hidden\"});\n    return preloadPromise;\n};\n\ngraphics.getGraphic = function getGraphic(name) {\n    var original = imageMap[name];\n\n    if (original.parent() !== globalCanvas)\n        globalCanvas.append(original);\n\n\n    if (original) {\n        return globalCanvas.use(original).attr({visibility: \"visible\"});\n    }\n\n    return null;\n};\n\ngraphics.screenPointToLocal = function screenPointToLocal(x, y, element) {\n    var svg = element.node.ownerSVGElement || element.node,\n        spt = svg.createSVGPoint(),\n        mat = element.node.getScreenCTM();\n\n    spt.x = x;\n    spt.y = y;\n\n    return spt.matrixTransform(mat.inverse());\n};\n\nfunction getSVG(url) {\n    if (!getSVG.cache) {\n        getSVG.cache = {};\n    }\n\n    if (getSVG.cache[url] == undefined) {\n        // retrieve the graphic\n        var p = new Promise(\n            function(resolve, reject) {\n                Snap.load(\n                    url,\n                    function(fragment) {\n                        var g = fragment.select(\"g\");\n                        getSVG.cache[url] = Promise.resolve(g);\n\n                        resolve(g.clone());\n                    });\n            }\n        );\n\n        getSVG.cache[url] = p;\n\n        return p;\n    } else {\n        return Promise.resolve(getSVG.cache[url]).then(function (g) {\n            return g.clone();\n        });\n    }\n};\n","/**\n * User interaction classes\n */\n\nimport editor from \"editor\";\nimport graphics from \"graphics\";\nimport codeCell from \"codeCell\";\nimport {toTransformString} from \"view\";\nimport {Picker} from \"picker\";\n\nclass BaseControl {\n    constructor(paper, x, y) {\n        this.paper = paper;\n        this._x = x;\n        this._y = y;\n\n        this._layer = paper.g();\n        this._translate();\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(_x) {\n        this._x = _x;\n        this._translate();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(_y) {\n        this._y = _y;\n        this._translate();\n    }\n\n    _translate() {\n        this._layer.transform(Snap.matrix().translate(this._x, this._y));\n    }\n\n    show(shouldShow) {\n        shouldShow = shouldShow !== undefined ? shouldShow : true;\n        this._layer.attr({\n            opacity: shouldShow ? 1 : 0\n        });\n    }\n\n    _translate() {\n        this._layer.transform(Snap.matrix().translate(this._x, this._y));\n    }\n}\n\nexport class Palette extends BaseControl {\n\n    constructor(paper, x, y, max_width, columns, margin) {\n        super(paper, x, y);\n\n        this.columns = columns > 0 ? columns : 1; // negative columns?\n        this.columnWidth = 56;\n        this.tiles = this._layer.g();\n        this.maxWidth = max_width;\n        this.margin = margin || 20;\n        this.tileWidth = 56; // tiles are 56 x 56 px\n\n        // Get names of all types to draw\n        this.typesToDraw = Object.keys(codeCell.codeCells);\n\n        var actualColumns = this.columns <= this.typesToDraw.length ?\n                this.columns :\n                this.typesToDraw.length;\n\n        this.baseWidth = actualColumns * (this.tileWidth + this.margin) - this.margin;\n\n        this.width = this.baseWidth * this.getScale();\n\n        this.drawPalette();\n\n        this._events = {\n            hotKey: (data) => this.hotKey(data)\n        };\n\n        editor.registerEvents(this._events);\n    }\n\n    getScale() {\n        return this.maxWidth / this.baseWidth;\n    }\n\n    hotKey(data) {\n        var num = parseInt(data.key);\n        if (!isNaN(num) && num > 0 && num <= this.typesToDraw.length) {\n            editor.trigger(\n                editor.events.tileSelected,\n                {\n                    tile: this.typesToDraw[num - 1],\n                    x: data.x,\n                    y: data.y\n                }\n            );\n        }\n    }\n\n    drawPalette() {\n        this.tiles.clear();\n\n        var scale_x = this.getScale();\n\n        var height = 56 + 20; // 56 pixel tile + 10 pixel text + 10 pixel padding\n        var width = 56 + 20;\n        var cellImages = this.typesToDraw.map(function(name) {\n            var image = this.paper.g(graphics.getGraphic(name));\n            if (image != null) return {name:name, image:image};\n            else return undefined;\n\n        }.bind(this)).filter(_.negate(_.isUndefined));\n\n        cellImages.map(function(image, index){\n\n            var group = this.tiles.g(),\n                x_index = index % this.columns,\n                y_index = Math.floor(index / this.columns),\n                transform = Snap.matrix().scale(scale_x).translate(x_index * width, y_index * height);\n\n            group.click(\n                (evt, x, y) => {\n                    editor.trigger(\n                        editor.events.tileSelected,\n                        {\n                            tile: image.name,\n                            event: evt,\n                            x: x,\n                            y: y\n                        }\n                    );\n                });\n\n            group.transform(transform.toTransformString());\n\n            var r = group.rect(-1, -1, 58, 58);\n            r.attr({\n                stroke: \"#111\",\n                fill: \"#fff\",\n                strokeWidth: 2\n            }).addClass(\"palette-tile-bg\");\n\n            image.image.addClass(\"palette-tile\");\n            group.append(image.image);\n\n            var label = group.text(56/2, height - 8, image.name);\n            label.attr({\n                textAnchor: \"middle\",\n                text: index + 1\n            }).addClass(\"label-text\");\n\n            var title = Snap.parse('<title>'+image.name+'</title>');\n\n            group.append(title);\n        }, this);\n    }\n};\n\n/**\n * TileControl\n * GUI control for manipulating tile before placing\n *\n * @param {Snap.Element} paper Snap layer to place content\n * @param {number} x X coordinate\n * @param {number} y Y coordinate\n * @param {number} width Maximum width to fit content\n * @param {number} height Maximum height to fit contentxs\n */\n\nexport class TileControl extends BaseControl {\n    constructor(paper, x, y, width, height) {\n        super(paper, x, y);\n\n        this.width = width;\n        this.height = height;\n        this.currentTile = null;\n        this.currentOrientation = \"UP\";\n        this.mirror = false;\n\n        this.cycleOrientation = editor.cycleGenerator();\n\n        this.layer = this._layer.g();\n        this.tileLayer = this.layer.g();\n\n        this.tileLayer.transform(\"T20,20\");\n\n        this.tileLayer.click(\n            (evt)=> {\n                editor.trigger(editor.events.rotate, {});\n            });\n\n        this.calculateScale();\n\n        let down = this._makeDirButton(32, 0, 0),\n            right = this._makeDirButton(20+56, 32, 90),\n            up = this._makeDirButton(32, 20+56, 180),\n            left = this._makeDirButton(0, 32, 270);\n\n        function bt(el, dir) {\n            el.click(() => editor.trigger(editor.events.setDirection, {dir: dir}));\n        }\n\n        bt(up, \"UP\"); bt(right, \"RIGHT\"); bt(down, \"DOWN\"); bt(left, \"LEFT\");\n\n        let del = this._makeDeleteButton(96+32, 96*2/3, \"tile-control-button\", \"delete\");\n\n        del.click(\n            () => editor.trigger(editor.events.delete, {})\n        );\n\n        let mirror = this._makeMirrorButton(96+32, 96/3, \"tile-control-button\", \"mirror\");\n\n        mirror.click(\n            () => editor.trigger(editor.events.mirror)\n        );\n    }\n\n    _makeDirButton(x, y, angle=0) {\n        let button = this.layer.g();\n        button.addClass(\"tile-control-button\").addClass(\"direction\");\n\n        let rect = button.rect(1,1,30,18, 2, 2).attr({fill: \"gray\"});\n        rect.addClass(\"bg\");\n\n        let arrow = button.path(\"M6,16L16,4L26,16L6,16\");\n        arrow.attr({fill:\"white\"});\n\n        if (angle == 90) {\n            x += 20;\n        } else if (angle == 180) {\n            y += 20;\n            x += 32;\n        } else if (angle == 270) {\n            y += 32;\n        }\n\n        button.transform(\"r\"+angle+\",0,0\"+\"T\"+x+\",\"+y);\n\n        return button;\n    }\n\n\n\n    _makeDeleteButton(x, y) {\n        return makeButton(x, y, this.layer, \"DeleteButton\", \"tile-control-button\", \"delete\");\n    }\n\n    _makeMirrorButton(x, y) {\n        return makeButton(x, y, this.layer, \"MirrorButton\", \"tile-control-button\", \"mirror\");\n    }\n\n    calculateScale() {\n        /*\n         Graphics are laid out with 56x56 tile in center with 20px gutters on all other sides\n         Unscaled width = 56 + 20 + 20 = 96\n         */\n        let x_scale = this.width / 96;\n        this.layer.transform(\"s\"+x_scale);\n    }\n\n    onTileSelected(tile) {\n        if (tile != this.currentTile) {\n            this.currentTile = tile;\n            this.drawTile();\n            this.orientTile();\n        }\n    }\n\n    drawTile() {\n        this.tileLayer.clear();\n\n        let tileGraphic = this.tileLayer.g(\n            graphics.getGraphic(this.currentTile)\n        );\n\n        if (tileGraphic) {\n            this.currentGraphic = tileGraphic;\n            this.orientTile();\n        } else {\n            this.currentGraphic = null;\n        }\n    }\n\n    clear() {\n\n        this.tileLayer.clear();\n\n        this.currentGraphic = null;\n        this.currentTile = null;\n        this.currentOrientation = \"UP\";\n        this.mirror = false;\n    }\n\n    orientTile() {\n        if (this.currentGraphic) {\n            let oName = this.currentOrientation,\n\n                o = editor.orientationByName(oName, this.mirror),\n\n                rotate = toTransformString(\n                    Snap.matrix(o.a, o.b, o.c, o.d, 0, 0)\n                );\n\n            this.currentGraphic.transform(rotate + \"S\" + 40/56);\n        }\n    }\n\n    onRotate() {\n        this.currentOrientation = this.cycleOrientation(this.currentOrientation);\n        this.orientTile();\n    }\n\n    onSetDirection(dir) {\n        this.currentOrientation = dir;\n        this.orientTile();\n    }\n\n    onMirror() {\n        this.mirror = !!!this.mirror;\n        this.orientTile();\n    }\n};\n\nexport class PlayControl extends BaseControl {\n    constructor(paper, x, y, height=32) {\n        super(paper, x, y);\n        this.height = height;\n\n        this.buttonLayer = this._layer.g();\n\n        this.buttonLayer.transform(\"s\"+height/32);\n\n        this.play = makeButton(0, 0, this.buttonLayer, \"PlayButton\", \"play-control\", \"play\");\n        this.pause = makeButton(32, 0, this.buttonLayer, \"PauseButton\", \"play-control\", \"pause\");\n        this.stop = makeButton(32*2, 0, this.buttonLayer, \"StopButton\", \"play-control\", \"stop\");\n\n        this.picker = new Picker({\n            el: this.buttonLayer.node,\n            children: \".play-control\",\n            class: \"active\"\n        });\n\n        function bc (btn, which) {\n            btn.click(() => {\n                radio(which+\"-clicked\").broadcast();\n            });\n        }\n\n        bc(this.play, \"play\");\n        bc(this.pause, \"pause\");\n        bc(this.stop, \"stop\");\n    }\n\n    get width() {\n        return this.height * 3;\n    }\n};\n\n\nfunction makeButton(x, y, layer,  image, mainClass=\"\", subClass=\"\", margin=1, r=2) {\n    let button = layer.g(graphics.getGraphic(image));\n    button.addClass(mainClass).addClass(subClass);\n\n    let bg = button.rect(margin, margin, 32-2*margin, 32-2*margin, r, r).prependTo(button);\n    bg.attr({fill: \"gray\"}).addClass(\"bg\");\n\n    button.transform(\"T\"+x+\",\"+y);\n\n    return button;\n}\n","let interpreter = interpreter || {};\n\nexport default interpreter;\n\nimport program from \"program\";\nimport codeCell from \"codeCell\";\nimport tmath from \"tmath\";\nimport core from \"core\";\n\nclass Interpreter {\n    constructor() {\n        this.tape = new core.Tape();\n        this.program = null;\n\n        this.accept = false;\n        this.running = false;\n\n        this.position = new tmath.Vec2(0, 0);\n        this.facing = program.directions.UP;\n\n        this.cycles = 0;\n    }\n\n    setProgram(program) {\n        this.program = program;\n    }\n\n    setTape(tape) {\n        this.tape = tape;\n    }\n\n    start() {\n        this.accept = false;\n        this.running = true;\n        this.cycles = 0;\n\n        // Go to the start\n        for (let x of _.range(this.program.cols)) {\n            for (let y of _.range(this.program.rows)) {\n                if (this.program.getCell(x, y).type == \"Start\") {\n                    this.position.x = x;\n                    this.position.y = y;\n                }\n            }\n        }\n\n        // Face +y;\n        this.facing = program.directions.UP;\n    }\n\n    convertDirectionGlobalToCell(d, cell) {\n        return cell.orientation.apply(d);\n    }\n\n    convertDirectionCellToGlobal(d, cell) {\n        return cell.orientation.invert().apply(d);\n    }\n\n    // Returns tuple [pop tape head or not (bool), symbol to push (maybe null), new facing direction]\n    evalCell(cell, tapeHead) {\n\n        let cellFunc = codeCell.codeCells[cell.type];\n\n        let result = null;\n\n        if (cellFunc) {\n            if (cell.type == \"CrossConveyor\") {\n                // Special case. Convert this.facing into cell coordinates for CrossConveyor's function:\n                let cellFacing = this.convertDirectionGlobalToCell(this.facing, cell);\n                result = cellFunc(tapeHead, cellFacing);\n            } else {\n                // No knowledge of current facing needed\n                result = cellFunc(tapeHead);\n            }\n\n            // Convert cell's returned direction into global direction\n            result[2] = this.convertDirectionCellToGlobal(result[2], cell);\n            return result;\n        }\n\n        console.log(\"Invalid cell type.\");\n\n        return [false, null, program.directions.UP];\n    }\n\n    step() {\n\n        if (!this.running) return;\n\n        // Get state\n        let cell = this.program.getCell(this.position.x, this.position.y);\n        let head = this.tape.head();\n\n        // Check if done\n        if (cell.type == \"Empty\" || (cell.type == \"Start\" && this.cycles > 0)) {\n            this.running = false;\n            this.accept = false;\n        } else if (cell.type == \"End\") {\n            this.running = false;\n            this.accept = true;\n        } else {\n\n            // Evaluate cell\n            let result = this.evalCell(cell, head);\n\n            // Perform result\n            if (result[0]) {\n                this.tape.pop();\n            }\n\n            if (result[1] != null) {\n                this.tape.append(result[1]);\n            }\n\n            this.facing = result[2];\n\n            // Move 'facing' direction:\n            this.position = this.position.add(this.facing);\n            this.cycles += 1;\n        }\n\n    }\n}\n\n\ninterpreter.Interpreter = Interpreter;\n","/**\n Utilities for loading and saving a program and set of tapes in JSON format\n\n\n The basic format is like this:\n\n {\n\ttitle: title-string,\n\tdesc: desc-string,\n\ttestCases: [test-case-description1, ..., test-case-description2],\n \tprogram: { ... program-description ... },\n }\n\n\n tape-description:\n\n A string of the characters R,B,G,Y in any combination or order\n\n\n test-case-description:\n\n A test vector for the user's program. Specified using a string with this format:\n\n [a|r]:tape-description:tape-description[:cycle-limit]\n\n   1           2                3              4\n\n 1: Accept or reject\n 2: Input tape (can be empty)\n 3: Output tape (can be empty)\n 4: Max iterations as number (optional)\n\n\n program-description:\n\n {\n \tcols: Number,\n \trows: Number,\n\tcells: [ cell-description1, cell-description2 ],\n \tstart: {\n \t\tx: Number,\n\t\ty: Number,\n \t\torientation: orientation-description\n\t},\n\tend: {\n\t\tx: Number,\n\t\ty: Number,\n \t\torientation: orientation-description\n\t}\n }\n\n\n cell-description:\n\n {\n\ttype: type-description,\n \tx: Number,\n\ty: Number,\n \torientation: orientation-description\n }\n\n\n orientation-description:\n\n One of the strings ID, ROT1, ROT2, ROT3, MIR, MROT1, MROT2, MROT3\n\n\n type-description:\n\n String specifying the type of the cell. Currently these are:\n\n Conveyor\n CrossConveyor\n BranchBR\n BranchGY\n WriteB\n WriteR\n WriteG\n WriteY\n\n*/\n\nlet loader = loader || {};\n\nexport default loader;\n\nimport core from \"core\";\nimport codeCell from \"codeCell\";\nimport tmath from \"tmath\";\nimport program from \"program\";\n\nfunction isTape(t) {\n    // Ensure tapeDesc only contains B,R,G,Y\n    var invalidChars = t.match(/[^RGBY]/);\n    if (invalidChars != null)\n        return false;\n    return true;\n}\n\nloader.isTape = isTape;\n\nfunction isOrientation(o) {\n    var index = [\"ID\", \"ROT1\", \"ROT2\", \"ROT3\", \"MIR\", \"MROT1\", \"MROT2\", \"MROT3\"].indexOf(o);\n    if (index == -1)\n        return false;\n    return true;\n}\n\nloader.isOrientation = isOrientation;\n\nfunction isCellType(t) {\n    var validTypes = Object.keys(codeCell.codeCells);\n    var index = validTypes.indexOf(t);\n    if (index == -1) {\n        return false;\n    }\n    return true;\n}\n\nloader.isCellType = isCellType;\n\nfunction isCoordinate(c) {\n    return !isNaN(c);\n}\n\nloader.isCoordinate = isCoordinate;\n\nfunction hasAll(ob, required) {\n    var keys = Object.keys(ob);\n    return required.every(_.partial(_.contains, keys, _));\n}\n\nloader.hasAll = hasAll;\n\nfunction isCellDesc(cellDesc) {\n\n    if (!hasAll(cellDesc, [\"type\", \"x\", \"y\", \"orientation\"])) {\n        return false;\n    }\n\n    return allTrue([\n        isCellType(cellDesc.type),\n        isOrientation(cellDesc.orientation),\n        isCoordinate(cellDesc.x),\n        isCoordinate(cellDesc.y)\n    ]);\n}\n\nloader.isCellDesc = isCellDesc;\n\nfunction isEndpoint(e) {\n    if (!hasAll(e, [\"orientation\", \"x\", \"y\"])) {\n        return false;\n    }\n\n    return allTrue([\n        isOrientation(e.orientation),\n        isCoordinate(e.x),\n        isCoordinate(e.y)\n    ]);\n}\n\nloader.isEndpoint = isEndpoint;\n\nfunction isWithinBounds(max_x, max_y) {\n    return function(cell) {\n        return (cell.x >= 0 && cell.x <= max_x && cell.y >= 0 && cell.y <= max_y);\n    };\n}\n\nloader.isWithinBounds = isWithinBounds;\n\nfunction allTrue(l) {\n    return l.every(function(p) {\n        return Boolean(p);\n    });\n}\n\nloader.allTrue = allTrue;\n\nfunction isProgram(p) {\n    if (!hasAll(p, [\"start\", \"end\", \"cols\", \"rows\", \"cells\"])) {\n        return false;\n    }\n\n    var basic = allTrue([\n        isCoordinate(p.cols),\n        isCoordinate(p.rows),\n        p.cells.every(isCellDesc),\n        isEndpoint(p.start),\n        isEndpoint(p.end)\n    ]);\n\n    var bounds = isWithinBounds(p.cols - 1, p.rows - 1);\n\n    return basic && p.cells.every(bounds) && bounds(p.start) && bounds(p.end);\n}\n\nloader.isProgram = isProgram;\n\nfunction isValid(level) {\n    if (!hasAll(level, [\"title\", \"testCases\", \"program\"])) {\n        return false;\n    }\n\n    return allTrue([\n        level.testCases.every(isTestVector),\n        isProgram(level.program)\n    ]);\n}\n\nloader.isValid = isValid;\n\nfunction orientationToJson(o) {\n    var mat = tmath.Mat2x2;\n\n    if (_.isEqual(o, mat.kID))\n        return \"ID\";\n    else if (_.isEqual(o, mat.kROT1))\n        return \"ROT1\";\n    else if (_.isEqual(o, mat.kROT2))\n        return \"ROT2\";\n    else if (_.isEqual(o, mat.kROT3))\n        return \"ROT3\";\n    else if (_.isEqual(o, mat.kMIR))\n        return \"MIR\";\n    else if (_.isEqual(o, mat.kMROT1))\n        return \"MROT1\";\n    else if (_.isEqual(o, mat.kMROT2))\n        return \"MROT2\";\n    else if (_.isEqual(o, mat.kMROT3))\n        return \"MROT3\";\n    else\n        return \"INVALID\";\n}\n\nloader.orientationToJson = orientationToJson;\n\n\nfunction jsonToOrientation(json) {\n    var mat = tmath.Mat2x2;\n\n    switch (json) {\n        case \"ID\":\n            return mat.kID;\n        case \"ROT1\":\n            return mat.kROT1;\n        case \"ROT2\":\n            return mat.kROT2;\n        case \"ROT3\":\n            return mat.kROT3;\n\n        case \"MIR\":\n            return mat.kMIR;\n        case \"MROT1\":\n            return mat.kROT1;\n        case \"MROT2\":\n            return mat.kROT2;\n        case \"MROT3\":\n            return mat.kROT3;\n        default:\n            return null;\n    }\n}\n\nloader.jsonToOrientation = jsonToOrientation;\n\nfunction programToJson(p) {\n    var json = {\n        cols: p.cols,\n        rows: p.rows,\n        cells: [],\n        start: null,\n        end: null\n    };\n\n    p.cells.forEach(function(column, x) {\n        column.forEach(function(cell, y){\n            if (cell.type != \"Empty\") {\n                var ob = {x:x, y:y, orientation: orientationToJson(cell.orientation)};\n                if (cell.type == \"Start\")\n                    json.start = ob;\n                else if (cell.type == \"End\")\n                    json.end = ob;\n                else {\n                    ob.type = cell.type;\n                    json.cells.push(ob);\n                }\n            }\n        });\n    });\n\n    return json;\n\n}\n\nloader.programToJson = programToJson;\n\nfunction jsonToProgram(json) {\n    var p = new program.Program(parseInt(json.cols), parseInt(json.rows));\n\n    json.cells.forEach(function(cell) {\n        p.setCell(cell.x, cell.y, cell.type, jsonToOrientation(cell.orientation));\n    });\n\n    p.setStart(\n        json.start.x,\n        json.start.y,\n        jsonToOrientation(json.end.orientation)\n    );\n\n    p.setEnd(\n        json.end.x,\n        json.end.y,\n        jsonToOrientation(json.end.orientation)\n    );\n\n    return p;\n\n}\n\nloader.jsonToProgram = jsonToProgram;\n\nfunction tapeToJson(t) {\n    return t.symbols.reduce(\n        function(prev, cur) {\n            var end = \"\";\n            if (cur == core.RED)\n                end = \"R\";\n            if (cur == core.BLUE)\n                end = \"B\";\n            if (cur == core.GREEN)\n                end = \"G\";\n            if (cur == core.YELLOW)\n                end = \"Y\";\n            return prev + end;\n        },\n        \"\"\n    );\n\n}\n\nloader.tapeToJson = tapeToJson;\n\nfunction jsonToTape(json) {\n    var t = new core.Tape();\n\n    Array.prototype.forEach.call(json, function(letter) {\n        t.append(core.symbols[letter]);\n    });\n\n    return t;\n}\n\nloader.jsonToTape = jsonToTape;\n\n/**\n Validate test vector string\n */\nfunction isTestVector(json) {\n    var parts = json.split(\":\");\n\n    if (parts.length < 3) {\n        console.log(\"ERROR: test vector string does not contain all required parts\");\n        return false;\n    }\n\n    if (parts.length == 3) {\n        parts[3] = 0; // fill in optional field with default value\n    }\n\n    return allTrue([\n        parts[0].match(/^[ar]$/),\n        isTape(parts[1]),\n        isTape(parts[2]),\n        !isNaN(parseInt(parts[3]))\n    ]);\n}\n\nloader.isTestVector = isTestVector;\n\n/**\n Convert test vector object to string\n */\nfunction testVectorToJson(ob) {\n    return [\n        ob.accept ? \"a\" : \"r\",\n        tapeToJson(ob.input),\n        tapeToJson(ob.output),\n        ob.limit\n    ].join(\":\");\n}\n\nloader.testVectorToJson = testVectorToJson;\n\n/**\n Parse test vector string to object\n */\nfunction jsonToTestVector(json) {\n    var parts = json.split(\":\"),\n        accept = parts[0] == \"a\" ? true : false,\n        input = parts[1],\n        output = parts[2],\n        limit = parts.length > 3 ? parseInt(parts[3]) : 0;\n\n    if (isNaN(limit))\n        limit = 0;\n\n    return {\n        accept: accept,\n        input: jsonToTape(input),\n        output: jsonToTape(output),\n        limit: limit\n    };\n}\n\nloader.jsonToTestVector = jsonToTestVector;\n\nfunction levelToJson(title, testCases, prog) {\n    var json = {\n        title: title,\n        testCases: (_.isArray(testCases) ? testCases : [testCases]).map(testVectorToJson),\n        program: programToJson(prog)\n    };\n\n    return json;\n}\n\nloader.levelToJson = levelToJson;\n\nfunction jsonToLevel(json) {\n    var level = {\n        title: json.title,\n        testCases: json.testCases.map(jsonToTestVector),\n        program: jsonToProgram(json.program)\n    };\n\n    return level;\n}\n\nloader.jsonToLevel = jsonToLevel;\n\nloader.fromJson = function(jsonString) {\n    var dejsoned = JSON.parse(jsonString);\n    if (!isValid(dejsoned))\n        return null;\n\n    return jsonToLevel(dejsoned);\n};\n\nloader.toJson = function(title, tapes, prog) {\n    return JSON.stringify(levelToJson(title, tapes, prog));\n};\n","\nexport class Picker {\n\n    constructor(root) {\n        let args = {\n            el: null, \t\t// Root element for picker\n            children: \"*\",\t\t// Selector for children\n            class: \"picker-selected\"// Class to add to picked children\n        };\n\n        if (_.isUndefined(root))\n            console.log(\"Must pass argument to Picker constructor\");\n\n        if (_.isObject(root))\n            args = _.defaults(_.clone(root), args);\n        else\n            args.el = root;\n\n        if (_.isString(args.el)) {\n            args.el = document.querySelector(args.el);\n        } else if (!_.isElement(args.el)) {\n            console.log(\"Must pass string or element to picker\");\n        }\n\n        // copy properties to this\n        _.extend(this, args);\n        this._assignHandlers();\n    }\n\n    _assignHandlers() {\n        var children = this.el.querySelectorAll(this.children);\n\n        for (var child of children) {\n            child.addEventListener(\"click\", this._clickHandler.bind(this));\n        }\n    }\n\n    _clickHandler(mouseEvt) {\n        this.clear();\n\n        let elem = mouseEvt.currentTarget;\n        elem.classList.add(this.class);\n    }\n\n    clear() {\n        for (let child of this.el.querySelectorAll(this.children)) {\n            child.classList.remove(this.class);\n        }\n    }\n\n};\n","let program = program || {};\n\nexport default program;\n\nimport core from \"core\";\nimport tmath from \"tmath\";\n\nvar dir = {                     // regardless of how graphics are handled, these mean:\n    UP:     new tmath.Vec2(0, 1),     // +y\n    DOWN:   new tmath.Vec2(0, -1),    // -y\n    LEFT:   new tmath.Vec2(-1, 0),    // -x\n    RIGHT:  new tmath.Vec2(1, 0)      // +x\n};\n\nprogram.directions = dir;\n\nvar makeCellClass = function(typeID) {\n    return function() {\n        this.type = typeID;\n        this.orientation = tmath.Mat2x2.ID();\n    };\n};\n\nprogram.cellTypes = {\n    Empty: makeCellClass(\"Empty\"),\n    Start: makeCellClass(\"Start\"),\n    End: makeCellClass(\"End\"),\n    Conveyor: makeCellClass(\"Conveyor\"),\n    CrossConveyor: makeCellClass(\"CrossConveyor\"),\n    BranchBR: makeCellClass(\"BranchBR\"),\n    BranchGY: makeCellClass(\"BranchGY\"),\n    WriteB: makeCellClass(\"WriteB\"),\n    WriteR: makeCellClass(\"WriteR\"),\n    WriteG: makeCellClass(\"WriteG\"),\n    WriteY: makeCellClass(\"WriteY\")\n};\n\n\nclass Program {\n\n    constructor(cols, rows) {\n        this.cols = cols;\n        this.rows = rows;\n        this.cells = [];\n        this.changed = new signals.Signal();\n\n        for (var x = 0; x < cols; ++x) {\n            this.cells.push([]);\n            for (var y = 0; y < rows; ++y) {\n                this.cells[x].push(new program.cellTypes.Empty());\n            }\n        }\n    }\n\n    getCell(x, y) {\n        return this.cells[x][y];\n    }\n\n    setCell(x, y, type, orientation) {\n        var s = new program.cellTypes[type]();\n\n        if (orientation) {\n            s.orientation = orientation;\n        }\n\n        this.cells[x][y] = s;\n\n        this.changed.dispatch({\n            event: \"set\",\n            x: x,\n            y: y,\n            type: type,\n            orientation: orientation\n        });\n    }\n\n    setStart(x, y) {\n        this.setCell(x, y, \"Start\");\n    }\n\n    setEnd(x, y) {\n        this.setCell(x, y, \"End\");\n        this.start = {x: x, y: y};\n    }\n}\n\nprogram.Program = Program;\n\nprogram.readLegacyProgramString = function(s) {\n\n    // [lvlString]&[codeString]&[metaInfo]\n\n    var i = 0;\n\n    var attrStrings = s.split(\"&\");\n    var attrs = {};\n\n    for (i = 0; i < attrStrings.length; i ++) {\n        if (attrStrings[i].startsWith(\"lvl=\")) {\n            attrs.lvl = parseInt(attrStrings[i].slice(4));\n        }\n        if (attrStrings[i].startsWith(\"code=\")) {\n            attrs.codeString = attrStrings[i].slice(5);\n        }\n        if (attrStrings[i].startsWith(\"ctm=\")) {\n\n            // [name];[description];[test case string];[rows/cols count];[??? always 3];[??? 1 or 0 for binary or 'normal']\n\n            var ctmParts = attrStrings[i].slice(4).split(\";\");\n            attrs.name = ctmParts[0];\n            attrs.description = ctmParts[1];\n            attrs.testCaseString = ctmParts[2];\n            attrs.rows = ctmParts[3];\n            attrs.cols = ctmParts[3];\n        }\n    }\n\n    // Now parse the codeString part\n\n    var typeMap = {c: \"Conveyor\", b: \"WriteB\", r: \"WriteR\", g: \"WriteG\", y: \"WriteY\", p: \"BranchBR\", q: \"BranchGY\", i: \"CrossConveyor\"};\n\n    var p = new program.Program(attrs.cols, attrs.rows);\n    var parts = attrs.codeString.split(\";\");\n\n    for (var i = 0; i < parts.length; i ++) {\n\n        // [type][column]:[row]f[orientation]\n\n        var partString = parts[i].trim();\n\n        if (partString.length == 0) continue;\n\n        var fInd = _.indexOf(partString, \"f\");\n        var cInd = _.indexOf(partString, \":\");\n\n        var original = {type: partString[0], x: parseInt(partString.slice(1, cInd)), y: parseInt(partString.slice(cInd+1, fInd)), orientation: parseInt(partString.slice(fInd+1))};\n\n        var cellProps = {};\n\n        cellProps.type = typeMap[original.type];\n        cellProps.x = original.x - Math.round(-0.5*(p.cols - 9) + 8);\n        cellProps.y = original.y - Math.round(-0.5*(p.cols - 9) + 3); // Lol this coordinate system\n        console.log(cellProps);\n\n        //console.log(cellProps.type, original.orientation);\n        if (cellProps.type.startsWith(\"Branch\")) {\n            if (original.orientation == 0) cellProps.orientation = tmath.Mat2x2.MROT3();\n            if (original.orientation == 1) cellProps.orientation = tmath.Mat2x2.MROT2();\n            if (original.orientation == 2) cellProps.orientation = tmath.Mat2x2.MROT1();\n            if (original.orientation == 3) cellProps.orientation = tmath.Mat2x2.MIR();\n            if (original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT3();\n            if (original.orientation == 5) cellProps.orientation = tmath.Mat2x2.ROT2();\n            if (original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT1();\n            if (original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\n        } else if (!(cellProps.type == \"CrossConveyor\")) {\n            if (original.orientation == 0 || original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT3();\n            if (original.orientation == 1 || original.orientation == 5) cellProps.orientation = tmath.Mat2x2.ROT2();\n            if (original.orientation == 2 || original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT1();\n            if (original.orientation == 3 || original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\n        } else {\n            // CrossConveyer is weird\n            if (original.orientation == 5 || original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\n            if (original.orientation == 1 || original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT3();\n            if (original.orientation == 0 || original.orientation == 2) cellProps.orientation = tmath.Mat2x2.ROT2();\n            if (original.orientation == 3 || original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT1();\n        }\n\n        p.setCell(cellProps.x, cellProps.y, cellProps.type, cellProps.orientation);\n\n    }\n\n    p.setStart(Math.floor(p.cols/2), 0);\n    p.setEnd(Math.floor(p.cols/2), p.rows - 1);\n\n    return p;\n\n};\n","let tmath = tmath || {};\n\nexport default tmath;\n\nvar Vec2 = function(x, y) {\n    this.x = x;\n    this.y = y;\n};\n\nVec2.prototype.add = function(v2) {\n    return new Vec2(this.x + v2.x, this.y + v2.y);\n};\n\nVec2.prototype.equals = function(v2) {\n    return (this.x == v2.x && this.y == v2.y);\n};\n\ntmath.Vec2 = Vec2;\n\nvar Mat2x2 = function(a,b,c,d) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n};\n\nMat2x2.ID =     function() { return new Mat2x2(1, 0, 0, 1); };      Mat2x2.kID = Mat2x2.ID();\nMat2x2.ROT1 =   function() { return new Mat2x2(0, -1, 1, 0); };     Mat2x2.kROT1 = Mat2x2.ROT1();\nMat2x2.ROT2 =   function() { return new Mat2x2(-1, 0, 0, -1); };    Mat2x2.kROT2 = Mat2x2.ROT2();\nMat2x2.ROT3 =   function() { return new Mat2x2(0, 1, -1, 0); };     Mat2x2.kROT3 = Mat2x2.ROT3();\nMat2x2.MIR =    function() { return new Mat2x2(-1, 0, 0, 1); };     Mat2x2.kMIR = Mat2x2.MIR();\nMat2x2.MROT1 =  function() { return new Mat2x2(0, 1, 1, 0); };      Mat2x2.kMROT1 = Mat2x2.MROT1();\nMat2x2.MROT2 =  function() { return new Mat2x2(1, 0, 0, -1); };     Mat2x2.kMROT2 = Mat2x2.MROT2();\nMat2x2.MROT3 =  function() { return new Mat2x2(0, -1, -1, 0); };    Mat2x2.kMROT3 = Mat2x2.MROT3();\n\nMat2x2.prototype.apply = function(v) {\n    return new Vec2(this.a * v.x + this.b * v.y, this.c * v.x + this.d * v.y);\n};\n\nMat2x2.prototype.scale = function(s) {\n    return new Mat2x2(s*this.a, s*this.b, s*this.c, s*this.d);\n}\n\nMat2x2.prototype.invert = function() {\n    return new Mat2x2(this.d, -this.b, -this.c, this.a).scale((this.a*this.d - this.b*this.c));\n};\n\nMat2x2.prototype.compose = function(m2) {\n    return new Mat2x2(this.a * m2.a + this.b* m2.c,\n                      this.a * m2.b + this.b * m2.d,\n                      this.c * m2.a + this.d * m2.c,\n                      this.c * m2.b + this.d * m2.d);\n};\n\nMat2x2.prototype.equals = function(m2) {\n    return (this.a == m2.a && this.b == m2.b && this.c == m2.c && this.d == m2.d);\n};\n\ntmath.Mat2x2 = Mat2x2;\n","/*global radio */\n\n\nimport core from \"core\";\nimport graphics from \"graphics\";\nimport editor from \"editor\";\nimport codeCell from \"codeCell\";\nimport tmath from \"tmath\";\nimport program from \"program\";\n\nexport class TapeView {\n    constructor(paper, x, y, width, radius, tape, rows) {\n        this.paper = paper;\n        this.tapeView = paper.g();\n        this.width = width;\n        this.rows = rows || 1;\n        this.height = radius * this.rows;\n        this.x = x;\n        this.y = y;\n\n        this._sw = radius;\n        this._MAX_PER_ROW = Math.floor(this.width / this._sw);\n        this._MAX = this.rows * this._MAX_PER_ROW;\n\n        this.setTape(tape);\n    }\n\n    /**\n     Performs a clean draw of the tape with no animation\n     */\n    drawTape() {\n        var MAX = this._MAX,\n            sw = this._sw;\n\n        this.tapeView.clear();\n\n        for (var i = 0; i < this.tape.symbols.length && i < MAX; ++i) {\n            var curSym = this.tape.symbols[i];\n            this._appendSymbol(i, curSym);\n        }\n\n\n        for (var r = 1; r < this.rows; ++r) {\n            this.tapeView.line(0, r * this._sw, this.width, r * this._sw)\n                .addClass(\"tape-view-divider\")\n                .attr({stroke: \"#fff\"});\n        }\n\n        this.tapeView.transform(\"\");\n        this.tapeView.transform(\"t\" + this.x + \",\" + this.y);\n    }\n\n\n    _coordinateForIndex(index) {\n        var row = Math.floor(index / this._MAX_PER_ROW),\n            col = index % this._MAX_PER_ROW;\n\n        return {\n            x: col * this._sw + this._sw / 2,\n            y: row * this._sw + this._sw / 2\n        };\n    }\n\n    _appendSymbol(index, symbol, offset, color) {\n        offset = offset || 0;\n\n        var sw = this._sw,\n            length = this.tapeView.selectAll(\"circle\").length,\n            coord = this._coordinateForIndex(index);\n\n        var circle = this.tapeView.circle(coord.x + offset * sw, coord.y, sw/2 - 2);\n\n        if (symbol === core.EMPTY) {\n            circle.attr({\n                stroke: \"#111\",\n                strokeWidth: 2,\n                fill: \"#FFF\"\n            });\n        } else {\n            if (color) {\n                circle.attr({\n                    fill: \"#FFF\"\n                });\n            } else {\n                circle.attr({\n                    fill: colorForSymbol(symbol)\n                }).addClass(classForSymbol(symbol));\n            }\n        }\n\n        return circle;\n    }\n\n    animate(action) {\n\n        var pop = function(head, callback) {\n            head.animate(\n                {opacity: 0},\n                100,\n                mina.linear,\n                function() {\n                    head.remove();\n                    if (callback)\n                        callback();\n                }\n            );\n        };\n\n        var slide = (function() {\n            var sw = this._sw,\n                allSymbols = this.tapeView.selectAll(\"circle\"),\n                length = allSymbols.length;\n\n            // Append symbol if necessary\n            if (length < this._MAX && this.tape.symbols.length > length) {\n                var c = this._appendSymbol(length, this.tape.symbols[length - 1], 1);\n                c.attr({opacity: 0});\n            }\n\n            // Slide left\n            this.tapeView.selectAll(\"circle\").animate(\n                {\n                    cx: \"-=\" + sw,\n                    opacity: 1\n                },\n                200,\n                mina.easeinout\n            );\n\n            // Iterate over all symbols that are the beginning of a row other than the first\n            for (var beginIndex = this._MAX_PER_ROW - 1;\n                 beginIndex < length;\n                 beginIndex += this._MAX_PER_ROW) {\n\n                var rowFront = allSymbols[beginIndex],\n                    coord = this._coordinateForIndex(beginIndex);\n\n                rowFront.stop(); // cancel sliding animation\n\n                rowFront.animate(\n                    {\n                        cx: coord.x,\n                        cy: coord.y,\n                        opacity: 1\n                    },\n                    200,\n                    mina.linear\n                );\n            }\n\n        }).bind(this);\n\n        if (action == \"pop\") {\n            // Dissolve first element, then slide left\n            var head = this.tapeView.selectAll(\"circle\")[0];\n            pop(head, slide);\n\n        } else if (action == \"append\") {\n            // Append symbol if it will fit\n            var length = this.tapeView.selectAll(\"circle\").length;\n            if (length < this._MAX && this.tape.symbols.length > length) {\n                var c = this._appendSymbol(length, this.tape.symbols[length], 0);\n                c.attr({opacity: 0});\n                c.animate(\n                    {\n                        opacity: 1\n                    },\n                    50,\n                    mina.easeinout\n                );\n            }\n        }\n    }\n\n    setTape(newTape) {\n        if (this.tape) {\n            this.tape.changed.remove(this.animate);\n        }\n\n        this.tape = newTape;\n\n        if (newTape) {\n            // Register for tape's changed signal\n            newTape.changed.add(this.animate, this);\n        }\n    }\n\n    remove() {\n        if (this.tape)\n            this.tape.changed.remove(this.animate);\n        this.tape = null;\n\n        this.tapeView.remove();\n    }\n};\n\nexport function colorForSymbol(symbol) {\n    if (symbol === core.RED) {\n        return \"#E10\";\n    } else if (symbol === core.BLUE) {\n        return \"#01F\";\n    } else if (symbol === core.GREEN) {\n        return \"#0F0\";\n    } else if (symbol === core.YELLOW) {\n        return \"#FF0\";\n    } else {\n        return \"#FA3\";\n    }\n}\n\nexport function classForSymbol(symbol) {\n    if (symbol && symbol.symb && symbol.symbol != \"empty\") {\n        if (symbol === core.RED) {\n            return \"symbol-red\";\n        } else if (symbol === core.BLUE) {\n            return \"symbol-blue\";\n        } else if (symbol === core.GREEN) {\n            return \"symbol-green\";\n        } else if (symbol === core.YELLOW) {\n            return \"symbol-yellow\";\n        }\n    }\n    return \"\";\n}\n\n/**\n GridView\n\n Draws a grid on the canvas\n */\nexport class GridView {\n\n    constructor(paper, x, y, width, height, rows, cols) {\n        this.paper = paper;\n        this.grid = paper.g();\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.cols = cols;\n        this.rows = rows;\n\n        this.grid.click(this.onClick.bind(this));\n\n        radio(\"highlighted\").subscribe([this.highlight, this]);\n        radio(\"unhighlighted\").subscribe([this.clearHighlight, this]);\n\n    }\n\n    onClick(evt, x, y) {\n        var cell = this.screenPointToCell(evt.clientX, evt.clientY);\n\n        if (cell.x >= 0 && cell.x < this.cols &&\n            cell.y >= 0 && cell.y < this.rows) {\n            editor.trigger(editor.events.cellSelected, {cell: cell});\n        }\n    }\n\n    highlight(cell) {\n\n        if (cell && cell.x !== undefined && cell.y !== undefined) {\n            this.clearHighlight();\n\n            let sw = this.width / this.cols,\n                sh = this.height / this.rows,\n\n                highlight = this.grid.rect(cell.x * sw, cell.y * sh, sw, sh).\n                    addClass(\"highlight\").attr({fill: \"white\"});\n        }\n    }\n\n    clearHighlight() {\n        this.grid.selectAll(\".highlight\").forEach((el) => el.remove());\n    }\n\n    remove() {\n        this.grid.remove();\n        radio(\"hightlighted\").unsubscribe(this.highlight);\n        radio(\"unhightlighted\").unsubscribe(this.clearHighlight);\n    }\n\n    drawGrid() {\n        this.grid.clear();\n\n        var r = this.paper.rect(0,0, this.width, this.height);\n        r.attr({fill: \"#FFF\"});\n        r.addClass(\"grid-bg\");\n        this.grid.append(r);\n\n        var sw = this.width / this.cols;\n        var sy = this.height / this.rows;\n\n        for (var x = 0; x <= this.cols; ++x) {\n            let l = this.grid.line(x*sw, 0, x*sw, this.height);\n            l.addClass(\"grid-line\");\n        }\n\n        for (var y = 0; y <= this.rows; ++y) {\n            let l = this.grid.line(0, y*sy, this.width, y*sy);\n            l.addClass(\"grid-line\");\n        }\n\n        this.grid.attr({stroke: \"#888\", strokeWidth: 1});\n\n        this.grid.transform(\"\");\n        this.grid.transform(\"t\" + this.x + \",\" + this.y);\n    }\n\n    /**\n     GridView.getCellMatrix(col, row, corner) -> Matrix\n\n     Returns local matrix describing location of cell\n\n     If corner == true, uses top left corner of cell\n\n     Otherwise, uses center of cell\n\n     */\n    getCellMatrix(col, row, corner) {\n        var mat = Snap.matrix(),\n            sw = this.width / this.cols,\n            sy = this.height / this.rows;\n\n        if (!corner) {\n            mat.translate(sw / 2, sy / 2);\n        }\n        mat.translate(sw * col, sy * row);\n\n        return mat;\n    }\n\n    /**\n     GridView.getGlobalCellMatrix(col, row, corner) -> Matrix\n\n     Returns global matrix describing location of cell\n\n     If corner == true, uses top left corner of cell\n\n     Otherwise, uses center of cell\n\n     */\n    getGlobalCellMatrix(col, row, corner) {\n\n        var transform = this.grid.transform();\n        var globalMatrix = transform.globalMatrix.clone();\n\n        var sw = this.width / this.cols;\n        var sy = this.height / this.rows;\n\n        if (!corner) {\n            globalMatrix.translate(sw / 2, sy / 2);\n        }\n\n        globalMatrix.translate(sw * col, sy * row);\n\n        return globalMatrix;\n    }\n\n    screenPointToCell(x, y) {\n        var localPoint = graphics.screenPointToLocal(x, y, this.grid),\n            sw = this.width / this.cols,\n            sy = this.height / this.rows,\n            index_x = Math.floor(localPoint.x / sw),\n            index_y = Math.floor(localPoint.y / sy);\n\n        console.log(\"I think you want \" + index_x + \", \" + index_y);\n\n        return {x: index_x, y: index_y};\n    }\n};\n\nexport class ProgramView {\n\n    constructor(paper, x, y,  program, maxWidth, maxHeight) {\n        this.paper = paper;\n\n        this.x = x;\n        this.y = y;\n\n        this.program = program;\n\n        this._maxWidth = maxWidth;\n        this._maxHeight = maxHeight;\n\n        this.tileSize = 56;\n\n        this._layer = paper.g().addClass(\"program-view\");\n\n        this.cells = this._layer.g().addClass(\"cells\");\n\n        this.gridView = new GridView(this._layer, 0, 0,\n                                     program.cols*this.tileSize,\n                                     program.rows*this.tileSize,\n                                     program.rows, program.cols);\n\n        this.width = this.gridView.width;\n        this.height = this.gridView.height;\n\n        this.gridView.drawGrid();\n\n        this.calculateTransform();\n\n        var binding = this.program.changed.add(this.updateCell);\n        binding.context = this;\n    }\n\n    calculateTransform() {\n        let maxw = this._maxHeight,\n            maxh = this._maxWidth,\n\n            scale_x = maxw / this.gridView.width,\n            scale_y = maxh / this.gridView.height,\n\n            scale = Math.min(scale_x, scale_y);\n\n        this._layer.transform(\"T\"+this.x+\",\"+this.y+\"s\"+scale+\",0,0\");\n\n    }\n\n    setProgram(p) {\n        if (this.program)\n            this.program.changed.remove(this.drawProgram);\n\n        this.program = p;\n        this.gridView.remove();\n        this.gridView = new GridView(this._layer, this.x, this.y,\n                                     p.cols*this.tileSize,\n                                     p.rows*this.tileSize,\n                                     p.rows, p.cols);\n        this.gridView.drawGrid();\n        this.cells.clear();\n\n        this.calculateTransform();\n    }\n\n    updateCell(data) {\n        // coordinates of updated cell\n        var x = data.x,\n            y = data.y;\n\n        // remove old cells in the region and redraw each\n        for (var c_x = x - 1; c_x <= x + 1; ++c_x) {\n            for (var c_y = y - 1; c_y <= y + 1; ++c_y) {\n                if (c_x >= 0 && c_x < this.program.cols &&\n                    c_y >= 0 && c_y < this.program.rows) {\n\n                    this.gridView.grid.selectAll(\".\" + coordClass(c_x, c_y))\n                        .forEach((el) => el.remove());\n\n                    this.drawTile(this.program.getCell(c_x, c_y), c_x, c_y);\n                }\n            }\n        }\n\n    }\n\n    drawTile(cell, x, y) {\n        var c = cell,\n            paper = this.paper,\n            grid = this.gridView;\n\n        console.log(\"draw\");\n\n        if (c.type != \"Empty\") {\n            var container;\n            if (c.type == \"Conveyor\") {\n                container = this.drawConveyor(c, x, y);\n            } else if (c.type.startsWith(\"Write\")) {\n                container = this.drawWriter(c, x, y);\n            } else {\n                var image = graphics.getGraphic(c.type);\n\n                if (image) {\n\n                    paper.append(image);\n\n                    var group = paper.g(image);\n                    this.cells.append(group);\n\n                    var corner = grid.getCellMatrix(x, y, true)\n                            .toTransformString()\n                            .toUpperCase();\n\n                    var o = c.orientation;\n\n                    var transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\n                    var tstring = toTransformString(transform);\n\n                    group.transform(\n                        tstring + corner\n                    );\n\n                    container = group;\n                }\n            }\n            if (container) {\n                container.selectAll(\"*\").forEach((el) => {\n                    el.data(\"tileInfo\", {\n                        cell: c,\n                        x: x,\n                        y: y,\n                        program: this.program\n                    }).addClass(\"tile-part\");\n                });\n\n                container.addClass(coordClass(x, y));\n\n            }\n        }\n    }\n\n\n    drawProgram() {\n        var paper = this.paper,\n            grid = this.gridView,\n            program = this.program;\n\n        this.cells.clear();\n        this.cells.appendTo(this.gridView.grid);\n\n        for (var x = 0; x < program.cols; ++x) {\n            for (var y = 0; y < program.rows; ++y) {\n                var c = program.getCell(x, y);\n                this.drawTile(c, x, y);\n            }\n        }\n    }\n\n    drawConveyor(cell, x, y) {\n        var neighbors = getNeighbors(this.program, cell, x, y),\n\n            target = {cell: cell, position: new tmath.Vec2(x, y)},\n\n            hasLeft = neighbors.left.cell != null ? isPointingTo(neighbors.left, target) : false,\n\n            hasRight = neighbors.right.cell != null ? isPointingTo(neighbors.right, target) : false,\n\n            hasDown = neighbors.down.cell != null ? isPointingTo(neighbors.down, target) : false,\n\n            image = null,\n\n            mirror = false;\n\n        if (!hasLeft && !hasRight) {\n\n            image = \"Conveyor\";\n\n        } else if (!hasLeft && hasRight ||\n                   hasLeft && !hasRight) {\n\n            image = hasDown ? \"ConveyorTeeTwo\" : \"ConveyorElbow\";\n\n            mirror = hasLeft;\n\n        } else if (!hasDown && hasLeft && hasRight) {\n\n            image = \"ConveyorTee\";\n\n        } else {\n\n            image = \"ConveyorEx\";\n\n        }\n\n        image = graphics.getGraphic(image);\n\n        if (image) {\n\n            this.paper.append(image);\n\n            var group = this.paper.g(image);\n            this.cells.append(group);\n\n            var corner = this.gridView.getCellMatrix(x, y, true)\n                    .toTransformString()\n                    .toUpperCase();\n\n            var o = cell.orientation;\n\n            if (mirror) {\n                o = tmath.Mat2x2.kMIR.compose(o);\n            }\n\n            var transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\n            var tstring = toTransformString(transform);\n\n            group.transform(\n                tstring + corner\n            );\n\n            return group;\n        }\n\n        return null;\n\n    }\n\n    drawWriter(cell, x, y) {\n        var neighbors = getNeighbors(this.program, cell, x, y),\n\n            target = {cell: cell, position: new tmath.Vec2(x, y)},\n\n            hasLeft = neighbors.left.cell != null ? isPointingTo(neighbors.left, target) : false,\n\n            hasRight = neighbors.right.cell != null ? isPointingTo(neighbors.right, target) : false,\n\n            image = null,\n\n            leftConnector = null,\n\n            rightConnector = null;\n\n        image = graphics.getGraphic(cell.type);\n\n        if (image) {\n\n            this.paper.append(image);\n\n            var group = this.paper.g(image);\n            this.cells.append(group);\n\n            if (hasRight) {\n                rightConnector = graphics.getGraphic(\"WriterConnector\");\n                group.append(rightConnector);\n            }\n\n            if (hasLeft) {\n                leftConnector = group.g(graphics.getGraphic(\"WriterConnector\"));\n                group.append(leftConnector);\n                var rot = tmath.Mat2x2.kROT2,\n                    m = Snap.matrix(rot.a, rot.b, rot.c, rot.d, 0, 0);\n                leftConnector.transform(toTransformString(m));\n            }\n\n            var corner = this.gridView.getCellMatrix(x, y, true)\n                    .toTransformString()\n                    .toUpperCase();\n\n            var o = cell.orientation;\n\n            var transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\n            var tstring = toTransformString(transform);\n\n            group.transform(\n                tstring + corner\n            );\n\n            return group;\n        }\n\n        return null;\n\n    }\n};\n\nfunction getNeighbors(prog, cell, x, y) {\n    var o = cell.orientation,\n        position = new tmath.Vec2(x, y),\n        down = cellToGlobal(program.directions.DOWN, o).add(position),\n        left = cellToGlobal(program.directions.LEFT, o).add(position),\n        right = cellToGlobal(program.directions.RIGHT, o).add(position),\n        neighbors = {\n            down: {cell: null, position: null},\n            left: {cell: null, position: null},\n            right:{cell: null, position: null}\n        };\n\n    function safeGetCell(prog, pos) {\n        try {\n            var cell = prog.getCell(pos.x, pos.y);\n            if (cell)\n                return cell;\n            else\n                return {type: \"Empty\"};\n        } catch (e) {\n            return {type: \"Empty\"};\n        }\n    }\n    // Now we have vectors that point to our down, left, and right neighbors\n\n    var downNeighbor = safeGetCell(prog, down);\n    if (downNeighbor.type != \"Empty\") {\n        neighbors.down.cell = downNeighbor;\n        neighbors.down.position = down;\n    }\n\n    var leftNeighbor = safeGetCell(prog, left);\n    if (leftNeighbor.type != \"Empty\") {\n        neighbors.left.cell = leftNeighbor;\n        neighbors.left.position = left;\n    }\n\n    var rightNeighbor = safeGetCell(prog, right);\n    if (rightNeighbor.type != \"Empty\") {\n        neighbors.right.cell = rightNeighbor;\n        neighbors.right.position = right;\n    }\n\n    return neighbors;\n}\n\nfunction isPointingTo(source, target) {\n    var direction = cellToGlobal(program.directions.UP, source.cell.orientation),\n        pointedTo = source.position.add(direction),\n        same = pointedTo.equals(target.position),\n        isBranch = source.cell.type.indexOf(\"Branch\") != -1;\n\n    if (!same && (source.cell.type == \"CrossConveyor\" ||\n                  isBranch)  ) {\n        // Additional test for crossconveyor\n        direction = cellToGlobal(program.directions.RIGHT, source.cell.orientation);\n        pointedTo = source.position.add(direction);\n        same = pointedTo.equals(target.position);\n\n        if (!same && isBranch) {\n            direction = cellToGlobal(program.directions.LEFT, source.cell.orientation);\n            pointedTo = source.position.add(direction);\n            same = pointedTo.equals(target.position);\n        }\n    }\n\n    return same;\n\n}\n\nfunction cellToGlobal(d, orientation) {\n    return orientation.invert().apply(d);\n}\n\n\nfunction coordClass(x, y) {\n    return \"cell-x\" + x + \"-y\" + y;\n}\n\n\n\n/**\n Utility function that converts a Snap.Matrix to a Snap transform string\n */\nexport function toTransformString(matrix) {\n    var E = \"\";\n    var s = matrix.split();\n    if (!+s.shear.toFixed(9)) {\n        s.scalex = +s.scalex.toFixed(4);\n        s.scaley = +s.scaley.toFixed(4);\n        s.rotate = +s.rotate.toFixed(4);\n        return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n            (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley] : E) +\n            (s.rotate ? \"r\" + [s.scalex*s.scaley < 0 ? 360 - s.rotate.toFixed(4) : +s.rotate.toFixed(4)] : E);\n\n        // This is the same as what Snap.svg does by default with two major differences (original is in matrix.js)\n        //\n        // 1. No \",0,0\" is appended to the rotate and scale strings, so they will now default to the center of the element\n        //\n        // 2. The complicated one: If we have been mirrored in either x or y but not both (i.e., either scalex or scaley is\n        //    negative, but not both (just test if their product is negative)), our interpretation of \"rotate\" changes.\n        //    in particular, in the mirrored case, rotate needs to be interpreted as going \"backward\" or \"clockwise\". So,\n        //    to get the actual correct rotation in this case, we subtract it from 360. Whether or not the original behavior is\n        //    actually incorrect on the part of Snap needs more study.\n\n    } else {\n        return \"m\" + [matrix.get(0), matrix.get(1), matrix.get(2), matrix.get(3), matrix.get(4), matrix.get(5)];\n    }\n};\n"],"sourceRoot":"/source/"}