{"version":3,"sources":["app.js","codeCell.js","copyTask.js","core.js","editor.js","graphics.js","gui.js","interpreter.js","layout.js","level.js","loader.js","modal.js","picker.js","program.js","stage.js","tmath.js","view.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["/*global radio */\r\n\r\nimport program from 'program';\r\nimport {Interpreter} from 'interpreter';\r\nimport graphics from 'graphics';\r\nimport * as view from 'view';\r\nimport tmath from 'tmath';\r\nimport loader from 'loader';\r\nimport editor from 'editor';\r\nimport core from 'core';\r\nimport {Palette, TileControl, PlayControl} from 'gui';\r\nimport {Modal} from 'modal';\r\nimport {Stage} from 'stage';\r\n\r\nimport {LevelEditor,\r\n        LevelRunner,\r\n        Level} from 'level';\r\n\r\nconst MARGIN = 10, // Space between elements\r\n      PROGRAM_WIDTH = 56 * 9, // program view width, not to exceed\r\n      PROGRAM_HEIGHT = PROGRAM_WIDTH,\r\n      CONTROL_X = MARGIN + PROGRAM_WIDTH + MARGIN;\r\n\r\nfunction setViewbox(svgel, x, y, width, height) {\r\n    svgel.setAttribute('viewBox', [x, y, width, height].join(','));\r\n}\r\n\r\nclass App {\r\n    constructor(width, height) {\r\n        this.program = null;\r\n        this.interpreter = null;\r\n        this.taggle = null;\r\n        this.canvasSize = {\r\n            width: width,\r\n            height: height\r\n        };\r\n    }\r\n\r\n    main() {\r\n        let paper = Snap(document.getElementById('main-svg'));\r\n\r\n        setViewbox(paper.node, 0, 0, this.canvasSize.width, this.canvasSize.height);\r\n\r\n        const bounds = paper.node.viewBox.baseVal;\r\n        paper.rect(bounds.x, bounds.y, bounds.width, bounds.height).addClass('game-bg');\r\n        this.paper = paper;\r\n        this.scratch = paper.g();\r\n\r\n        this.stage = new Stage(paper);\r\n\r\n        editor.init();\r\n\r\n        graphics.preload(paper).then(() => {\r\n\r\n            let tempProgram = new program.Program(9, 9);\r\n\r\n            // fill in start and end with defaults\r\n            tempProgram.setDefaultStartEnd();\r\n\r\n            this.setToProgram(tempProgram);\r\n            this.clearProgramGeneratedAndLoadStrings();\r\n        });\r\n\r\n        var jsonForm = $('#json-form');\r\n        jsonForm.find('button:first').click(() => this.generateJson());\r\n        jsonForm.find('button:last').click(() => this.loadFromJson());\r\n        jsonForm.find('input').val('');\r\n        var manufactoriaForm = $('#manufactoria-form');\r\n        manufactoriaForm.find('button:first').click(() => this.generateManufactoria());\r\n        manufactoriaForm.find('button:last').click(() => this.loadFromManufactoria());\r\n        manufactoriaForm.find('input').val('');\r\n\r\n        $(\"#test-button\").click(() => this.testProgram());\r\n        $(\"#max-length\").val(\"6\");\r\n        $(\"#hang-number\").val(\"1000\");\r\n\r\n        this.specEditor = ace.edit(\"spec-editor\");\r\n        this.specEditor.setTheme(\"ace/theme/twilight\");\r\n        this.specEditor.session.setMode(\"ace/mode/javascript\");\r\n        this.specEditor.setValue(`testString = function(input) {\r\n    // input is a string of B's and R's\r\n    // return true or false\r\n    // for input-output problems, return a string representing the correct state of the tape after the program has run\r\n\r\n    // Example for Manufactoria level 6 (Robocats!)\r\n    // Manufactoria implementation can be loaded with the following URL:\r\n    // http://pleasingfungus.com/Manufactoria/?lvl=6&code=c11:5f2;p12:5f7;p13:5f7;p14:5f6;c12:4f3;c14:4f3;c14:6f0;c13:6f0;i12:6f6;c11:6f1;c15:5f3;c15:6f3;c15:7f3;c15:8f3;c15:9f3;c15:10f3;c15:11f0;c14:11f0;c13:11f0;\r\n    return input.endsWith(\"BB\");\r\n}`);\r\n\r\n        radio('editor:whole-program-changed').subscribe((info) => {\r\n            console.log(info.program);\r\n            this.setToProgram(info.program);\r\n        });\r\n    }\r\n\r\n    clearProgramGeneratedAndLoadStrings() {\r\n        $('#json-form').find('input').val('');\r\n        $('#manufactoria-form').find('input').val('');\r\n    }\r\n\r\n    loadFromJson() {\r\n        const jsonForm = $('#json-form'),\r\n              programString = jsonForm.find('input').val().trim();\r\n        const prog = loader.jsonToProgram(JSON.parse(programString));\r\n        if (prog) {\r\n            this.setToProgram(prog);\r\n            this.clearProgramGeneratedAndLoadStrings();\r\n        } else {\r\n            console.log('Unable to load program string');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    loadFromManufactoria() {\r\n        const manufactoriaForm = $('#manufactoria-form'),\r\n              programString = manufactoriaForm.find('input').val().trim();\r\n        const prog = program.readLegacyProgramString(programString);\r\n        if (prog) {\r\n            this.setToProgram(prog);\r\n            this.clearProgramGeneratedAndLoadStrings();\r\n        } else {\r\n            console.log('Unable to load program string');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    generateJson() {\r\n        if (this.program != null) {\r\n            var json = loader.programToJson(this.program);\r\n            $('#json-form').find('input').val(JSON.stringify(json));\r\n        }\r\n    }\r\n\r\n    generateManufactoria() {\r\n        if (this.program != null) {\r\n            var str = program.generateLegacyProgramString(this.program);\r\n            $('#manufactoria-form').find('input').val(str);\r\n        }\r\n    }\r\n\r\n    setToProgram(prog) {\r\n        const level = new Level(\r\n            'Test',\r\n            prog,\r\n            [{accept: true, input: new core.Tape(), output: new core.Tape(), limit: 0}]\r\n        );\r\n        this.stage.clear();\r\n        this.stage.push(new LevelEditor(\r\n                this.paper,\r\n                0, 0,\r\n                this.canvasSize.width,\r\n                this.canvasSize.height,\r\n                level\r\n            )\r\n        );\r\n        this.program = prog;\r\n    }\r\n\r\n    testProgram() {\r\n\r\n        var specFunction = this.specEditor.getValue();\r\n\r\n        var testString;\r\n        eval(specFunction);\r\n\r\n        var maxLength = parseInt($(\"#max-length\").val());\r\n        var hangNumber = parseInt($(\"#hang-number\").val());\r\n\r\n        var runner = new Interpreter();\r\n        runner.setProgram(this.program);\r\n\r\n        var testVector = [\"\"];\r\n        for (var i = 0; i < Math.pow(2, maxLength); i ++) {\r\n            var s = i.toString(2);\r\n            s = s.replace(/0/g, \"R\");\r\n            s = s.replace(/1/g, \"B\");\r\n            testVector.push(s);\r\n        }\r\n\r\n        var failed = [];\r\n\r\n        for (var t of testVector) {\r\n            var inputTape = new core.Tape();\r\n            inputTape.setFromString(t);\r\n\r\n            runner.setTape(inputTape);\r\n            var didHalt = runner.run(hangNumber);\r\n\r\n            if (!didHalt) {\r\n                this.notifyNonHalting(t);\r\n                return;\r\n            }\r\n\r\n            var pass;\r\n            var specResult = testString(t);\r\n\r\n            if (typeof(specResult) == \"boolean\") {\r\n                pass = (specResult == runner.accept)\r\n                if (!pass) failed.push({input: t, correct: specResult, actual: runner.accept});\r\n            } else if (typeof(specResult) == \"string\") {\r\n                var runnerTape = runner.tape.toString();\r\n                pass = (specResult == runnerTape);\r\n                if (!pass) failed.push({input: t, correct: specResult, actual: runnerTape});\r\n            }\r\n        }\r\n\r\n        this.printResults(failed);\r\n    }\r\n\r\n    notifyNonHalting(nonHalting) {\r\n        $(\"#test-results\").empty();\r\n        $(\"#test-results\").append($(\"<span>\").addClass(\"test-failure\").html(\"Program failed to halt in the specified number of steps on input string: \" + nonHalting));\r\n    }\r\n\r\n    printResults(failed) {\r\n        $(\"#test-results\").empty();\r\n        if (failed.length == 0) {\r\n            $(\"#test-results\").append($(\"<span>\").addClass(\"test-success\").html(\"Programs match behavior on all tested strings.\"));\r\n        } else {\r\n            for (var f of failed) {\r\n                var string = \"Failed on input string: \" + f.input;\r\n                $(\"#test-results\").append($(\"<span>\").addClass(\"test-failure\").html(string));\r\n\r\n                var correctString = typeof(f.correct) == \"boolean\" ? (f.correct ? \"ACCEPT\" : \"REJECT\") : f.correct;\r\n                var actualString = typeof(f.actual) == \"boolean\" ? (f.actual ? \"ACCEPT\" : \"REJECT\") : f.actual;\r\n\r\n                $(\"#test-results\").append($(\"<span>\").addClass(\"test-failure\").html(\"Correct: \" + correctString));\r\n                $(\"#test-results\").append($(\"<span>\").addClass(\"test-failure\").html(\"Actual: \" + actualString));\r\n                $(\"#test-results\").append($(\"<br>\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","\r\nimport program from 'program';\r\nimport core from 'core';\r\n\r\nlet codeCells = {\r\n\r\n    /**\r\n     Conveyor\r\n\r\n     Moves execution UP to the next cell\r\n     Makes no changes to the tape\r\n     */\r\n    Conveyor: function Conveyor(head) {\r\n        return [false, null, program.directions.UP];\r\n    },\r\n\r\n    /**\r\n     CrossConveyor\r\n\r\n     Moves execution UP if the previous facing was UP or DOWN\r\n     Moves execution RIGHT if the previous facing was RIGHT or LEFT\r\n     Makes no changes to the tape\r\n     (This cell, like conveyor, will handle orientation implicitly by letting the default orientation be ^>)\r\n     */\r\n    CrossConveyor: function CrossConveyor(head, previousFacing) {\r\n        if (previousFacing.equals(program.directions.UP) || previousFacing.equals(program.directions.DOWN)) {\r\n            return [false, null, program.directions.UP];\r\n        } else if (previousFacing.equals(program.directions.LEFT) || previousFacing.equals(program.directions.RIGHT)) {\r\n            return [false, null, program.directions.RIGHT];\r\n        }\r\n    },\r\n\r\n    /**\r\n     BranchBR\r\n\r\n     If head is RED, pop tape and move LEFT\r\n     If head is BLUE, pop tape and move RIGHT\r\n     Otherwise, don't pop and move UP\r\n     */\r\n    BranchBR: function BranchBR(head) {\r\n        if (head === core.RED) {\r\n            return [true, null, program.directions.LEFT];\r\n        }\r\n\r\n        if (head === core.BLUE) {\r\n            return [true, null, program.directions.RIGHT];\r\n        }\r\n\r\n        return [false, null, program.directions.UP];\r\n    },\r\n\r\n    /**\r\n     BranchGY\r\n\r\n     If head is GREEN, pop tape and move LEFT\r\n     If head is YELLOW, pop tape and move RIGHT\r\n     Otherwise, don't pop and move UP\r\n     */\r\n    BranchGY: function BranchGY(head) {\r\n        if (head === core.GREEN) {\r\n            return [true, null, program.directions.LEFT];\r\n        }\r\n\r\n        if (head === core.YELLOW) {\r\n            return [true, null, program.directions.RIGHT];\r\n        }\r\n\r\n        return [false, null, program.directions.UP];\r\n    },\r\n\r\n    /**\r\n     Writers\r\n     Append <color>\r\n     Move UP\r\n     */\r\n    WriteB: function WriteB(head) {\r\n        return [false, core.BLUE, program.directions.UP];\r\n    },\r\n\r\n    WriteR: function WriteR(head) {\r\n        return [false, core.RED, program.directions.UP];\r\n    },\r\n\r\n    WriteG: function WriteG(head) {\r\n        return [false, core.GREEN, program.directions.UP];\r\n    },\r\n\r\n    WriteY: function WriteY(head) {\r\n        return [false, core.YELLOW, program.directions.UP];\r\n    }\r\n\r\n};\r\n\r\nexport default {\r\n    codeCells: codeCells\r\n};\r\n","'use strict';\r\n\r\nvar gulp = require('gulp');\r\nvar newer = require('gulp-newer');\r\n\r\n/**\r\n * Builds a function that makes it easy to create gulp copy tasks\r\n * @param  {Array<string>} defaultTasks Array into which to push tasks that are created by this fn\r\n * @param  {Map<string,string>} paths object literal or map that maps names to paths\r\n * @param  {String} defaultDest  The glob path that is the default destination when one is not provided\r\n * @return {fn(name,dest)}              A function taking the task name and an optional destination that\r\n *                                      creates copy tasks\r\n */\r\nmodule.exports = function(defaultTasks, paths, defaultDest) {\r\n  if (!Array.isArray(defaultTasks)) {\r\n    throw new Error('defaultTasks needs to be an array');\r\n  }\r\n  if (paths === undefined) {\r\n    throw new Error('paths should be object literal to look names up in and find input paths');\r\n  }\r\n  if (defaultDest === undefined) {\r\n    throw new Error('defaultDest should be a string output path to be used by default when not ' +\r\n      'specified or available in the paths map');\r\n  }\r\n  return function copyTask(name, dest) {\r\n    if (dest === undefined) {\r\n      if (paths.hasOwnProperty(name + 'Out')) {\r\n        dest = paths[name + 'Out'];\r\n      } else {\r\n        dest = defaultDest;\r\n      }\r\n    }\r\n    gulp.task(name, function() {\r\n      return gulp.src(paths[name])\r\n        .pipe(newer(dest))\r\n        .pipe(gulp.dest(dest));\r\n    });\r\n    defaultTasks.push(name);\r\n  };\r\n};\r\n","\r\nimport signals from 'signals.js';\r\nimport {tapeToJson} from 'loader';\r\n\r\n/* Symbols */\r\nlet EMPTY = {symbol: 'empty'},\r\n    RED = {symbol: 'red'},\r\n    BLUE = {symbol: 'blue'},\r\n    GREEN = {symbol: 'green'},\r\n    YELLOW = {symbol: 'yellow'},\r\n\r\n    symbols = {\r\n        R: RED,\r\n        B: BLUE,\r\n        G: GREEN,\r\n        Y: YELLOW\r\n    };\r\n\r\nexport {RED, GREEN, BLUE, YELLOW, symbols};\r\n\r\n/* Tape\r\n Represents an ordered queue of symbols\r\n */\r\nexport class Tape {\r\n    constructor() {\r\n        this.symbols = [];\r\n        this.changed = new signals.Signal();\r\n    }\r\n\r\n    setFromString(s) {\r\n        for (var c of s) {\r\n            if (c == \"0\") c = \"R\";\r\n            if (c == \"1\") c = \"B\";\r\n            this.append(symbols[c]);\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        var codes = {'red': 'R', 'blue': 'B', 'green': 'G', 'yellow': 'Y'};\r\n        return this.symbols.map(x => codes[x.symbol]).join('');\r\n    }\r\n\r\n    head() {\r\n        if (this.symbols.length > 0) {\r\n            return this.symbols[0];\r\n        } else {\r\n            return this.symbols.EMPTY;\r\n        }\r\n    }\r\n\r\n    pop() {\r\n        if (this.symbols.length > 0) {\r\n            var popped = this.symbols.shift();\r\n            this.changed.dispatch('pop');\r\n            return popped;\r\n        } else {\r\n            return this.symbols.EMPTY;\r\n        }\r\n    }\r\n\r\n    append(s) {\r\n        this.symbols.push(s);\r\n        this.changed.dispatch('append');\r\n    }\r\n\r\n    static clone(otherTape) {\r\n        var newTape = new Tape();\r\n        newTape.symbols = otherTape.symbols.slice(0);\r\n        return newTape;\r\n    }\r\n\r\n    static isEqual(t1, t2) {\r\n        return tapeToJson(t1) == tapeToJson(t2);\r\n    }\r\n\r\n};\r\n\r\nexport default {\r\n    Tape: Tape,\r\n    RED: RED,\r\n    GREEN: GREEN,\r\n    BLUE: BLUE,\r\n    YELLOW: YELLOW,\r\n    symbols: symbols\r\n};\r\n","/*global radio */\r\n\r\nimport program from 'program';\r\nimport graphics from 'graphics';\r\nimport * as view from 'view';\r\nimport tmath from 'tmath';\r\nimport {orientationByName, isMirrored, nameFromOrientation} from 'tmath';\r\n\r\nlet events = {\r\n    tileSelected: 'tile-selected',\r\n    cellSelected: 'cell-selected',\r\n    mirror: 'mirror',\r\n    rotate: 'rotate',\r\n    setDirection: 'set-direction',\r\n    delete: 'delete',\r\n    hotKey: 'hot-key'\r\n};\r\n\r\nfunction trigger(event, args) {\r\n    radio(event).broadcast(args);\r\n};\r\n\r\nfunction registerEvents(evts) {\r\n    Object.keys(evts).forEach(function(key) {\r\n        radio(events[key]).subscribe(evts[key]);\r\n    });\r\n}\r\n\r\nfunction unregisterEvents(evts) {\r\n    Object.keys(evts).forEach(function(key) {\r\n        radio(events[key]).unsubscribe(evts[key]);\r\n    });\r\n}\r\n\r\nfunction init() {\r\n    document.body.addEventListener('keydown', dispatchKeyEvents);\r\n    document.body.addEventListener('mousemove', trackMouse);\r\n};\r\n\r\nfunction dispatchKeyEvents(evt) {\r\n    var data = _.clone(mousePosition),\r\n        what = null,\r\n        key = evt.key || String.fromCharCode(evt.keyCode).toLowerCase();\r\n\r\n    switch (key) {\r\n        case 'r':\r\n            what = events.rotate;\r\n            break;\r\n        case 'm':\r\n            what = (events.mirror);\r\n            break;\r\n        case 's':\r\n            what = events.setDirection;\r\n            data.dir = 'UP';\r\n            break;\r\n        case 'd':\r\n            what = events.setDirection;\r\n            data.dir = 'RIGHT';\r\n            break;\r\n        case 'w':\r\n            what = events.setDirection;\r\n            data.dir = 'DOWN';\r\n            break;\r\n        case 'a':\r\n            what = events.setDirection;\r\n            data.dir = 'LEFT';\r\n            break;\r\n        case 'x':\r\n            what = events.delete;\r\n            break;\r\n    }\r\n\r\n    if (!what) {\r\n        what = events.hotKey;\r\n        data.key = key;\r\n    }\r\n\r\n    trigger(what, data);\r\n}\r\n\r\nlet mousePosition = {\r\n    x: 0,\r\n    y: 0\r\n};\r\n\r\nfunction trackMouse(evt) {\r\n    mousePosition.x = evt.clientX;\r\n    mousePosition.y = evt.clientY;\r\n}\r\n\r\nlet IDLE = Symbol('IDLE'),\r\n    PLACING = Symbol('PLACING'),\r\n    INPLACE = Symbol('INPLACE');\r\n\r\nfunction cycleGenerator() {\r\n    let os = ['UP',\r\n              'RIGHT',\r\n              'DOWN',\r\n              'LEFT'];\r\n\r\n    return function(current) {\r\n        if (!current)\r\n            current = 'LEFT';\r\n\r\n        let index = (os.indexOf(current) + 1) % os.length,\r\n            oName = os[index];\r\n\r\n        return oName;\r\n    };\r\n};\r\n\r\nlet cycleOrientation = cycleGenerator();\r\n\r\nclass Editor {\r\n    constructor(paper, programView, tileControl) {\r\n        this.paper = paper;\r\n        this.programView = programView;\r\n\r\n        //this.tileCursor = null;\r\n        this.state = IDLE;\r\n\r\n        // this.currentTile = null;\r\n        // this.currentOrientation = \"UP\";\r\n        //this.mirror = false;\r\n        this.tileControl = tileControl;\r\n\r\n        this._events = {\r\n            tileSelected: (data) => this.onTileSelected(data),\r\n            cellSelected: (data) => this.onCellSelected(data),\r\n            rotate: (data) => this.onRotateCell(data),\r\n            mirror: (data) => this.onMirror(data),\r\n            setDirection: (data) => this.onSetDirection(data),\r\n            delete: (data) => this.onDelete(data)\r\n        };\r\n    }\r\n\r\n    enable() {\r\n        registerEvents(this._events);\r\n        this.tileControl.show(true);\r\n    }\r\n\r\n    disable() {\r\n        //this.clearCursor();\r\n        unregisterEvents(this._events);\r\n        this.tileControl.show(false);\r\n    }\r\n\r\n    move(evt, x, y) {\r\n        if (this.state == PLACING && this.tileCursor) {\r\n\r\n            var mousePoint = graphics.screenPointToLocal(mousePosition.x, mousePosition.y, this.paper),\r\n\r\n                oName = this.currentOrientation,\r\n\r\n                o = orientationByName(oName, this.mirror),\r\n\r\n                rotate = view.toTransformString(\r\n                    Snap.matrix(o.a, o.b, o.c, o.d, 0, 0)\r\n                ),\r\n\r\n                translate = Snap.matrix()\r\n                    .translate(mousePoint.x - 56 / 2, mousePoint.y - 56 / 2)\r\n                    .toTransformString().toUpperCase();\r\n\r\n            this.tileCursor.transform(rotate + translate);\r\n        }\r\n    }\r\n\r\n    onTileSelected(data) {\r\n\r\n        this.tileControl.onTileSelected(data.tile);\r\n\r\n        if (this.state === IDLE || this.state === PLACING) {\r\n            this.state = PLACING;\r\n        } else if (this.state === INPLACE) {\r\n            this.setInplace();\r\n        }\r\n\r\n        //this.currentTile = data.tile;\r\n\r\n        // if (this.tileCursor != null)\r\n        //     this.tileCursor.remove();\r\n\r\n        // var tileGraphic = this.paper.g(graphics.getGraphic(data.tile)),\r\n        //     mousePoint = graphics.screenPointToLocal(data.x, data.y, this.paper);\r\n\r\n        // tileGraphic.node.style.pointerEvents = \"none\"; // disable click events\r\n\r\n        // this.paper.mousemove(\r\n        //     this.move.bind(this)\r\n        // );\r\n\r\n        // this.tileCursor = tileGraphic;\r\n\r\n        // this.move(data, data.x, data.y);\r\n    }\r\n\r\n    onCellSelected(data) {\r\n        if (this.state == PLACING && this.tileControl.currentTile) {\r\n            // We can now place the tile\r\n\r\n            let curCell = this.programView.program.getCell(\r\n                data.cell.x,\r\n                data.cell.y\r\n            );\r\n\r\n            if (curCell.type != 'Start' && curCell.type != 'End') {\r\n\r\n                this.programView.program.setCell(data.cell.x,\r\n                                                 data.cell.y,\r\n                                                 this.tileControl.currentTile,\r\n                                                 orientationByName(\r\n                                                     this.tileControl.currentOrientation,\r\n                                                     this.tileControl.mirror)\r\n                                                );\r\n            }\r\n        } else if (this.state == IDLE) {\r\n            let cellIndex = {x: data.cell.x, y: data.cell.y},\r\n\r\n                curCell = this.programView.program.getCell(\r\n                    cellIndex.x,\r\n                    cellIndex.y\r\n                ),\r\n\r\n                type = curCell.type;\r\n\r\n            if (type != 'Start' && type != 'End' && type != 'Empty') {\r\n                this.state = INPLACE;\r\n\r\n                // Highlight selected cell\r\n                radio('highlighted').broadcast(cellIndex);\r\n\r\n                this.highlightedCell = cellIndex;\r\n\r\n                let cellState = nameFromOrientation(curCell);\r\n\r\n                this.tileControl.currentOrientation = cellState.direction;\r\n                this.tileControl.mirror = cellState.mirrored;\r\n\r\n                this.tileControl.onTileSelected(curCell.type);\r\n            }\r\n        } else if (this.state == INPLACE) {\r\n\r\n            if (this.highlightedCell && data && data.cell) {\r\n                let cellIndex = {x: data.cell.x, y: data.cell.y},\r\n\r\n                    curCell = this.programView.program.getCell(\r\n                        cellIndex.x,\r\n                        cellIndex.y\r\n                    ),\r\n\r\n                    type = curCell.type;\r\n\r\n                if (type != 'Start' && type != 'End' && type != 'Empty') {\r\n                    this.state = INPLACE;\r\n\r\n                    // Highlight selected cell\r\n                    radio('highlighted').broadcast(cellIndex);\r\n\r\n                    this.highlightedCell = cellIndex;\r\n\r\n                    let cellState = nameFromOrientation(curCell);\r\n\r\n                    this.tileControl.currentOrientation = cellState.direction;\r\n                    this.tileControl.mirror = cellState.mirrored;\r\n\r\n                    this.tileControl.onTileSelected(curCell.type);\r\n                } else if (type == 'Empty') {\r\n                    this.clearHighlight();\r\n                    this.state = IDLE;\r\n                }\r\n            } else {\r\n                this.clearHighlight();\r\n                this.state = IDLE;\r\n            }\r\n        }\r\n    }\r\n\r\n    onRotateCell(data) {\r\n        if (this.state == PLACING) {\r\n            this.tileControl.onRotate();\r\n        } else if (this.state == IDLE &&\r\n                   data.x !== undefined &&\r\n                   data.y !== undefined) {\r\n\r\n            // see if we are hovering over the programview\r\n            var el = Snap.getElementByPoint(data.x, data.y);\r\n            var info = el.data('tileInfo');\r\n\r\n            if (el && info) {\r\n                // Now have reference to cell\r\n                var o = info.cell.orientation,\r\n                    type = info.cell.type,\r\n                    x = info.x,\r\n                    y = info.y;\r\n                o = o.compose(tmath.Mat2x2.kROT1);\r\n\r\n                this.programView.program.setCell(x, y, type, o);\r\n            }\r\n        } else if (this.state === INPLACE &&\r\n                   this.tileControl.currentTile &&\r\n                   this.highlightedCell) {\r\n            // Rotate highlighted cell\r\n            this.tileControl.onRotate();\r\n\r\n            this.programView.program.setCell(\r\n                this.highlightedCell.x,\r\n                this.highlightedCell.y,\r\n                this.tileControl.currentTile,\r\n                orientationByName(\r\n                    this.tileControl.currentOrientation,\r\n                    this.tileControl.mirror)\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n    onSetDirection(data) {\r\n        if (this.state == PLACING || this.state == INPLACE) {\r\n            this.tileControl.onSetDirection(data.dir);\r\n        } else if (this.state == IDLE && data && data.x && data.y) {\r\n            // see if we are hovering over the programview\r\n            var el = Snap.getElementByPoint(data.x, data.y);\r\n            var info = el.data('tileInfo');\r\n\r\n            if (el && info) {\r\n                // Now have reference to cell\r\n                var type = info.cell.type,\r\n                    x = info.x,\r\n                    y = info.y,\r\n                    o = info.cell.orientation,\r\n                    mirrored = isMirrored(o);\r\n\r\n                if (type != 'Start' && type != 'End' && type != 'Empty')\r\n\r\n                    this.programView.program.setCell(x, y, type, orientationByName(data.dir, mirrored));\r\n            }\r\n        }\r\n\r\n        if (this.state == INPLACE) {\r\n            this.setInplace();\r\n        }\r\n    }\r\n\r\n    setInplace() {\r\n        if (this.tileControl.currentTile &&\r\n            this.highlightedCell) {\r\n\r\n            this.programView.program.setCell(\r\n                this.highlightedCell.x,\r\n                this.highlightedCell.y,\r\n                this.tileControl.currentTile,\r\n                orientationByName(\r\n                    this.tileControl.currentOrientation,\r\n                    this.tileControl.mirror)\r\n            );\r\n        }\r\n    }\r\n\r\n    onMirror(data) {\r\n        if (this.state == PLACING || this.state == INPLACE) {\r\n            this.tileControl.onMirror();\r\n        } else if (this.state == IDLE && data && data.x && data.y) {\r\n            // see if we are hovering over the programview\r\n            var el = Snap.getElementByPoint(data.x, data.y);\r\n            var info = el.data('tileInfo');\r\n\r\n            if (el && info) {\r\n                // Now have reference to cell\r\n                var o = info.cell.orientation,\r\n                    type = info.cell.type,\r\n                    x = info.x,\r\n                    y = info.y;\r\n                o = tmath.Mat2x2.kMIR.compose(o);\r\n                if (type != 'Start' && type != 'End' && type != 'Empty')\r\n                    this.programView.program.setCell(x, y, type, o);\r\n            }\r\n        }\r\n\r\n        if (this.state == INPLACE) {\r\n            this.setInplace();\r\n        }\r\n    }\r\n\r\n    clearCursor() {\r\n        this.state = IDLE;\r\n        if (this.tileCursor) {\r\n            this.tileCursor.remove();\r\n            this.tileCursor.unmousemove(this.move);\r\n            this.tileCursor = null;\r\n        }\r\n\r\n        this.currentTile = null;\r\n    }\r\n\r\n    onDelete(data) {\r\n        if (this.state == PLACING) {\r\n            // Reset orientation for next time\r\n            this.tileControl.clear();\r\n            this.state = IDLE;\r\n        } else if (this.state == IDLE && data && data.x && data.y) {\r\n            // see if we are hovering over the programview\r\n\r\n            let el = Snap.getElementByPoint(data.x, data.y),\r\n\r\n                info = el.data('tileInfo');\r\n\r\n            if (el && info) {\r\n                // Now have reference to cell\r\n                let p = info.program,\r\n                    type = info.cell.type,\r\n                    x = info.x,\r\n                    y = info.y;\r\n                if (type != 'Start' && type != 'End' && type != 'Empty')\r\n                    p.setCell(x, y, 'Empty');\r\n            }\r\n        } else if (this.state === INPLACE) {\r\n            if (this.highlightedCell) {\r\n                let c = this.highlightedCell;\r\n\r\n                this.programView.program.setCell(c.x, c.y, 'Empty');\r\n            }\r\n\r\n            this.tileControl.clear();\r\n            this.clearHighlight();\r\n            this.state = IDLE;\r\n        }\r\n    }\r\n\r\n    clearHighlight() {\r\n        this.highlightedCell = null;\r\n        this.tileControl.clear();\r\n        radio('unhighlighted').broadcast();\r\n    }\r\n};\r\n\r\nexport {\r\n    Editor,\r\n    init,\r\n    events,\r\n    trigger,\r\n    registerEvents,\r\n    unregisterEvents,\r\n    cycleGenerator\r\n};\r\n\r\nexport default {\r\n    Editor,\r\n    init,\r\n    events,\r\n    trigger,\r\n    registerEvents,\r\n    unregisterEvents,\r\n    cycleGenerator\r\n};\r\n","\r\nlet imageMap = {\r\n    Conveyor: 'img/conveyor.svg',\r\n    ConveyorElbow: 'img/conveyor-elbow.svg',\r\n    ConveyorTee: 'img/conveyor-tee.svg',\r\n    ConveyorTeeTwo: 'img/conveyor-tee-2.svg',\r\n    ConveyorEx: 'img/conveyor-ex.svg',\r\n    CrossConveyor: 'img/cross-conveyor.svg',\r\n    BranchBR: 'img/branch-br.svg',\r\n    BranchGY: 'img/branch-gy.svg',\r\n    WriteB: 'img/write-blue.svg',\r\n    WriteR: 'img/write-red.svg',\r\n    WriteY: 'img/write-yellow.svg',\r\n    WriteG: 'img/write-green.svg',\r\n    WriterConnector: 'img/writer-connector.svg',\r\n    Start: 'img/start.svg',\r\n    End: 'img/end.svg',\r\n\r\n    DeleteButton: 'img/delete-button.svg',\r\n    MirrorButton: 'img/mirror-button.svg',\r\n    SizeUpButton: 'img/size-up-button.svg',\r\n    SizeDownButton: 'img/size-down-button.svg',\r\n    StopButton:  'img/stop-button.svg'\r\n},\r\n\r\n    globalCanvas = null,\r\n\r\n    allImagePromises =\r\n        Object.keys(imageMap).map(function(key) {\r\n            var url = imageMap[key];\r\n\r\n            var p = getSVG(url);\r\n\r\n            p.then(function(svg) {\r\n                imageMap[key] = svg;\r\n            });\r\n\r\n            return p;\r\n        }),\r\n\r\n    preloadPromise = Promise.all(allImagePromises);\r\n\r\nfunction preload(paper) {\r\n    globalCanvas = paper.g().attr({visibility: 'hidden'});\r\n    return preloadPromise;\r\n};\r\n\r\nfunction getGraphic(name) {\r\n    var original = imageMap[name];\r\n\r\n    if (original.parent() !== globalCanvas)\r\n        globalCanvas.append(original);\r\n\r\n    if (original) {\r\n        return globalCanvas.use(original).attr({visibility: 'visible'});\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nfunction screenPointToLocal(x, y, element) {\r\n    var svg = element.node.ownerSVGElement || element.node,\r\n        spt = svg.createSVGPoint(),\r\n        mat = element.node.getScreenCTM();\r\n\r\n    spt.x = x;\r\n    spt.y = y;\r\n\r\n    return spt.matrixTransform(mat.inverse());\r\n};\r\n\r\nexport {preload, getGraphic, screenPointToLocal};\r\nexport default {preload, getGraphic, screenPointToLocal};\r\n\r\nfunction getSVG(url) {\r\n    if (!getSVG.cache) {\r\n        getSVG.cache = {};\r\n    }\r\n\r\n    if (getSVG.cache[url] == undefined) {\r\n        // retrieve the graphic\r\n        var p = new Promise(\r\n            function(resolve, reject) {\r\n                Snap.load(\r\n                    url,\r\n                    function(fragment) {\r\n                        var g = fragment.select('g');\r\n                        getSVG.cache[url] = Promise.resolve(g);\r\n\r\n                        resolve(g.clone());\r\n                    });\r\n            }\r\n        );\r\n\r\n        getSVG.cache[url] = p;\r\n\r\n        return p;\r\n    } else {\r\n        return Promise.resolve(getSVG.cache[url]).then(function(g) {\r\n            return g.clone();\r\n        });\r\n    }\r\n};\r\n","/**\r\n * User interaction classes\r\n */\r\n\r\nimport editor from 'editor';\r\nimport graphics from 'graphics';\r\nimport codeCell from 'codeCell';\r\nimport {toTransformString} from 'view';\r\nimport {LockedPicker} from 'picker';\r\nimport {orientationByName} from 'tmath';\r\n\r\nexport class BaseControl {\r\n    constructor(paper, x, y) {\r\n        this.paper = paper;\r\n        this._x = x;\r\n        this._y = y;\r\n\r\n        this._layer = paper.g();\r\n        this._translate();\r\n\r\n        this.visible = false;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(_x) {\r\n        this._x = _x;\r\n        this._translate();\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(_y) {\r\n        this._y = _y;\r\n        this._translate();\r\n    }\r\n\r\n    _translate() {\r\n        this._layer.transform(Snap.matrix().translate(this._x, this._y));\r\n    }\r\n\r\n    show(shouldShow) {\r\n        shouldShow = shouldShow !== undefined ? shouldShow : true;\r\n        this._layer.attr({\r\n            opacity: shouldShow ? 1 : 0\r\n        });\r\n    }\r\n\r\n    onVisible() {\r\n        this.visible = true;\r\n    }\r\n\r\n    onHidden() {\r\n        this.visible = false;\r\n    }\r\n\r\n    _translate() {\r\n        this._layer.transform(Snap.matrix().translate(this._x, this._y));\r\n    }\r\n\r\n    remove() {\r\n        this._layer.remove();\r\n    }\r\n};\r\n\r\nexport class Palette extends BaseControl {\r\n\r\n    constructor(paper, x, y, maxWidth, columns, margin) {\r\n        super(paper, x, y);\r\n\r\n        this.columns = columns > 0 ? columns : 1; // negative columns?\r\n        this.columnWidth = 56;\r\n        this.tiles = this._layer.g();\r\n        this.maxWidth = maxWidth;\r\n        this.margin = margin || 20;\r\n        this.tileWidth = 56; // tiles are 56 x 56 px\r\n\r\n        // Get names of all types to draw\r\n        this.typesToDraw = Object.keys(codeCell.codeCells);\r\n\r\n        var actualColumns = this.columns <= this.typesToDraw.length ?\r\n                this.columns :\r\n                this.typesToDraw.length;\r\n\r\n        this.baseWidth = actualColumns * (this.tileWidth + this.margin) - this.margin;\r\n\r\n        this.width = this.baseWidth * this.getScale();\r\n\r\n        this.drawPalette();\r\n\r\n        this._events = {\r\n            hotKey: (data) => this.hotKey(data)\r\n        };\r\n\r\n        editor.registerEvents(this._events);\r\n    }\r\n\r\n    getScale() {\r\n        return this.maxWidth / this.baseWidth;\r\n    }\r\n\r\n    hotKey(data) {\r\n        var num = parseInt(data.key);\r\n        if (!isNaN(num) && num > 0 && num <= this.typesToDraw.length) {\r\n            editor.trigger(\r\n                editor.events.tileSelected,\r\n                {\r\n                    tile: this.typesToDraw[num - 1],\r\n                    x: data.x,\r\n                    y: data.y\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    drawPalette() {\r\n        this.tiles.clear();\r\n\r\n        const SCALE_X = this.getScale();\r\n\r\n        // 56 pixel tile + 10 pixel text + 10 pixel padding\r\n        const HEIGHT = 56 + 20,\r\n              WIDTH = 56 + 20,\r\n\r\n              cellImages = this.typesToDraw.map(function(name) {\r\n                  const image = this.paper.g(graphics.getGraphic(name));\r\n                  if (image != null) return {name:name, image:image};\r\n                  else return undefined;\r\n\r\n              }.bind(this)).filter(_.negate(_.isUndefined));\r\n\r\n        cellImages.map(function(image, index) {\r\n\r\n            const group = this.tiles.g(),\r\n\r\n                  X_INDEX = index % this.columns,\r\n                  Y_INDEX = Math.floor(index / this.columns),\r\n\r\n                  transform = Snap.matrix().scale(SCALE_X)\r\n                      .translate(X_INDEX * WIDTH, Y_INDEX * HEIGHT);\r\n\r\n            group.click(\r\n                (evt, x, y) => {\r\n                    editor.trigger(\r\n                        editor.events.tileSelected,\r\n                        {\r\n                            tile: image.name,\r\n                            event: evt,\r\n                            x: x,\r\n                            y: y\r\n                        }\r\n                    );\r\n                });\r\n\r\n            group.transform(transform.toTransformString());\r\n\r\n            const r = group.rect(-1, -1, 58, 58);\r\n            r.attr({\r\n                stroke: '#111',\r\n                fill: '#fff',\r\n                strokeWidth: 2\r\n            }).addClass('palette-tile-bg');\r\n\r\n            image.image.addClass('palette-tile');\r\n            group.append(image.image);\r\n\r\n            const label = group.text(56 / 2, HEIGHT - 8, image.name);\r\n            label.attr({\r\n                textAnchor: 'middle',\r\n                text: index + 1\r\n            }).addClass('label-text');\r\n\r\n            const title = Snap.parse('<title>' + image.name + '</title>');\r\n\r\n            group.append(title);\r\n        }, this);\r\n    }\r\n};\r\n\r\n/**\r\n * TileControl\r\n * GUI control for manipulating tile before placing\r\n *\r\n * @param {Snap.Element} paper Snap layer to place content\r\n * @param {number} x X coordinate\r\n * @param {number} y Y coordinate\r\n * @param {number} width Maximum width to fit content\r\n * @param {number} height Maximum height to fit contentxs\r\n */\r\n\r\nexport class TileControl extends BaseControl {\r\n    constructor(paper, x, y, width, height) {\r\n        super(paper, x, y);\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.currentTile = null;\r\n        this.currentOrientation = 'UP';\r\n        this.mirror = false;\r\n\r\n        this.cycleOrientation = editor.cycleGenerator();\r\n\r\n        this.layer = this._layer.g();\r\n        this.tileLayer = this.layer.g();\r\n\r\n        this.tileLayer.transform('T20,20');\r\n\r\n        this.tileLayer.click(\r\n            (evt)=> {\r\n                editor.trigger(editor.events.rotate, {});\r\n            });\r\n\r\n        this.calculateScale();\r\n\r\n        const down = this._makeDirButton(32, 0, 0),\r\n            right = this._makeDirButton(20 + 56, 32, 90),\r\n            up = this._makeDirButton(32, 20 + 56, 180),\r\n            left = this._makeDirButton(0, 32, 270);\r\n\r\n        function bt(el, dir) {\r\n            el.click(() => editor.trigger(editor.events.setDirection, {dir: dir}));\r\n        }\r\n\r\n        bt(up, 'UP'); bt(right, 'RIGHT'); bt(down, 'DOWN'); bt(left, 'LEFT');\r\n\r\n        const del = this._makeDeleteButton(96 + 32, 96 * 2 / 3, 'tile-control-button', 'delete');\r\n\r\n        del.click(\r\n            () => editor.trigger(editor.events.delete, {})\r\n        );\r\n\r\n        const mirror = this._makeMirrorButton(96 + 32, 96 / 3, 'tile-control-button', 'mirror');\r\n\r\n        mirror.click(\r\n            () => editor.trigger(editor.events.mirror)\r\n        );\r\n    }\r\n\r\n    _makeDirButton(x, y, angle=0) {\r\n        const button = this.layer.g();\r\n        button.addClass('tile-control-button').addClass('direction');\r\n\r\n        const rect = button.rect(1, 1, 30, 18, 2, 2).attr({fill: 'gray'});\r\n        rect.addClass('bg');\r\n\r\n        const arrow = button.path('M6,16L16,4L26,16L6,16');\r\n        arrow.attr({fill:'white'});\r\n\r\n        if (angle == 90) {\r\n            x += 20;\r\n        } else if (angle == 180) {\r\n            y += 20;\r\n            x += 32;\r\n        } else if (angle == 270) {\r\n            y += 32;\r\n        }\r\n\r\n        button.transform('r' + angle + ',0,0' + 'T' + x + ',' + y);\r\n\r\n        return button;\r\n    }\r\n\r\n    _makeDeleteButton(x, y) {\r\n        return makeButton(x, y, this.layer, 'DeleteButton', 'tile-control-button', 'delete');\r\n    }\r\n\r\n    _makeMirrorButton(x, y) {\r\n        return makeButton(x, y, this.layer, 'MirrorButton', 'tile-control-button', 'mirror');\r\n    }\r\n\r\n    calculateScale() {\r\n        /*\r\n         Graphics are laid out with 56x56 tile in center with 20px gutters on all other sides\r\n         Unscaled width = 56 + 20 + 20 = 96\r\n         */\r\n        const X_SCALE = this.width / 96;\r\n        this.layer.transform('s' + X_SCALE);\r\n    }\r\n\r\n    onTileSelected(tile) {\r\n        if (tile != this.currentTile) {\r\n            this.currentTile = tile;\r\n            this.drawTile();\r\n            this.orientTile();\r\n        }\r\n    }\r\n\r\n    drawTile() {\r\n        this.tileLayer.clear();\r\n\r\n        const tileGraphic = this.tileLayer.g(\r\n            graphics.getGraphic(this.currentTile)\r\n        );\r\n\r\n        if (tileGraphic) {\r\n            this.currentGraphic = tileGraphic;\r\n            this.orientTile();\r\n        } else {\r\n            this.currentGraphic = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.tileLayer.clear();\r\n\r\n        this.currentGraphic = null;\r\n        this.currentTile = null;\r\n        this.currentOrientation = 'UP';\r\n        this.mirror = false;\r\n    }\r\n\r\n    orientTile() {\r\n        if (this.currentGraphic) {\r\n            const oName = this.currentOrientation,\r\n\r\n                o = orientationByName(oName, this.mirror),\r\n\r\n                rotate = toTransformString(\r\n                    Snap.matrix(o.a, o.b, o.c, o.d, 0, 0)\r\n                );\r\n\r\n            this.currentGraphic.transform(rotate + 'S' + 40 / 56);\r\n        }\r\n    }\r\n\r\n    onRotate() {\r\n        this.currentOrientation = this.cycleOrientation(this.currentOrientation);\r\n        this.orientTile();\r\n    }\r\n\r\n    onSetDirection(dir) {\r\n        this.currentOrientation = dir;\r\n        this.orientTile();\r\n    }\r\n\r\n    onMirror() {\r\n        this.mirror = !!!this.mirror;\r\n        this.orientTile();\r\n    }\r\n};\r\n\r\nexport class SizeControl extends BaseControl {\r\n    constructor(paper, x, y, height=32) {\r\n        super(paper, x, y);\r\n        this.height = height;\r\n\r\n        this.buttonLayer = this._layer.g();\r\n\r\n        this.buttonLayer.transform('s' + height / 32);\r\n\r\n        this.sizeDown = makeButton(0, 0, this.buttonLayer, 'SizeDownButton', 'play-control', 'size-down');\r\n        this.sizeUp = makeButton(32, 0, this.buttonLayer, 'SizeUpButton', 'play-control', 'size-up');\r\n\r\n        this.picker = new LockedPicker({\r\n            el: this.buttonLayer.node,\r\n            children: '.play-control',\r\n            enableClass: 'enable',\r\n            disableClass: 'disable',\r\n            rules: {}\r\n        });\r\n\r\n        function bc(btn, which) {\r\n            btn.click(() => {\r\n                radio(which + '-clicked').broadcast();\r\n            });\r\n        }\r\n\r\n        bc(this.sizeUp, 'size-up');\r\n        bc(this.sizeDown, 'size-down');\r\n    }\r\n\r\n    get width() {\r\n        return this.height * 3;\r\n    }\r\n};\r\n\r\nfunction makeButton(x, y, layer,  image, mainClass='', subClass='', margin=1, r=2) {\r\n    const button = layer.g(graphics.getGraphic(image));\r\n    button.addClass(mainClass).addClass(subClass);\r\n\r\n    const bg = button.rect(margin, margin, 32 - 2 * margin, 32 - 2 * margin, r, r).prependTo(button);\r\n    bg.attr({fill: 'gray'}).addClass('bg');\r\n\r\n    button.transform('T' + x + ',' + y);\r\n\r\n    return button;\r\n}\r\n","\r\nimport program from 'program';\r\nimport codeCell from 'codeCell';\r\nimport tmath from 'tmath';\r\nimport core from 'core';\r\n\r\nexport class Interpreter {\r\n    constructor() {\r\n        this.tape = new core.Tape();\r\n        this.program = null;\r\n\r\n        this.accept = false;\r\n        this.running = false;\r\n\r\n        this.position = new tmath.Vec2(0, 0);\r\n        this.facing = program.directions.UP;\r\n\r\n        this.cycles = 0;\r\n    }\r\n\r\n    setProgram(program) {\r\n        this.program = program;\r\n    }\r\n\r\n    setTape(tape) {\r\n        this.tape = tape;\r\n    }\r\n\r\n    start() {\r\n        this.accept = false;\r\n        this.running = true;\r\n        this.cycles = 0;\r\n\r\n        // Go to the start\r\n        for (let x of _.range(this.program.cols)) {\r\n            for (let y of _.range(this.program.rows)) {\r\n                if (this.program.getCell(x, y).type == 'Start') {\r\n                    this.position.x = x;\r\n                    this.position.y = y;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Face +y;\r\n        this.facing = program.directions.UP;\r\n    }\r\n\r\n    convertDirectionGlobalToCell(d, cell) {\r\n        return cell.orientation.apply(d);\r\n    }\r\n\r\n    convertDirectionCellToGlobal(d, cell) {\r\n        return cell.orientation.invert().apply(d);\r\n    }\r\n\r\n    // Returns tuple [pop tape head or not (bool), symbol to push (maybe null), new facing direction]\r\n    evalCell(cell, tapeHead) {\r\n\r\n        let cellFunc = codeCell.codeCells[cell.type];\r\n\r\n        let result = null;\r\n\r\n        if (cellFunc) {\r\n            if (cell.type == 'CrossConveyor') {\r\n                // Special case. Convert this.facing into cell coordinates for CrossConveyor's function:\r\n                let cellFacing = this.convertDirectionGlobalToCell(this.facing, cell);\r\n                result = cellFunc(tapeHead, cellFacing);\r\n            } else {\r\n                // No knowledge of current facing needed\r\n                result = cellFunc(tapeHead);\r\n            }\r\n\r\n            // Convert cell's returned direction into global direction\r\n            result[2] = this.convertDirectionCellToGlobal(result[2], cell);\r\n            return result;\r\n        }\r\n\r\n        return [false, null, program.directions.UP];\r\n    }\r\n\r\n    step() {\r\n\r\n        if (!this.running) return;\r\n\r\n        // Get state\r\n        let cell = this.program.getCell(this.position.x, this.position.y);\r\n        let head = this.tape.head();\r\n\r\n        // Check if done\r\n        if (cell == null || cell.type == 'Empty' || (cell.type == 'Start' && this.cycles > 0)) {\r\n            this.running = false;\r\n            this.accept = false;\r\n        } else if (cell.type == 'End') {\r\n            this.running = false;\r\n            this.accept = true;\r\n        } else {\r\n\r\n            // Evaluate cell\r\n            let result = this.evalCell(cell, head);\r\n\r\n            // Perform result\r\n            if (result[0]) {\r\n                this.tape.pop();\r\n            }\r\n\r\n            if (result[1] != null) {\r\n                this.tape.append(result[1]);\r\n            }\r\n\r\n            this.facing = result[2];\r\n\r\n            // Move 'facing' direction:\r\n            this.position = this.position.add(this.facing);\r\n            this.cycles += 1;\r\n        }\r\n    }\r\n\r\n    run(n) {\r\n        var i = 0;\r\n        this.start();\r\n        while (this.running && i < n) {\r\n            this.step();\r\n            i += 1;\r\n        }\r\n        var halted = (i < n);\r\n        return halted;\r\n    }\r\n};\r\n\r\nexport default {\r\n    Interpreter\r\n};\r\n","\r\nconst MARGIN = 10, // Space between elements\r\n      PROGRAM_WIDTH = 56 * 9, // program view width, not to exceed\r\n      PROGRAM_HEIGHT = PROGRAM_WIDTH,\r\n      CONTROL_X = MARGIN + PROGRAM_WIDTH + MARGIN;\r\n\r\nexport default {\r\n    MARGIN,\r\n    PROGRAM_WIDTH,\r\n    PROGRAM_HEIGHT,\r\n    CONTROL_X\r\n};\r\n","/*global radio */\r\n\r\n\r\nimport {BaseControl,\r\n        Palette,\r\n        TileControl,\r\n        SizeControl} from 'gui';\r\n\r\nimport layout from 'layout';\r\n\r\nimport {Editor} from 'editor';\r\n\r\nimport {ProgramView, TapeView, colorForSymbol} from 'view';\r\n\r\nimport {Tape} from 'core';\r\n\r\nimport {Interpreter} from 'interpreter';\r\n\r\nclass LevelDisplay extends BaseControl {\r\n    constructor(paper, x, y, width, height, level) {\r\n        super(paper, x, y);\r\n        this.width = width;\r\n        this.height = height;\r\n        this.level = level;\r\n        this.programView = null;\r\n\r\n        this._createControls();\r\n    }\r\n\r\n    _createControls() {\r\n\r\n        this.programView = new ProgramView(\r\n            this._layer,\r\n            layout.MARGIN, layout.MARGIN,\r\n            this.level.program,\r\n            layout.PROGRAM_WIDTH,\r\n            layout.PROGRAM_HEIGHT\r\n        );\r\n    }\r\n}\r\n\r\nexport class LevelEditor extends LevelDisplay {\r\n    constructor(paper, x, y, width, height, level) {\r\n        super(paper, x, y, width, height, level);\r\n\r\n        this.palette = null;\r\n        this.editor = null;\r\n\r\n        this._createControls();\r\n    }\r\n\r\n    _createControls() {\r\n        super._createControls();\r\n\r\n        const CONTROL_WIDTH = this.width - layout.CONTROL_X;\r\n\r\n        this.palette = new Palette(\r\n            this._layer,\r\n            layout.CONTROL_X + CONTROL_WIDTH / 8,\r\n            this.height / 2,\r\n            CONTROL_WIDTH * 3 / 4,\r\n            4\r\n        );\r\n\r\n        this.tileControl = new TileControl(\r\n            this._layer,\r\n            layout.CONTROL_X + 40, // x\r\n            layout.MARGIN, // y\r\n            CONTROL_WIDTH / 2 - layout.MARGIN / 2, // width\r\n            0    // height\r\n        );\r\n\r\n        this.sizeControls = new SizeControl(\r\n            this._layer,\r\n            layout.CONTROL_X,\r\n            this.height - 68 - layout.MARGIN,\r\n            68\r\n        );\r\n\r\n        this.sizeControls.x = layout.CONTROL_X + CONTROL_WIDTH / 2 - this.sizeControls.width / 2;\r\n\r\n        this.editor = new Editor(this._layer, this.programView, this.tileControl);\r\n\r\n        this.programView.drawProgram();\r\n\r\n        this.editor.enable();\r\n    }\r\n\r\n    onVisible() {\r\n        super.onVisible();\r\n\r\n        radio('size-up-clicked').subscribe([this._onSizeUpClicked, this]);\r\n        radio('size-down-clicked').subscribe([this._onSizeDownClicked, this]);\r\n    }\r\n\r\n    onHidden() {\r\n        super.onHidden();\r\n\r\n        radio('size-up-clicked').unsubscribe(this._onSizeUpClicked);\r\n        radio('size-down-clicked').unsubscribe(this._onSizeDownClicked);\r\n    }\r\n\r\n    _onSizeUpClicked() {\r\n        this.level.program.expand();\r\n        radio('editor:whole-program-changed').broadcast({program: this.level.program, sender: this});\r\n    }\r\n\r\n    _onSizeDownClicked() {\r\n        this.level.program.contract();\r\n        radio('editor:whole-program-changed').broadcast({program: this.level.program, sender: this});\r\n    }\r\n};\r\n\r\nclass TestVectorProgression {\r\n    constructor(testCases) {\r\n        this.testCases = testCases;\r\n        this.index = 0;\r\n    }\r\n\r\n    skip() {\r\n        this.index++;\r\n    }\r\n\r\n    get current() {\r\n        if (this.index < this.testCases.length) {\r\n            return this.testCases[this.index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class LevelRunner extends LevelDisplay {\r\n    constructor(paper, x, y, width, height, level) {\r\n        super(paper, x, y, width, height, level);\r\n\r\n        this.tapeView = null;\r\n        this.playControls = null;\r\n\r\n        this.progression = new TestVectorProgression(this.level.testCases);\r\n        this.currentTest = null;\r\n\r\n        // Time between program iterations\r\n        this.stepTime = 500;\r\n\r\n        this._createControls();\r\n    }\r\n\r\n    _createControls() {\r\n        super._createControls();\r\n\r\n        const CONTROL_WIDTH = this.width - layout.CONTROL_X;\r\n\r\n        this.tapeView = new TapeView(\r\n            this._layer,\r\n            layout.CONTROL_X,\r\n            layout.MARGIN,\r\n            CONTROL_WIDTH - 10,\r\n            (CONTROL_WIDTH - 10) / 10,\r\n            new Tape(),\r\n            Math.floor((this.height / 2 - layout.MARGIN) / ((CONTROL_WIDTH - 10) / 10))\r\n        );\r\n\r\n        this.tapeView.drawTape();\r\n        this.programView.drawProgram();\r\n    }\r\n\r\n    onVisible() {\r\n        super.onVisible();\r\n\r\n        radio('play-clicked').subscribe([this._onPlayClicked, this]);\r\n        radio('pause-clicked').subscribe([this._onPauseClicked, this]);\r\n        radio('stop-clicked').subscribe([this._onStopClicked, this]);\r\n    }\r\n\r\n    onHidden() {\r\n        super.onHidden();\r\n\r\n        radio('play-clicked').unsubscribe(this._onPlayClicked);\r\n        radio('pause-clicked').unsubscribe(this._onPauseClicked);\r\n        radio('stop-clicked').unsubscribe(this._onStopClicked);\r\n    }\r\n\r\n    _onPlayClicked() {\r\n        this.start();\r\n    }\r\n\r\n    _onPauseClicked() {\r\n        this.pause(true);\r\n    }\r\n\r\n    _onStopClicked() {\r\n        this.stop();\r\n\r\n        radio('runner:stop').broadcast({level: this.level, sender: this});\r\n    }\r\n\r\n    drawToken(mat, animate, callback) {\r\n        if (!this.token) {\r\n            this.token = this._layer.circle(0, 0, 10);\r\n        }\r\n\r\n        this._layer.append(this.token);\r\n\r\n        // make sure token is on top\r\n        let head = this.tapeView.tape.head(), fill;\r\n        if (head && head.symbol != 'empty') {\r\n            fill = colorForSymbol(head);\r\n        } else {\r\n            fill = '#E0E';\r\n        }\r\n\r\n        this.token.animate({ fill: fill }, this.stepTime / 2);\r\n        if (!animate) {\r\n            this.token.transform(mat);\r\n        } else {\r\n            this.token.animate({ transform: mat }, this.stepTime, mina.linear, () => {\r\n                //field.drawTape();\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.isRunning = true;\r\n        this.isPaused = false;\r\n        this.interpreter = new Interpreter();\r\n\r\n        this.currentTest = this.progression.current;\r\n\r\n        if (!this.currentTest)\r\n            return;\r\n\r\n        const currentTape = Tape.clone(this.currentTest.input);\r\n\r\n        this.tapeView.setTape(currentTape);\r\n\r\n        this.tapeView.drawTape();\r\n        this.interpreter.setProgram(this.level.program);\r\n        this.interpreter.setTape(currentTape);\r\n        this.interpreter.start();\r\n        this.update();\r\n    }\r\n\r\n    stop() {\r\n        this.isRunning = false;\r\n        this.isPaused = false;\r\n        this.token && this.token.remove();\r\n    }\r\n\r\n    pause(shouldPause) {\r\n        this.isPaused = shouldPause;\r\n    }\r\n\r\n    // Governor for state when game is running\r\n    // Responsibilities are:\r\n    // Determine if test case has been passed or failed\r\n    // Call run\r\n    update() {\r\n        const test = this.currentTest, int = this.interpreter;\r\n\r\n        if (this.isRunning) {\r\n            if (!int.running) {\r\n                // Interpreter has stopped\r\n                const finishedProperly = int.accept == test.accept,\r\n\r\n                      correctOuput = test.output.symbols.length > 0 ?\r\n                          Tape.isEqual(int.tape, test.output) : // compare if output not empty\r\n                          true;\r\n\r\n                // otherwise ignore final tape\r\n                console.log('Test finished.');\r\n                console.log(finishedProperly && correctOuput ? 'Passed' : 'Failed');\r\n\r\n                if (finishedProperly && correctOuput) {\r\n\r\n                    this.progression.skip();\r\n\r\n                    let nextTest = this.progression.current;\r\n\r\n                    // If there is another test to run, start it\r\n                    if (nextTest !== null) {\r\n                        window.requestAnimationFrame(() => this.start());\r\n                    }\r\n                }\r\n\r\n                this.isRunning = false;\r\n            } else {\r\n                this._step();\r\n            }\r\n        }\r\n    }\r\n\r\n    run() {\r\n        // If we aren't running, set everything up and start the loop\r\n        if (this.isRunning) {\r\n            // We're running. See if the interpreter has stopped\r\n            if (this.interpreter.running) {\r\n                this._step();\r\n            } else {\r\n                console.log('Program stopped.');\r\n                console.log(`Accepted: ${ this.interpreter.accept }`);\r\n                this.isRunning = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Calls interpreter's step and manages animation\r\n    _step() {\r\n\r\n        if (!this.isPaused) {\r\n\r\n            let oldPos = this.interpreter.position,\r\n\r\n                corner = this.exchange(\r\n                    this.programView.gridView.getGlobalCellMatrix(oldPos.x, oldPos.y, false)\r\n                );\r\n\r\n            this.drawToken(corner);\r\n            this.interpreter.step();\r\n\r\n            let curPos = this.interpreter.position,\r\n\r\n                curCorner = this.exchange(\r\n                    this.programView.gridView.getGlobalCellMatrix(curPos.x, curPos.y, false)\r\n                );\r\n\r\n            this.drawToken(curCorner, true, this.update.bind(this));\r\n\r\n        } else {\r\n            requestAnimationFrame(this.update.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     Convert one coordinate system to another.\r\n     Converts from system with global matrix g to system with global matrix l\r\n\r\n     */\r\n    exchange(g) {\r\n        return this._layer.transform().globalMatrix.invert().add(g);\r\n    }\r\n};\r\n\r\nexport class Level {\r\n    constructor(title, program, testCases) {\r\n        this.title = title;\r\n        this.program = program;\r\n        this.testCases = testCases;\r\n    }\r\n};\r\n","/**\r\n Utilities for loading and saving a program and set of tapes in JSON format\r\n\r\n The basic format is like this:\r\n {\r\n\ttitle: title-string,\r\n\tdesc: desc-string,\r\n\ttestCases: [test-case-description1, ..., test-case-description2],\r\n \tprogram: { ... program-description ... },\r\n }\r\n\r\n tape-description:\r\n A string of the characters R,B,G,Y in any combination or order\r\n\r\n test-case-description:\r\n A test vector for the user's program. Specified using a string with this format:\r\n [a|r]:tape-description:tape-description[:cycle-limit]\r\n   1           2                3              4\r\n 1: Accept or reject\r\n 2: Input tape (can be empty)\r\n 3: Output tape (can be empty)\r\n 4: Max iterations as number (optional)\r\n\r\n program-description:\r\n {\r\n \tcols: Number,\r\n \trows: Number,\r\n\tcells: [ cell-description1, cell-description2 ],\r\n \tstart: {\r\n \t\tx: Number,\r\n\t\ty: Number,\r\n \t\torientation: orientation-description\r\n\t},\r\n\tend: {\r\n\t\tx: Number,\r\n\t\ty: Number,\r\n \t\torientation: orientation-description\r\n\t}\r\n }\r\n\r\n cell-description:\r\n {\r\n\ttype: type-description,\r\n \tx: Number,\r\n\ty: Number,\r\n \torientation: orientation-description\r\n }\r\n\r\n orientation-description:\r\n One of the strings ID, ROT1, ROT2, ROT3, MIR, MROT1, MROT2, MROT3\r\n\r\n type-description:\r\n String specifying the type of the cell. Currently these are:\r\n Conveyor\r\n CrossConveyor\r\n BranchBR\r\n BranchGY\r\n WriteB\r\n WriteR\r\n WriteG\r\n WriteY\r\n\r\n*/\r\n\r\nimport core from 'core';\r\nimport codeCell from 'codeCell';\r\nimport tmath from 'tmath';\r\nimport program from 'program';\r\n\r\nfunction isTape(t) {\r\n    // Ensure tapeDesc only contains B,R,G,Y\r\n    const invalidChars = t.match(/[^RGBY]/);\r\n    if (invalidChars != null)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nfunction isOrientation(o) {\r\n    const index = ['ID', 'ROT1', 'ROT2', 'ROT3', 'MIR', 'MROT1', 'MROT2', 'MROT3'].indexOf(o);\r\n    if (index == -1)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nfunction isCellType(t) {\r\n    const validTypes = Object.keys(codeCell.codeCells);\r\n    const index = validTypes.indexOf(t);\r\n    if (index == -1) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isCoordinate(c) {\r\n    return !isNaN(c);\r\n}\r\n\r\nfunction hasAll(ob, required) {\r\n    const keys = Object.keys(ob);\r\n    return required.every(_.partial(_.contains, keys, _));\r\n}\r\n\r\nfunction isCellDesc(cellDesc) {\r\n\r\n    if (!hasAll(cellDesc, ['type', 'x', 'y', 'orientation'])) {\r\n        return false;\r\n    }\r\n\r\n    return allTrue([\r\n        isCellType(cellDesc.type),\r\n        isOrientation(cellDesc.orientation),\r\n        isCoordinate(cellDesc.x),\r\n        isCoordinate(cellDesc.y)\r\n    ]);\r\n}\r\n\r\nfunction isEndpoint(e) {\r\n    if (!hasAll(e, ['orientation', 'x', 'y'])) {\r\n        return false;\r\n    }\r\n\r\n    return allTrue([\r\n        isOrientation(e.orientation),\r\n        isCoordinate(e.x),\r\n        isCoordinate(e.y)\r\n    ]);\r\n}\r\n\r\nfunction isWithinBounds(MAX_X, MAX_Y) {\r\n    return function(cell) {\r\n        return (cell.x >= 0 && cell.x <= MAX_X && cell.y >= 0 && cell.y <= MAX_Y);\r\n    };\r\n}\r\n\r\nfunction allTrue(l) {\r\n    return l.every(function(p) {\r\n        return Boolean(p);\r\n    });\r\n}\r\n\r\nfunction isProgram(p) {\r\n    if (!hasAll(p, ['start', 'end', 'cols', 'rows', 'cells'])) {\r\n        return false;\r\n    }\r\n\r\n    const basic = allTrue([\r\n        isCoordinate(p.cols),\r\n        isCoordinate(p.rows),\r\n        p.cells.every(isCellDesc),\r\n        isEndpoint(p.start),\r\n        isEndpoint(p.end)\r\n    ]);\r\n\r\n    const bounds = isWithinBounds(p.cols - 1, p.rows - 1);\r\n\r\n    return basic && p.cells.every(bounds) && bounds(p.start) && bounds(p.end);\r\n}\r\n\r\nfunction isValid(level) {\r\n    if (!hasAll(level, ['title', 'testCases', 'program'])) {\r\n        return false;\r\n    }\r\n\r\n    return allTrue([\r\n        level.testCases.every(isTestVector),\r\n        isProgram(level.program)\r\n    ]);\r\n}\r\n\r\nfunction orientationToJson(o) {\r\n    const mat = tmath.Mat2x2;\r\n\r\n    if (_.isEqual(o, mat.kID))\r\n        return 'ID';\r\n    else if (_.isEqual(o, mat.kROT1))\r\n        return 'ROT1';\r\n    else if (_.isEqual(o, mat.kROT2))\r\n        return 'ROT2';\r\n    else if (_.isEqual(o, mat.kROT3))\r\n        return 'ROT3';\r\n    else if (_.isEqual(o, mat.kMIR))\r\n        return 'MIR';\r\n    else if (_.isEqual(o, mat.kMROT1))\r\n        return 'MROT1';\r\n    else if (_.isEqual(o, mat.kMROT2))\r\n        return 'MROT2';\r\n    else if (_.isEqual(o, mat.kMROT3))\r\n        return 'MROT3';\r\n    else\r\n        return 'INVALID';\r\n}\r\n\r\nfunction jsonToOrientation(json) {\r\n    const mat = tmath.Mat2x2;\r\n\r\n    switch (json) {\r\n        case 'ID':\r\n            return mat.kID;\r\n        case 'ROT1':\r\n            return mat.kROT1;\r\n        case 'ROT2':\r\n            return mat.kROT2;\r\n        case 'ROT3':\r\n            return mat.kROT3;\r\n\r\n        case 'MIR':\r\n            return mat.kMIR;\r\n        case 'MROT1':\r\n            return mat.kROT1;\r\n        case 'MROT2':\r\n            return mat.kROT2;\r\n        case 'MROT3':\r\n            return mat.kROT3;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nfunction programToJson(p) {\r\n    const json = {\r\n        cols: p.cols,\r\n        rows: p.rows,\r\n        cells: [],\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    p.cells.forEach(function(column, x) {\r\n        column.forEach(function(cell, y) {\r\n            if (cell.type != 'Empty') {\r\n                const ob = {x:x, y:y, orientation: orientationToJson(cell.orientation)};\r\n                if (cell.type == 'Start')\r\n                    json.start = ob;\r\n                else if (cell.type == 'End')\r\n                    json.end = ob;\r\n                else {\r\n                    ob.type = cell.type;\r\n                    json.cells.push(ob);\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return json;\r\n\r\n}\r\n\r\nfunction jsonToProgram(json) {\r\n    const p = new program.Program(parseInt(json.cols), parseInt(json.rows));\r\n\r\n    json.cells.forEach(function(cell) {\r\n        p.setCell(cell.x, cell.y, cell.type, jsonToOrientation(cell.orientation));\r\n    });\r\n\r\n    p.setStart(\r\n        json.start.x,\r\n        json.start.y,\r\n        jsonToOrientation(json.end.orientation)\r\n    );\r\n\r\n    p.setEnd(\r\n        json.end.x,\r\n        json.end.y,\r\n        jsonToOrientation(json.end.orientation)\r\n    );\r\n\r\n    return p;\r\n\r\n}\r\n\r\nfunction tapeToJson(t) {\r\n    return t.symbols.reduce(\r\n        function(prev, cur) {\r\n            let end = '';\r\n            if (cur == core.RED)\r\n                end = 'R';\r\n            if (cur == core.BLUE)\r\n                end = 'B';\r\n            if (cur == core.GREEN)\r\n                end = 'G';\r\n            if (cur == core.YELLOW)\r\n                end = 'Y';\r\n            return prev + end;\r\n        },\r\n\r\n        ''\r\n    );\r\n\r\n}\r\n\r\nfunction jsonToTape(json) {\r\n    const t = new core.Tape();\r\n\r\n    Array.prototype.forEach.call(json, function(letter) {\r\n        t.append(core.symbols[letter]);\r\n    });\r\n\r\n    return t;\r\n}\r\n\r\n/**\r\n Validate test vector string\r\n */\r\nfunction isTestVector(json) {\r\n    const parts = json.split(':');\r\n\r\n    if (parts.length < 3) {\r\n        console.log('ERROR: test vector string does not contain all required parts');\r\n        return false;\r\n    }\r\n\r\n    if (parts.length == 3) {\r\n        parts[3] = 0; // fill in optional field with default value\r\n    }\r\n\r\n    return allTrue([\r\n        parts[0].match(/^[ar]$/),\r\n        isTape(parts[1]),\r\n        isTape(parts[2]),\r\n        !isNaN(parseInt(parts[3]))\r\n    ]);\r\n}\r\n\r\n/**\r\n Convert test vector object to string\r\n */\r\nfunction testVectorToJson(ob) {\r\n    return [\r\n        ob.accept ? 'a' : 'r',\r\n        tapeToJson(ob.input),\r\n        tapeToJson(ob.output),\r\n        ob.limit\r\n    ].join(':');\r\n}\r\n\r\n/**\r\n Parse test vector string to object\r\n */\r\nfunction jsonToTestVector(json) {\r\n    const parts = json.split(':'),\r\n        accept = parts[0] == 'a' ? true : false,\r\n        input = parts[1],\r\n        output = parts[2],\r\n        limit = parts.length > 3 ? parseInt(parts[3]) : 0;\r\n\r\n    return {\r\n        accept: accept,\r\n        input: jsonToTape(input),\r\n        output: jsonToTape(output),\r\n        limit: isNaN(limit) ? 0 : limit\r\n    };\r\n}\r\n\r\nfunction levelToJson(title, testCases, prog) {\r\n    const json = {\r\n        title: title,\r\n        testCases: (_.isArray(testCases) ? testCases : [testCases]).map(testVectorToJson),\r\n        program: programToJson(prog)\r\n    };\r\n\r\n    return json;\r\n}\r\n\r\nfunction jsonToLevel(json) {\r\n    const level = {\r\n        title: json.title,\r\n        testCases: json.testCases.map(jsonToTestVector),\r\n        program: jsonToProgram(json.program)\r\n    };\r\n\r\n    return level;\r\n}\r\n\r\nfunction fromJson(jsonString) {\r\n    try {\r\n        const dejsoned = JSON.parse(jsonString);\r\n\r\n        if (!isValid(dejsoned))\r\n            return null;\r\n\r\n        return jsonToLevel(dejsoned);\r\n\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n\r\n\r\n};\r\n\r\nfunction toJson(title, tapes, prog) {\r\n    return JSON.stringify(levelToJson(title, tapes, prog));\r\n};\r\n\r\nexport {\r\n    isTape,\r\n    isOrientation,\r\n    isCellType,\r\n    isCoordinate,\r\n    hasAll,\r\n    isCellDesc,\r\n    isEndpoint,\r\n    isWithinBounds,\r\n    allTrue,\r\n    isProgram,\r\n    isValid,\r\n    orientationToJson,\r\n    jsonToOrientation,\r\n    programToJson,\r\n    jsonToProgram,\r\n    tapeToJson,\r\n    jsonToTape,\r\n    isTestVector,\r\n    testVectorToJson,\r\n    jsonToTestVector,\r\n    levelToJson,\r\n    jsonToLevel,\r\n    fromJson,\r\n    toJson\r\n};\r\n\r\nexport default {\r\n    fromJson,\r\n    toJson,\r\n    programToJson,\r\n    jsonToProgram\r\n};\r\n","/*global Snap, mina */\r\n\r\n/**\r\n * Modal\r\n * Manages content that can be hidden or displayed at will\r\n * @param {Snap.Element} paper Element to add modal and content as child\r\n * @param {Snap.Element} content Child content to show\r\n * @param {number} fadeTime Time in milliseconds to take fading in and out\r\n */\r\nexport class Modal {\r\n    constructor(paper, content, fadeTime=300, visible=false) {\r\n        this.paper = paper;\r\n        this._layer = this.paper.g();\r\n        this.content = content;\r\n        this._layer.add(content);\r\n        this.fadeTime = fadeTime;\r\n\r\n        // make content invisible at start\r\n        if (!visible)\r\n            this._layer.attr({opacity: 0});\r\n    }\r\n\r\n    show() {\r\n        let p = new Promise((resolve, reject) => {\r\n            if (this._layer.attr().opacity == 1)\r\n                resolve();\r\n            else if (this.fadeTime == 0) {\r\n                resolve();\r\n                this._layer.attr({opacity: 1});\r\n            } else {\r\n                this._layer.animate(\r\n                    {opacity: 1},\r\n                    this.fadeTime,\r\n                    mina.linear,\r\n                    () => resolve()\r\n                );\r\n            }\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    hide() {\r\n        let p = new Promise((resolve, reject) => {\r\n            if (this._layer.attr().opacity == 0)\r\n                resolve();\r\n            else if (this.fadeTime == 0) {\r\n                resolve();\r\n                this._layer.attr({opacity: 0});\r\n            } else {\r\n                this._layer.animate(\r\n                    {opacity: 0},\r\n                    this.fadeTime,\r\n                    mina.linear,\r\n                    () => resolve()\r\n                );\r\n            }\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    remove() {\r\n        this._layer.remove();\r\n    }\r\n}\r\n","\r\nexport class Picker {\r\n\r\n    constructor(root) {\r\n        let args = {\r\n            // Root element for picker\r\n            el: null,\r\n\r\n            // Selector for children\r\n            children: '*',\r\n\r\n            // Class to add to picked children\r\n            class: 'picker-selected'\r\n        };\r\n\r\n        if (_.isUndefined(root))\r\n            console.log('Must pass argument to Picker constructor');\r\n\r\n        if (_.isObject(root))\r\n            args = _.defaults(_.clone(root), args);\r\n        else\r\n            args.el = root;\r\n\r\n        if (_.isString(args.el)) {\r\n            args.el = document.querySelector(args.el);\r\n        } else if (!_.isElement(args.el)) {\r\n            console.log('Must pass string or element to picker');\r\n        }\r\n\r\n        // copy properties to this\r\n        _.extend(this, args);\r\n        this._assignHandlers();\r\n    }\r\n\r\n    _assignHandlers() {\r\n        var children = this.el.querySelectorAll(this.children);\r\n\r\n        for (var child of children) {\r\n            child.addEventListener('click', this._clickHandler.bind(this));\r\n        }\r\n    }\r\n\r\n    _clickHandler(mouseEvt) {\r\n        this.clear();\r\n\r\n        let elem = mouseEvt.currentTarget;\r\n        elem.classList.add(this.class);\r\n    }\r\n\r\n    clear() {\r\n        for (let child of this.el.querySelectorAll(this.children)) {\r\n            child.classList.remove(this.class);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @class LockedPicker\r\n *\r\n * Applies classes to elements depending on rules\r\n *\r\n * Rules are specified as an object, where the key is a selector for a child\r\n * which, when clicked, applies the ruleset to the other children\r\n *\r\n * For example:\r\n * {\r\n *   \".play\": {\r\n *     enable: [\".pause\", \".stop\"],\r\n *     disable: [\".play\"]\r\n *   },\r\n *   \".pause\": {\r\n *     enable: [\".play\", \".stop\"],\r\n *     disable: [\".pause\"]\r\n *   }\r\n * }\r\n *\r\n * @param {Object} args Argument object\r\n */\r\nexport class LockedPicker extends Picker {\r\n    constructor(args) {\r\n        super(args);\r\n\r\n        this.enableClass = args.enableClass || 'enable';\r\n        this.disableClass = args.disableClass || 'disable';\r\n        this.rules = args.rules || {};\r\n    };\r\n\r\n    _clickHandler(evt) {\r\n        // try to identify which selector matches the clicked element\r\n        let sels = Object.keys(this.rules),\r\n\r\n            target = evt.currentTarget,\r\n\r\n            targetSel = null;\r\n\r\n        // Check if target is disabled, bail if it is\r\n        if (target.classList.contains(this.disableClass))\r\n            return;\r\n\r\n        for (let sel of sels) {\r\n            let candidates = this.el.querySelectorAll(sel);\r\n\r\n            if (Array.prototype.some.call(candidates, (el) => el === target)) {\r\n                targetSel = sel;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (targetSel) {\r\n            this.clear();\r\n            this.applyRule(this.rules[targetSel]);\r\n        }\r\n    }\r\n\r\n    applyRule(rule) {\r\n        for (let toEnable of rule.enable) {\r\n            Array.prototype.forEach.call(\r\n                this.el.querySelectorAll(toEnable),\r\n                (el) => el.classList.add(this.enableClass)\r\n            );\r\n        }\r\n\r\n        for (let toDisable of rule.disable) {\r\n            Array.prototype.forEach.call(\r\n                this.el.querySelectorAll(toDisable),\r\n                (el) => el.classList.add(this.disableClass)\r\n            );\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let child of this.el.querySelectorAll(this.children)) {\r\n            child.classList.remove(this.enableClass, this.disableClass);\r\n        }\r\n    }\r\n\r\n};\r\n","\r\nimport core from 'core';\r\nimport tmath from 'tmath';\r\n\r\nconst dir = {                     // regardless of how graphics are handled, these mean:\r\n    UP:     new tmath.Vec2(0, 1),     // +y\r\n    DOWN:   new tmath.Vec2(0, -1),    // -y\r\n    LEFT:   new tmath.Vec2(-1, 0),    // -x\r\n    RIGHT:  new tmath.Vec2(1, 0)      // +x\r\n};\r\n\r\nfunction makeCellClass(typeID) {\r\n    return function() {\r\n        this.type = typeID;\r\n        this.orientation = tmath.Mat2x2.ID();\r\n    };\r\n};\r\n\r\nlet cellTypes = {\r\n    Empty: makeCellClass('Empty'),\r\n    Start: makeCellClass('Start'),\r\n    End: makeCellClass('End'),\r\n    Conveyor: makeCellClass('Conveyor'),\r\n    CrossConveyor: makeCellClass('CrossConveyor'),\r\n    BranchBR: makeCellClass('BranchBR'),\r\n    BranchGY: makeCellClass('BranchGY'),\r\n    WriteB: makeCellClass('WriteB'),\r\n    WriteR: makeCellClass('WriteR'),\r\n    WriteG: makeCellClass('WriteG'),\r\n    WriteY: makeCellClass('WriteY')\r\n};\r\n\r\nclass Program {\r\n\r\n    constructor(cols, rows) {\r\n        this.cols = cols;\r\n        this.rows = rows;\r\n        this.cells = [];\r\n        this.changed = new signals.Signal();\r\n\r\n        this.metaInfo = null;\r\n\r\n        for (let x = 0; x < cols; ++x) {\r\n            this.cells.push([]);\r\n            for (let y = 0; y < rows; ++y) {\r\n                this.cells[x].push(new cellTypes.Empty());\r\n            }\r\n        }\r\n    }\r\n\r\n    getCell(x, y) {\r\n        return this.cells[x][y];\r\n    }\r\n\r\n    setCell(x, y, type, orientation) {\r\n        const s = new cellTypes[type]();\r\n\r\n        if (orientation) {\r\n            s.orientation = orientation;\r\n        }\r\n\r\n        this.cells[x][y] = s;\r\n\r\n        this.changed.dispatch({\r\n            event: 'set',\r\n            x: x,\r\n            y: y,\r\n            type: type,\r\n            orientation: orientation\r\n        });\r\n    }\r\n\r\n    setStart(x, y) {\r\n        this.setCell(x, y, 'Start');\r\n    }\r\n\r\n    setEnd(x, y) {\r\n        this.setCell(x, y, 'End');\r\n    }\r\n\r\n    setDefaultStartEnd() {\r\n        var x = Math.floor(this.cols/2);\r\n        this.setStart(x, 0);\r\n        this.setEnd(x, this.rows - 1);\r\n    }\r\n\r\n    expand() {\r\n        // Increase program rows/cols by two, maintaining the contents\r\n        var newRows = this.rows + 2;\r\n        var newCols = this.cols + 2;\r\n\r\n        var newCells = [];\r\n        for (let x = 0; x < newCols; ++x) {\r\n            newCells.push([]);\r\n            for (let y = 0; y < newRows; ++y) {\r\n                newCells[x].push(new cellTypes.Empty());\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.cols; ++x) {\r\n            for (let y = 0; y < this.rows; ++y) {\r\n                var c = this.getCell(x, y);\r\n                if (!(c.type == \"Start\" || c.type == \"End\" || c.type == \"Empty\")) {\r\n                    newCells[x+1][y+1] = c;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.rows = newRows;\r\n        this.cols = newCols;\r\n        this.cells = newCells;\r\n\r\n        this.setDefaultStartEnd();\r\n    }\r\n\r\n    contract() {\r\n        // Decrease program rows/cols by two, maintaining the contents\r\n        var newRows = this.rows - 2;\r\n        var newCols = this.cols - 2;\r\n\r\n        var newCells = [];\r\n        for (let x = 0; x < newCols; ++x) {\r\n            newCells.push([]);\r\n            for (let y = 0; y < newRows; ++y) {\r\n                newCells[x].push(new cellTypes.Empty());\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.cols - 1; ++x) {\r\n            for (let y = 0; y < this.rows - 1; ++y) {\r\n                var c = this.getCell(x, y);\r\n                if (!(c.type == \"Start\" || c.type == \"End\" || c.type == \"Empty\")) {\r\n                    newCells[x-1][y-1] = c;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.rows = newRows;\r\n        this.cols = newCols;\r\n        this.cells = newCells;\r\n\r\n        this.setDefaultStartEnd();\r\n    }\r\n};\r\n\r\nfunction readLegacyProgramString(url) {\r\n\r\n    // pleasingfungus.com/Manufactoria/?[lvlString]&[codeString]&[metaInfo]\r\n\r\n    var s = url.split('?')[1];\r\n\r\n    let i = 0;\r\n\r\n    const attrStrings = s.split('&');\r\n    const attrs = {};\r\n\r\n    for (i = 0; i < attrStrings.length; i++) {\r\n        if (attrStrings[i].startsWith('lvl=')) {\r\n            attrs.lvl = parseInt(attrStrings[i].slice(4));\r\n        }\r\n\r\n        if (attrStrings[i].startsWith('code=')) {\r\n            attrs.codeString = attrStrings[i].slice(5);\r\n        }\r\n\r\n        if (attrStrings[i].startsWith('ctm=')) {\r\n\r\n            // [name];[description];[test case string];[rows/cols count];[??? always 3];[??? 1 or 0 for binary or 'normal']\r\n\r\n            const ctmParts = attrStrings[i].slice(4).split(';');\r\n            attrs.name = ctmParts[0];\r\n            attrs.description = ctmParts[1];\r\n            attrs.testCaseString = ctmParts[2];\r\n            attrs.rows = ctmParts[3];\r\n            attrs.cols = ctmParts[3];\r\n        }\r\n    }\r\n\r\n    if (attrs.lvl < 32) {\r\n        // The level string doesn't specify the program dimensions if it's one of the fixed levels, because it \"knows\" (ugh)\r\n        var fixedSizes = [5, 5, 7, 5, 9, 9, 9, 5, 7, 9, 7, 9, 13, 13, 11, 9, 9, 11, 13, 13, 13, 13, 13, 13, 7, 7, 9, 11, 11, 13, 13];\r\n        attrs.rows = fixedSizes[attrs.lvl - 1];\r\n        attrs.cols = fixedSizes[attrs.lvl - 1];\r\n    }\r\n\r\n    // Now parse the codeString part\r\n\r\n    const typeMap = {c: 'Conveyor', b: 'WriteB', r: 'WriteR', g: 'WriteG', y: 'WriteY', p: 'BranchBR', q: 'BranchGY', i: 'CrossConveyor'};\r\n\r\n    const p = new Program(attrs.cols, attrs.rows);\r\n    const parts = attrs.codeString.split(';');\r\n\r\n    for (let i = 0; i < parts.length; i++) {\r\n\r\n        // [type][column]:[row]f[orientation]\r\n\r\n        const partString = parts[i].trim();\r\n\r\n        if (partString.length == 0) continue;\r\n\r\n        const fInd = _.indexOf(partString, 'f');\r\n        const cInd = _.indexOf(partString, ':');\r\n\r\n        const original = {type: partString[0], x: parseInt(partString.slice(1, cInd)), y: parseInt(partString.slice(cInd + 1, fInd)), orientation: parseInt(partString.slice(fInd + 1))};\r\n\r\n        const cellProps = {};\r\n\r\n        cellProps.type = typeMap[original.type];\r\n        cellProps.x = original.x - Math.round(-0.5 * (p.cols - 9) + 8);\r\n        cellProps.y = original.y - Math.round(-0.5 * (p.cols - 9) + 3); // Lol this coordinate system\r\n        console.log(cellProps);\r\n\r\n        //console.log(cellProps.type, original.orientation);\r\n        if (cellProps.type.startsWith('Branch')) {\r\n            if (original.orientation == 0) cellProps.orientation = tmath.Mat2x2.MROT3();\r\n            if (original.orientation == 1) cellProps.orientation = tmath.Mat2x2.MROT2();\r\n            if (original.orientation == 2) cellProps.orientation = tmath.Mat2x2.MROT1();\r\n            if (original.orientation == 3) cellProps.orientation = tmath.Mat2x2.MIR();\r\n            if (original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT3();\r\n            if (original.orientation == 5) cellProps.orientation = tmath.Mat2x2.ROT2();\r\n            if (original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT1();\r\n            if (original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\r\n        } else if (!(cellProps.type == 'CrossConveyor')) {\r\n            if (original.orientation == 0 || original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT3();\r\n            if (original.orientation == 1 || original.orientation == 5) cellProps.orientation = tmath.Mat2x2.ROT2();\r\n            if (original.orientation == 2 || original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT1();\r\n            if (original.orientation == 3 || original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\r\n        } else {\r\n            // CrossConveyer is weird\r\n            if (original.orientation == 5 || original.orientation == 7) cellProps.orientation = tmath.Mat2x2.ID();\r\n            if (original.orientation == 1 || original.orientation == 6) cellProps.orientation = tmath.Mat2x2.ROT3();\r\n            if (original.orientation == 0 || original.orientation == 2) cellProps.orientation = tmath.Mat2x2.ROT2();\r\n            if (original.orientation == 3 || original.orientation == 4) cellProps.orientation = tmath.Mat2x2.ROT1();\r\n        }\r\n\r\n        p.setCell(cellProps.x, cellProps.y, cellProps.type, cellProps.orientation);\r\n\r\n    }\r\n\r\n    p.setStart(Math.floor(p.cols / 2), 0);\r\n    p.setEnd(Math.floor(p.cols / 2), p.rows - 1);\r\n\r\n    // Need to save this in order to generate a string from this program.\r\n    p.metaInfo = attrs;\r\n\r\n    return p;\r\n};\r\n\r\nfunction generateLegacyProgramString(prog) {\r\n    var lvlString = \"lvl=32\";\r\n    var metaInfo = \"ctm=Program;(Generated);:*;\" + prog.rows + \";3;0\";\r\n\r\n    var codeParts = [];\r\n\r\n    var reverseTypeMap = new Map([\r\n        ['Conveyor', 'c'], ['WriteB', 'b'],   ['WriteR', 'r'],   ['WriteG', 'g'],\r\n        ['WriteY', 'y'],   ['BranchBR', 'p'], ['BranchGY', 'q'], ['CrossConveyor', 'i']\r\n    ]);\r\n\r\n    var x = 0, y = 0;\r\n    while (x < prog.rows) {\r\n        y = 0;\r\n        while (y < prog.rows) {\r\n            var cell = prog.getCell(x, y);\r\n            if (cell.type != 'Empty' && cell.type != 'Start' && cell.type != 'End') {\r\n                var type = reverseTypeMap.get(cell.type);\r\n                var column = x + Math.round(-0.5 * (prog.cols - 9) + 8);\r\n                var row = y + Math.round(-0.5 * (prog.cols - 9) + 3); // Lol\r\n                var orientation;\r\n                if (cell.type.startsWith('Branch')) {\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kMROT3)) orientation = 0;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kMROT2)) orientation = 1;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kMROT1)) orientation = 2;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kMIR)) orientation = 3;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT3)) orientation = 4;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT2)) orientation = 5;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT1)) orientation = 6;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kID)) orientation = 7;\r\n                    // The remainder doesn't work with mirrored pieces yet because dihedral groups blegh.\r\n                } else if (!(cell.type == 'CrossConveyor')) {\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT3)) orientation = 0;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT2)) orientation = 1;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT1)) orientation = 2;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kID)) orientation = 3;\r\n                } else {\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kID)) orientation = 5;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT3)) orientation = 1;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT2)) orientation = 0;\r\n                    if (cell.orientation.equals(tmath.Mat2x2.kROT1)) orientation = 3;\r\n                }\r\n                codeParts.push(type + column + \":\" + row + \"f\" + orientation);\r\n            }\r\n            y += 1;\r\n        }\r\n        x += 1;\r\n    }\r\n\r\n    var codeString = \"code=\" + codeParts.join(';');\r\n    var final = [lvlString, codeString, metaInfo].join('&');\r\n    return \"http://pleasingfungus.com/Manufactoria/?\" + final;\r\n}\r\n\r\nexport default {\r\n    directions: dir,\r\n    cellTypes,\r\n    Program,\r\n    readLegacyProgramString,\r\n    generateLegacyProgramString\r\n};\r\n","\r\n/**\r\n * @class Stage\r\n * Manages a stack of layers\r\n *\r\n * @param {Snap.Element} paper Snap parent element\r\n */\r\n\r\nexport class Stage {\r\n    constructor(paper) {\r\n        this.paper = paper;\r\n\r\n        this.layers = [];\r\n\r\n        this._layer = paper.g().addClass('stage');\r\n    }\r\n\r\n    /**\r\n     * push\r\n     * Place object at front of stage and display its layer\r\n     * Calls onHidden on object at top of old stack, and onVisible on new top of stack\r\n     * @param {Object} layer Object with `_layer` property, which is a Snap.Element\r\n     * @return layer\r\n     */\r\n    push(layer) {\r\n        let layerCount = this.layers.length;\r\n\r\n        if (layerCount > 0) {\r\n            let top = this.layers[layerCount - 1];\r\n\r\n            if (top.onHidden) {\r\n                top.onHidden();\r\n            }\r\n        }\r\n\r\n        this.layers.push(layer);\r\n        this._layer.clear();\r\n        this._layer.add(layer._layer);\r\n\r\n        if (layer.onVisible) {\r\n            layer.onVisible();\r\n        }\r\n\r\n        return layer;\r\n    }\r\n\r\n    /**\r\n     * pop\r\n     * Remove topmost object from stage, removing its `_layer` property and calling `remove`\r\n     * Also calls onHidden on layer being removed, and onVisible on object at top of stack\r\n     * @return The popped object\r\n     */\r\n    pop() {\r\n        const top = this.layers.pop();\r\n\r\n        if (top) {\r\n            if (top.onHidden) {\r\n                top.onHidden();\r\n            }\r\n\r\n            top.remove();\r\n        }\r\n\r\n        this._layer.clear();\r\n\r\n        const layerCount = this.layers.length;\r\n\r\n        if (layerCount > 0) {\r\n            let newTop = this.layers[layerCount - 1];\r\n\r\n            this._layer.add(newTop._layer);\r\n\r\n            if (newTop.onVisible) {\r\n                newTop.onVisible();\r\n            }\r\n        }\r\n\r\n        return top;\r\n\r\n    }\r\n\r\n    /**\r\n     * clear\r\n     * Pops all layers from stack\r\n     */\r\n    clear() {\r\n\r\n        this._layer.clear();\r\n\r\n        while (this.layers.length > 0) {\r\n            let p = this.layers.pop();\r\n            if (p) {\r\n                p.onHidden && p.onHidden();\r\n                p.remove && p.remove();\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n","let tmath = tmath || {};\r\n\r\nexport default tmath;\r\n\r\nvar Vec2 = function(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n};\r\n\r\nVec2.prototype.add = function(v2) {\r\n    return new Vec2(this.x + v2.x, this.y + v2.y);\r\n};\r\n\r\nVec2.prototype.equals = function(v2) {\r\n    return (this.x == v2.x && this.y == v2.y);\r\n};\r\n\r\ntmath.Vec2 = Vec2;\r\n\r\nvar Mat2x2 = function(a,b,c,d) {\r\n    this.a = a;\r\n    this.b = b;\r\n    this.c = c;\r\n    this.d = d;\r\n};\r\n\r\nMat2x2.ID =     function() { return new Mat2x2(1, 0, 0, 1); };      Mat2x2.kID = Mat2x2.ID();\r\nMat2x2.ROT1 =   function() { return new Mat2x2(0, -1, 1, 0); };     Mat2x2.kROT1 = Mat2x2.ROT1();\r\nMat2x2.ROT2 =   function() { return new Mat2x2(-1, 0, 0, -1); };    Mat2x2.kROT2 = Mat2x2.ROT2();\r\nMat2x2.ROT3 =   function() { return new Mat2x2(0, 1, -1, 0); };     Mat2x2.kROT3 = Mat2x2.ROT3();\r\nMat2x2.MIR =    function() { return new Mat2x2(-1, 0, 0, 1); };     Mat2x2.kMIR = Mat2x2.MIR();\r\nMat2x2.MROT1 =  function() { return new Mat2x2(0, 1, 1, 0); };      Mat2x2.kMROT1 = Mat2x2.MROT1();\r\nMat2x2.MROT2 =  function() { return new Mat2x2(1, 0, 0, -1); };     Mat2x2.kMROT2 = Mat2x2.MROT2();\r\nMat2x2.MROT3 =  function() { return new Mat2x2(0, -1, -1, 0); };    Mat2x2.kMROT3 = Mat2x2.MROT3();\r\n\r\nMat2x2.prototype.apply = function(v) {\r\n    return new Vec2(this.a * v.x + this.b * v.y, this.c * v.x + this.d * v.y);\r\n};\r\n\r\nMat2x2.prototype.scale = function(s) {\r\n    return new Mat2x2(s*this.a, s*this.b, s*this.c, s*this.d);\r\n}\r\n\r\nMat2x2.prototype.invert = function() {\r\n    return new Mat2x2(this.d, -this.b, -this.c, this.a).scale((this.a*this.d - this.b*this.c));\r\n};\r\n\r\nMat2x2.prototype.compose = function(m2) {\r\n    return new Mat2x2(this.a * m2.a + this.b* m2.c,\r\n                      this.a * m2.b + this.b * m2.d,\r\n                      this.c * m2.a + this.d * m2.c,\r\n                      this.c * m2.b + this.d * m2.d);\r\n};\r\n\r\nMat2x2.prototype.equals = function(m2) {\r\n    return (this.a == m2.a && this.b == m2.b && this.c == m2.c && this.d == m2.d);\r\n};\r\n\r\ntmath.Mat2x2 = Mat2x2;\r\n\r\nexport function orientationByName(dir, mirror) {\r\n    var m = tmath.Mat2x2,\r\n        regular = {\r\n            \"UP\": m.kID,\r\n            \"RIGHT\": m.kROT1,\r\n            \"DOWN\": m.kROT2,\r\n            \"LEFT\": m.kROT3\r\n        },\r\n        mirrored = {\r\n            \"UP\": m.kMIR,\r\n            \"RIGHT\": m.kMROT1,\r\n            \"DOWN\": m.kMROT2,\r\n            \"LEFT\": m.kMROT3\r\n        };\r\n\r\n    return mirror ? mirrored[dir] : regular[dir];\r\n}\r\n\r\nexport function isMirrored(orientation) {\r\n    var m = tmath.Mat2x2,\r\n        l = [m.kMIR, m.kMROT1, m.kMROT2, m.kMROT3];\r\n\r\n    return l.some(\r\n        (mat) => _.isEqual(mat, orientation)\r\n    );\r\n}\r\n\r\nexport function nameFromOrientation(o) {\r\n    let mirror = isMirrored(o),\r\n\r\n        direction = \"UP\",\r\n\r\n        m = tmath.Mat2x2;\r\n\r\n    if (_.isEqual(o, m.kID) || _.isEqual(o, m.kMIR))\r\n        direction = \"UP\";\r\n    if (_.isEqual(o, m.kROT1) || _.isEqual(o, m.kMROT1))\r\n        direction = \"RIGHT\";\r\n    if (_.isEqual(o, m.kROT2) || _.isEqual(o, m.kMROT2))\r\n        direction = \"DOWN\";\r\n    if (_.isEqual(o, m.kROT3) || _.isEqual(o, m.kMROT3))\r\n        direction = \"LEFT\";\r\n\r\n    return {direction: direction, mirror: mirror};\r\n}\r\n","/*global radio */\r\n\r\nimport core from 'core';\r\nimport graphics from 'graphics';\r\nimport editor from 'editor';\r\nimport codeCell from 'codeCell';\r\nimport tmath from 'tmath';\r\nimport program from 'program';\r\n\r\nexport class TapeView {\r\n    constructor(paper, x, y, width, radius, tape, rows) {\r\n        this.paper = paper;\r\n        this.tapeView = paper.g();\r\n        this.width = width;\r\n        this.rows = rows || 1;\r\n        this.height = radius * this.rows;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this._sw = radius;\r\n        this._MAX_PER_ROW = Math.floor(this.width / this._sw);\r\n        this._MAX = this.rows * this._MAX_PER_ROW;\r\n\r\n        this.setTape(tape);\r\n    }\r\n\r\n    /**\r\n     Performs a clean draw of the tape with no animation\r\n     */\r\n    drawTape() {\r\n        const MAX = this._MAX,\r\n              sw = this._sw;\r\n\r\n        this.tapeView.clear();\r\n\r\n        for (let i = 0; i < this.tape.symbols.length && i < MAX; ++i) {\r\n            let curSym = this.tape.symbols[i];\r\n            this._appendSymbol(i, curSym);\r\n        }\r\n\r\n        for (let r = 1; r < this.rows; ++r) {\r\n            this.tapeView.line(0, r * this._sw, this.width, r * this._sw)\r\n                .addClass('tape-view-divider')\r\n                .attr({stroke: '#fff'});\r\n        }\r\n\r\n        this.tapeView.transform('');\r\n        this.tapeView.transform('t' + this.x + ',' + this.y);\r\n    }\r\n\r\n    _coordinateForIndex(index) {\r\n        let row = Math.floor(index / this._MAX_PER_ROW),\r\n            col = index % this._MAX_PER_ROW;\r\n\r\n        return {\r\n            x: col * this._sw + this._sw / 2,\r\n            y: row * this._sw + this._sw / 2\r\n        };\r\n    }\r\n\r\n    _appendSymbol(index, symbol, offset, color) {\r\n        offset = offset || 0;\r\n\r\n        const sw = this._sw,\r\n              length = this.tapeView.selectAll('circle').length,\r\n              coord = this._coordinateForIndex(index);\r\n\r\n        const circle = this.tapeView.circle(coord.x + offset * sw, coord.y, sw / 2 - 2);\r\n\r\n        if (symbol === core.EMPTY) {\r\n            circle.attr({\r\n                stroke: '#111',\r\n                strokeWidth: 2,\r\n                fill: '#FFF'\r\n            });\r\n        } else {\r\n            if (color) {\r\n                circle.attr({\r\n                    fill: '#FFF'\r\n                });\r\n            } else {\r\n                circle.attr({\r\n                    fill: colorForSymbol(symbol)\r\n                }).addClass(classForSymbol(symbol));\r\n            }\r\n        }\r\n\r\n        return circle;\r\n    }\r\n\r\n    animate(action) {\r\n\r\n        const pop = function(head, callback) {\r\n            head.animate(\r\n                {opacity: 0},\r\n                100,\r\n                mina.linear,\r\n                function() {\r\n                    head.remove();\r\n                    if (callback)\r\n                        callback();\r\n                }\r\n            );\r\n        };\r\n\r\n        const slide = (function() {\r\n            const sw = this._sw,\r\n                  allSymbols = this.tapeView.selectAll('circle'),\r\n                  length = allSymbols.length;\r\n\r\n            // Append symbol if necessary\r\n            if (length < this._MAX && this.tape.symbols.length > length) {\r\n                const c = this._appendSymbol(length, this.tape.symbols[length - 1], 1);\r\n                c.attr({opacity: 0});\r\n            }\r\n\r\n            // Slide left\r\n            this.tapeView.selectAll('circle').animate(\r\n                {\r\n                    cx: '-=' + sw,\r\n                    opacity: 1\r\n                },\r\n                200,\r\n                mina.easeinout\r\n            );\r\n\r\n            // Iterate over all symbols that are the beginning of a row other than the first\r\n            for (let beginIndex = this._MAX_PER_ROW - 1;\r\n                 beginIndex < length;\r\n                 beginIndex += this._MAX_PER_ROW) {\r\n\r\n                let rowFront = allSymbols[beginIndex],\r\n                    coord = this._coordinateForIndex(beginIndex);\r\n\r\n                rowFront.stop(); // cancel sliding animation\r\n\r\n                rowFront.animate(\r\n                    {\r\n                        cx: coord.x,\r\n                        cy: coord.y,\r\n                        opacity: 1\r\n                    },\r\n                    200,\r\n                    mina.linear\r\n                );\r\n            }\r\n\r\n        }).bind(this);\r\n\r\n        if (action == 'pop') {\r\n            // Dissolve first element, then slide left\r\n            const head = this.tapeView.selectAll('circle')[0];\r\n            pop(head, slide);\r\n\r\n        } else if (action == 'append') {\r\n            // Append symbol if it will fit\r\n            const length = this.tapeView.selectAll('circle').length;\r\n            if (length < this._MAX && this.tape.symbols.length > length) {\r\n                const c = this._appendSymbol(length, this.tape.symbols[length], 0);\r\n                c.attr({opacity: 0});\r\n                c.animate(\r\n                    {\r\n                        opacity: 1\r\n                    },\r\n                    50,\r\n                    mina.easeinout\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    setTape(newTape) {\r\n        if (this.tape) {\r\n            this.tape.changed.remove(this.animate);\r\n        }\r\n\r\n        this.tape = newTape;\r\n\r\n        if (newTape) {\r\n            // Register for tape's changed signal\r\n            newTape.changed.add(this.animate, this);\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.setTape(null);\r\n\r\n        this.tapeView.remove();\r\n    }\r\n};\r\n\r\nexport function colorForSymbol(symbol) {\r\n    if (symbol === core.RED) {\r\n        return '#E10';\r\n    } else if (symbol === core.BLUE) {\r\n        return '#01F';\r\n    } else if (symbol === core.GREEN) {\r\n        return '#0F0';\r\n    } else if (symbol === core.YELLOW) {\r\n        return '#FF0';\r\n    } else {\r\n        return '#FA3';\r\n    }\r\n}\r\n\r\nexport function classForSymbol(symbol) {\r\n    if (symbol && symbol.symb && symbol.symbol != 'empty') {\r\n        if (symbol === core.RED) {\r\n            return 'symbol-red';\r\n        } else if (symbol === core.BLUE) {\r\n            return 'symbol-blue';\r\n        } else if (symbol === core.GREEN) {\r\n            return 'symbol-green';\r\n        } else if (symbol === core.YELLOW) {\r\n            return 'symbol-yellow';\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n GridView\r\n\r\n Draws a grid on the canvas\r\n */\r\nexport class GridView {\r\n\r\n    constructor(paper, x, y, width, height, rows, cols) {\r\n        this.paper = paper;\r\n        this.grid = paper.g();\r\n        this.width = width;\r\n        this.height = height;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.cols = cols;\r\n        this.rows = rows;\r\n\r\n        this.grid.click(this.onClick.bind(this));\r\n\r\n        radio('highlighted').subscribe([this.highlight, this]);\r\n        radio('unhighlighted').subscribe([this.clearHighlight, this]);\r\n\r\n    }\r\n\r\n    onClick(evt, x, y) {\r\n        const cell = this.screenPointToCell(evt.clientX, evt.clientY);\r\n\r\n        if (cell.x >= 0 && cell.x < this.cols &&\r\n            cell.y >= 0 && cell.y < this.rows) {\r\n            editor.trigger(editor.events.cellSelected, {cell: cell});\r\n        }\r\n    }\r\n\r\n    highlight(cell) {\r\n\r\n        if (cell && cell.x !== undefined && cell.y !== undefined) {\r\n            this.clearHighlight();\r\n\r\n            let sw = this.width / this.cols,\r\n                sh = this.height / this.rows,\r\n\r\n                highlight = this.grid.rect(cell.x * sw, cell.y * sh, sw, sh).\r\n                    addClass('highlight').attr({fill: 'white'});\r\n        }\r\n    }\r\n\r\n    clearHighlight() {\r\n        this.grid.selectAll('.highlight').forEach((el) => el.remove());\r\n    }\r\n\r\n    remove() {\r\n        this.grid.remove();\r\n        radio('hightlighted').unsubscribe(this.highlight);\r\n        radio('unhightlighted').unsubscribe(this.clearHighlight);\r\n    }\r\n\r\n    drawGrid() {\r\n        this.grid.clear();\r\n\r\n        const r = this.paper.rect(0, 0, this.width, this.height);\r\n        r.attr({fill: '#FFF'});\r\n        r.addClass('grid-bg');\r\n        this.grid.append(r);\r\n\r\n        const sw = this.width / this.cols;\r\n        const sy = this.height / this.rows;\r\n\r\n        for (let x = 0; x <= this.cols; ++x) {\r\n            let l = this.grid.line(x * sw, 0, x * sw, this.height);\r\n            l.addClass('grid-line');\r\n        }\r\n\r\n        for (let y = 0; y <= this.rows; ++y) {\r\n            let l = this.grid.line(0, y * sy, this.width, y * sy);\r\n            l.addClass('grid-line');\r\n        }\r\n\r\n        this.grid.attr({stroke: '#888', strokeWidth: 1});\r\n\r\n        this.grid.transform('');\r\n        this.grid.transform('t' + this.x + ',' + this.y);\r\n    }\r\n\r\n    /**\r\n     GridView.getCellMatrix(col, row, corner) -> Matrix\r\n\r\n     Returns local matrix describing location of cell\r\n\r\n     If corner == true, uses top left corner of cell\r\n\r\n     Otherwise, uses center of cell\r\n\r\n     */\r\n    getCellMatrix(col, row, corner) {\r\n        const mat = Snap.matrix(),\r\n              sw = this.width / this.cols,\r\n              sy = this.height / this.rows;\r\n\r\n        if (!corner) {\r\n            mat.translate(sw / 2, sy / 2);\r\n        }\r\n\r\n        mat.translate(sw * col, sy * row);\r\n\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     GridView.getGlobalCellMatrix(col, row, corner) -> Matrix\r\n\r\n     Returns global matrix describing location of cell\r\n\r\n     If corner == true, uses top left corner of cell\r\n\r\n     Otherwise, uses center of cell\r\n\r\n     */\r\n    getGlobalCellMatrix(col, row, corner) {\r\n\r\n        const transform = this.grid.transform();\r\n        const globalMatrix = transform.globalMatrix.clone();\r\n\r\n        const sw = this.width / this.cols;\r\n        const sy = this.height / this.rows;\r\n\r\n        if (!corner) {\r\n            globalMatrix.translate(sw / 2, sy / 2);\r\n        }\r\n\r\n        globalMatrix.translate(sw * col, sy * row);\r\n\r\n        return globalMatrix;\r\n    }\r\n\r\n    screenPointToCell(x, y) {\r\n        const localPoint = graphics.screenPointToLocal(x, y, this.grid),\r\n              sw = this.width / this.cols,\r\n              sy = this.height / this.rows,\r\n              INDEX_X = Math.floor(localPoint.x / sw),\r\n              INDEX_Y = Math.floor(localPoint.y / sy);\r\n\r\n        console.log('I think you want ' + INDEX_X + ', ' + INDEX_Y);\r\n\r\n        return {x: INDEX_X, y: INDEX_Y};\r\n    }\r\n};\r\n\r\nexport class ProgramView {\r\n\r\n    constructor(paper, x, y,  program, maxWidth, maxHeight) {\r\n        this.paper = paper;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.program = program;\r\n\r\n        this._maxWidth = maxWidth;\r\n        this._maxHeight = maxHeight;\r\n\r\n        this.tileSize = 56;\r\n\r\n        this._layer = paper.g().addClass('program-view');\r\n\r\n        this.cells = this._layer.g().addClass('cells');\r\n\r\n        this.gridView = new GridView(this._layer, 0, 0,\r\n                                     program.cols * this.tileSize,\r\n                                     program.rows * this.tileSize,\r\n                                     program.rows, program.cols);\r\n\r\n        this.width = this.gridView.width;\r\n        this.height = this.gridView.height;\r\n\r\n        this.gridView.drawGrid();\r\n\r\n        this.calculateTransform();\r\n\r\n        const binding = this.program.changed.add(this.updateCell);\r\n        binding.context = this;\r\n    }\r\n\r\n    calculateTransform() {\r\n        let maxw = this._maxHeight,\r\n            maxh = this._maxWidth,\r\n\r\n            SCALE_X = maxw / this.gridView.width,\r\n            SCALE_Y = maxh / this.gridView.height,\r\n\r\n            scale = Math.min(SCALE_X, SCALE_Y);\r\n\r\n        this._layer.transform('T' + this.x + ',' + this.y + 's' + scale + ',0,0');\r\n\r\n    }\r\n\r\n    setProgram(p) {\r\n        if (this.program)\r\n            this.program.changed.remove(this.drawProgram);\r\n\r\n        this.program = p;\r\n\r\n        this.gridView.remove();\r\n\r\n        if (p) {\r\n            this.gridView = new GridView(\r\n                this._layer, this.x, this.y,\r\n                p.cols * this.tileSize,\r\n                p.rows * this.tileSize,\r\n                p.rows, p.cols\r\n            );\r\n\r\n            this.gridView.drawGrid();\r\n            this.cells.clear();\r\n\r\n            this.calculateTransform();\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        // Set program to null, which also removes this.gridView\r\n        this.setProgram(null);\r\n\r\n        // Destroy our layer\r\n        this._layer.remove();\r\n    }\r\n\r\n    updateCell(data) {\r\n        // coordinates of updated cell\r\n        const x = data.x,\r\n              y = data.y;\r\n\r\n        // remove old cells in the region and redraw each\r\n        for (let cx = x - 1; cx <= x + 1; ++cx) {\r\n            for (let cy = y - 1; cy <= y + 1; ++cy) {\r\n                if (cx >= 0 && cx < this.program.cols &&\r\n                    cy >= 0 && cy < this.program.rows) {\r\n\r\n                    this.gridView.grid.selectAll('.' + coordClass(cx, cy))\r\n                        .forEach((el) => el.remove());\r\n\r\n                    this.drawTile(this.program.getCell(cx, cy), cx, cy);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    drawTile(cell, x, y) {\r\n        const c = cell,\r\n              paper = this.paper,\r\n              grid = this.gridView;\r\n\r\n        if (c.type != 'Empty') {\r\n            let container;\r\n            if (c.type == 'Conveyor') {\r\n                container = this.drawConveyor(c, x, y);\r\n            } else if (c.type.startsWith('Write')) {\r\n                container = this.drawWriter(c, x, y);\r\n            } else {\r\n                const image = graphics.getGraphic(c.type);\r\n\r\n                if (image) {\r\n\r\n                    paper.append(image);\r\n\r\n                    const group = paper.g(image);\r\n                    this.cells.append(group);\r\n\r\n                    const corner = grid.getCellMatrix(x, y, true)\r\n                              .toTransformString()\r\n                              .toUpperCase();\r\n\r\n                    const o = c.orientation;\r\n\r\n                    const transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\r\n                    const tstring = toTransformString(transform);\r\n\r\n                    group.transform(\r\n                        tstring + corner\r\n                    );\r\n\r\n                    container = group;\r\n                }\r\n            }\r\n\r\n            if (container) {\r\n                container.selectAll('*').forEach((el) => {\r\n                    el.data('tileInfo', {\r\n                        cell: c,\r\n                        x: x,\r\n                        y: y,\r\n                        program: this.program\r\n                    }).addClass('tile-part');\r\n                });\r\n\r\n                container.addClass(coordClass(x, y));\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    drawProgram() {\r\n        const paper = this.paper,\r\n              grid = this.gridView,\r\n              program = this.program;\r\n\r\n        this.cells.clear();\r\n        this.cells.appendTo(this.gridView.grid);\r\n\r\n        for (let x = 0; x < program.cols; ++x) {\r\n            for (let y = 0; y < program.rows; ++y) {\r\n                let c = program.getCell(x, y);\r\n                this.drawTile(c, x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    drawConveyor(cell, x, y) {\r\n        const neighbors = getNeighbors(this.program, cell, x, y),\r\n\r\n              target = {cell: cell, position: new tmath.Vec2(x, y)},\r\n\r\n              hasLeft = neighbors.left.cell != null ? isPointingTo(neighbors.left, target) : false,\r\n\r\n              hasRight = neighbors.right.cell != null ? isPointingTo(neighbors.right, target) : false,\r\n\r\n              hasDown = neighbors.down.cell != null ? isPointingTo(neighbors.down, target) : false;\r\n\r\n        let image = null,\r\n\r\n            mirror = false;\r\n\r\n        if (!hasLeft && !hasRight) {\r\n\r\n            image = 'Conveyor';\r\n\r\n        } else if (!hasLeft && hasRight ||\r\n                   hasLeft && !hasRight) {\r\n\r\n            image = hasDown ? 'ConveyorTeeTwo' : 'ConveyorElbow';\r\n\r\n            mirror = hasLeft;\r\n\r\n        } else if (!hasDown && hasLeft && hasRight) {\r\n\r\n            image = 'ConveyorTee';\r\n\r\n        } else {\r\n\r\n            image = 'ConveyorEx';\r\n\r\n        }\r\n\r\n        image = graphics.getGraphic(image);\r\n\r\n        if (image) {\r\n\r\n            this.paper.append(image);\r\n\r\n            const group = this.paper.g(image);\r\n            this.cells.append(group);\r\n\r\n            const corner = this.gridView.getCellMatrix(x, y, true)\r\n                      .toTransformString()\r\n                      .toUpperCase();\r\n\r\n            let o = cell.orientation;\r\n\r\n            if (mirror) {\r\n                o = tmath.Mat2x2.kMIR.compose(o);\r\n            }\r\n\r\n            const transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\r\n            const tstring = toTransformString(transform);\r\n\r\n            group.transform(\r\n                tstring + corner\r\n            );\r\n\r\n            return group;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    drawWriter(cell, x, y) {\r\n        const neighbors = getNeighbors(this.program, cell, x, y),\r\n\r\n              target = {cell: cell, position: new tmath.Vec2(x, y)},\r\n\r\n              hasLeft = neighbors.left.cell != null ? isPointingTo(neighbors.left, target) : false,\r\n\r\n              hasRight = neighbors.right.cell != null ? isPointingTo(neighbors.right, target) : false;\r\n\r\n        let image = null,\r\n\r\n            leftConnector = null,\r\n\r\n            rightConnector = null;\r\n\r\n        image = graphics.getGraphic(cell.type);\r\n\r\n        if (image) {\r\n\r\n            this.paper.append(image);\r\n\r\n            const group = this.paper.g(image);\r\n            this.cells.append(group);\r\n\r\n            if (hasRight) {\r\n                rightConnector = graphics.getGraphic('WriterConnector');\r\n                group.append(rightConnector);\r\n            }\r\n\r\n            if (hasLeft) {\r\n                leftConnector = group.g(graphics.getGraphic('WriterConnector'));\r\n                group.append(leftConnector);\r\n                const rot = tmath.Mat2x2.kROT2,\r\n                      m = Snap.matrix(rot.a, rot.b, rot.c, rot.d, 0, 0);\r\n                leftConnector.transform(toTransformString(m));\r\n            }\r\n\r\n            const corner = this.gridView.getCellMatrix(x, y, true)\r\n                      .toTransformString()\r\n                      .toUpperCase();\r\n\r\n            const o = cell.orientation;\r\n\r\n            const transform = Snap.matrix(o.a, o.b, o.c, o.d, 0, 0);\r\n            const tstring = toTransformString(transform);\r\n\r\n            group.transform(\r\n                tstring + corner\r\n            );\r\n\r\n            return group;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n};\r\n\r\nfunction getNeighbors(prog, cell, x, y) {\r\n    const o = cell.orientation,\r\n          position = new tmath.Vec2(x, y),\r\n          down = cellToGlobal(program.directions.DOWN, o).add(position),\r\n          left = cellToGlobal(program.directions.LEFT, o).add(position),\r\n          right = cellToGlobal(program.directions.RIGHT, o).add(position),\r\n          neighbors = {\r\n              down: {cell: null, position: null},\r\n              left: {cell: null, position: null},\r\n              right:{cell: null, position: null}\r\n          };\r\n\r\n    function safeGetCell(prog, pos) {\r\n        try {\r\n            const cell = prog.getCell(pos.x, pos.y);\r\n            if (cell)\r\n                return cell;\r\n            else\r\n                return {type: 'Empty'};\r\n        } catch (e) {\r\n            return {type: 'Empty'};\r\n        }\r\n    }\r\n\r\n    // Now we have vectors that point to our down, left, and right neighbors\r\n\r\n    const downNeighbor = safeGetCell(prog, down);\r\n    if (downNeighbor.type != 'Empty') {\r\n        neighbors.down.cell = downNeighbor;\r\n        neighbors.down.position = down;\r\n    }\r\n\r\n    const leftNeighbor = safeGetCell(prog, left);\r\n    if (leftNeighbor.type != 'Empty') {\r\n        neighbors.left.cell = leftNeighbor;\r\n        neighbors.left.position = left;\r\n    }\r\n\r\n    const rightNeighbor = safeGetCell(prog, right);\r\n    if (rightNeighbor.type != 'Empty') {\r\n        neighbors.right.cell = rightNeighbor;\r\n        neighbors.right.position = right;\r\n    }\r\n\r\n    return neighbors;\r\n}\r\n\r\nfunction isPointingTo(source, target) {\r\n    let direction = cellToGlobal(program.directions.UP, source.cell.orientation),\r\n        pointedTo = source.position.add(direction),\r\n        same = pointedTo.equals(target.position);\r\n\r\n    const isBranch = source.cell.type.indexOf('Branch') != -1;\r\n\r\n    if (!same && (source.cell.type == 'CrossConveyor' ||\r\n                  isBranch)) {\r\n        // Additional test for crossconveyor\r\n        direction = cellToGlobal(program.directions.RIGHT, source.cell.orientation);\r\n        pointedTo = source.position.add(direction);\r\n        same = pointedTo.equals(target.position);\r\n\r\n        if (!same && isBranch) {\r\n            direction = cellToGlobal(program.directions.LEFT, source.cell.orientation);\r\n            pointedTo = source.position.add(direction);\r\n            same = pointedTo.equals(target.position);\r\n        }\r\n    }\r\n\r\n    return same;\r\n\r\n}\r\n\r\nfunction cellToGlobal(d, orientation) {\r\n    return orientation.invert().apply(d);\r\n}\r\n\r\nfunction coordClass(x, y) {\r\n    return 'cell-x' + x + '-y' + y;\r\n}\r\n\r\n/**\r\n Utility function that converts a Snap.Matrix to a Snap transform string\r\n */\r\nexport function toTransformString(matrix) {\r\n    const E = '';\r\n    const s = matrix.split();\r\n    if (!+s.shear.toFixed(9)) {\r\n        s.scalex = +s.scalex.toFixed(4);\r\n        s.scaley = +s.scaley.toFixed(4);\r\n        s.rotate = +s.rotate.toFixed(4);\r\n        return (s.dx || s.dy ? 't' + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\r\n            (s.scalex != 1 || s.scaley != 1 ? 's' + [s.scalex, s.scaley] : E) +\r\n            (s.rotate ? 'r' + [s.scalex * s.scaley < 0 ? 360 - s.rotate.toFixed(4) : +s.rotate.toFixed(4)] : E);\r\n\r\n        // This is the same as what Snap.svg does by default with two major differences (original is in matrix.js)\r\n        //\r\n        // 1. No \",0,0\" is appended to the rotate and scale strings, so they will now default to the center of the element\r\n        //\r\n        // 2. The complicated one: If we have been mirrored in either x or y but not both (i.e., either scalex or scaley is\r\n        //    negative, but not both (just test if their product is negative)), our interpretation of \"rotate\" changes.\r\n        //    in particular, in the mirrored case, rotate needs to be interpreted as going \"backward\" or \"clockwise\". So,\r\n        //    to get the actual correct rotation in this case, we subtract it from 360. Whether or not the original behavior is\r\n        //    actually incorrect on the part of Snap needs more study.\r\n\r\n    } else {\r\n        return 'm' + [matrix.get(0), matrix.get(1), matrix.get(2), matrix.get(3), matrix.get(4), matrix.get(5)];\r\n    }\r\n};\r\n"],"sourceRoot":"/source/"}